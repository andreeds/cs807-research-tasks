%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: /Users/andreeds/Google Drive/Master/CS807/TASKS_PROJECT/A - The Paper/Paper/.texpadtmp/Task_A_Andre_200334126.dvi
%%CreationDate: Sun Mar 13 19:14:24 2016
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMCSC10 CMBX12 CMBX10 CMTI10 CMR10 CMMI10 CMSY10 CMEX10
%%+ CMMI8 CMSY8 CMR8
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/local/texlive/2013/bin/x86_64-darwin/dvips -o
%+ "/Users/andreeds/Google Drive/Master/CS807/TASKS_PROJECT/A - The Paper/Paper/.texpadtmp/Task_A_Andre_200334126.ps"
%+ "/Users/andreeds/Google Drive/Master/CS807/TASKS_PROJECT/A - The Paper/Paper/.texpadtmp/Task_A_Andre_200334126.dvi"
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.03.13:1914
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 781 2013-05-21 08:25:07Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.15, 2012/10/18
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa

/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def

%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def

    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 

  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 594 2011-10-31 18:13:18Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 713 2012-10-16 14:25:00Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.03, 2012/10/16
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { 
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get 32 ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ rightTrim psStringwidth } bind def

%/show { rightTrim psShow } bind def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 130 2009-08-27 08:55:03Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 765 2013-04-09 15:32:28Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.14, 2012/09/18.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
 /startGlobal { true setglobal globaldict begin } bind def
 /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def

/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.06, 2011/09/18
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  mtrx setmatrix TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  pop pop pop pop 
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Created the     : Sat 20 March 2004
% Last Mod        : $Date: 2010/10/02 $
% Version         : 0.62 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 692 2012-06-04 06:47:40Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /macron put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DB0D9D5F76C5C5A730FED59C1D9DF5D5FBAEF7A48A4C36D6963515A43C
743589C85EFAE287122D75543C4D2C675355E51F5E9DEA22C398024006E44661
28FB60CA0ABEBCFF199027EAE281F26F37D6118503F3BF19BF5F8ECCA928A9C8
7F4BFE5ECEDEEA48D8715FB8582B4E5F4AEDA2125A98030C56017540CA50551B
4AB5CC9D43F9866AD0B170752E9D49FF21BC23B0A1C456CB652D6C646BC71EF0
B0EE559CE9DBDE99C5F21668E6698A3EE478444F8307445B8F8DDF1148AE4DF5
9DB0F8C2F6652DD0FDE508096EA62FE7CFF41320BF11DA19C08B94A3CCAAD9A2
8B7C07062D4EB1C8CA21FA3699C0A2A033FB64B48F5E99C9DD41EC77A778E6D2
D05BA2965A6B7CD9BC3B9EE29CD932034A3C0C6959D6D8D8083E6C0F3F669778
B5B2C9ACB5ADDD0E7D68F94C4BEBE81ECA7BED0330B0AE3B8DE7BFC133737F1B
EE3877A256CB9BDD174AF914003490277A1B8939F72C405DAF572303DA66B688
781240DF3337D4E962F8B2661FA91E59983DF912827C213884FB32ED68A6F41F
3C10D0BEF858ED2B16A5376125732AA2489F03F9BA2DF35D2B52319BBCE875DB
7C0A7E883118AC08D9FF5333E3F6CA30683389F315B2303E2A1F22F939D85FAA
5BCE93C8A3194C2E769D3BC79E48E8242051947030DA78493A5F8939DE3FCA43
C043785C11CB1DF99E4A4224F6425964F4E2AF3A6CB5C7451C578EBD73BE0A11
29715641E389EB4D8197DEB13DD8DA9DE4D1A01CC9262C1A7A490272A3CC2EFC
1D2134A1B0C1827AE7A911A5ED5DA484D61A95A6BDD29A5A3466F5CCFEE72E8A
82843416C4EAC23472619627699660729EDBB70F2AEA766193FC15694703EA57
360981205DF0589A214E0C073F37A6E05B9567A7C8CCD26D91C01E58E784CBD4
54C7FDDE54A21EE3608EDFC1DE53D932868AFF210AB6CD984D92855357BDB38E
A22C9275076298248022C78CC36B104E39BE76DF83329F5BCF8CE231C10F8429
F26181C21E55D5963CC36D44460BE4638E8A6EA1B090C422AD4B2068051AABEC
3027AF420AE5CD5ED1AE29B2FE643B77C1A61C1AD36FCDDB20DAA859CA74D662
94163A5326145D52A94DF1AB9751C8FCC7697C5157832B6F13DF959CDF4CF182
BF6B9C032795D8EFB3A68AB72404F8903A72F60586F097123C377BB869D57FF8
9D37472B25671E5EF7B1752429
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /element put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF0F096DC5DB0696208F8543514A437E397416E28B11F692521A6C01140D481
213BF1E96355950EA688F3F008193520865039D41D023A965786F481ED8E8C84
C4CB01333102B06518473C3C50A5D63ECCAFC497178069E771AE3BEC0E3916C5
6AD1BAC407DEA8D797270765FDDC92D685C30B925EC1BF7398030F3330C53B5D
88EDCD9FEC4C1B7E8C8C8E7A08F4DA25AE42DAC7D9CDC55236178A17F2C75BE4
81487C5DE0567A4AC7E4B1E3283C1D6EB20B879343012BCAA31920271BE7B689
83AFAA5FAC67A31F7CB1A66D60945F97734EE50CA516DEE1DA5FDC2A3039734B
0B1FBCD3355EAFE589E850521C8CC4BF69C6BC647EF00F283B966C0FF3E6F493
296CACEC4502D36F0216EC6671C2C2FFE2C59E074C1DCBD228A1082B2BE2CB68
BA6EC744040EFEE133F1FA9075CC302DF0189E4615328FE5578253FDCA0DE895
5B8003D23595473A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 66 /B put
dup 85 /U put
dup 86 /V put
dup 105 /i put
dup 110 /n put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA473A1FD2E01CB1197
990EDF8444CC83F1AF738200D6B01348FC84249D77FD2C3792BE507B455AA8C4
8A47C53FF9832AE74389132337E4FEB6F45B5BB29D6F597BA179C6592145F301
A46ACFAB07818BBBF40FFCBD118D4DD0F87D65E1D0E9B88EC830AFE34BAD1526
2CE90D193D88877AE17FF093AFF181232A335E7A2B13520FE2DFDF2600CDDAC6
68C0665D9A85BE2D2CB92AA47DBC9DC58C73FE498C0188AB7FECB942C019740E
545F68F08DF509E372CFB673245DBCB62ED148282D30FEC1C830EC30BF623BFA
0EA881B42CA3AF4A21026D3B93F4E8D0287970EFF882B5191DBBDC866A825B6F
14C05F8B51BF3A4AC92C6DF8B6DDF9AEF2055C9162CEC3709816B6664C28CE4A
77CBEB2768169344499158C9FD08656497FDF832DF1959BEEB9012188AAF3E29
454D2E98E9D2ED93766F94B9D58500F7C9D48E54851B1C8977DB90D3423A9AD2
77D4BB64133FBA0365BB6782E345AC68EE6B05475A5FFDF160CAB3703884BFA1
3C2D8E3480C2A1CBBFAE6F2121AB201A3453543A02B7E4255B16915CEC901859
7EA589F1ED6EED391FAFBA2E4E28C720D03C44D6BDE19FA35CDC74BDAFC88F3F
DD41E593453005846BF25D3EB414110A9B582F75D5CAB7B17BD0286C443B9865
23947DB0CCCBA786CB8ED2FC636ECCF7BD3DA050CCAE506FD98CD385BD5D1ED3
E958DFFBBD380FF5C40FEA2C09D062644571A8DADAF118F9EFBE7B37DACBAE45
1B6C0DC54F9D163820986A95DA936BCE24219A6DD2755F33F24F34EA94C4525A
804D822AFACE27004418CAF8CF5E7B2AB46EF11BCD47472EC29BDC52D1BDEA8D
B2FD67815AFE79C7DED476FF3A0B6044407818C9E285DCBB297E337C24630B47
8F9FD6F7F6ABC4D5514DB1A80833D0831DD742F8552D05368BFC6CF84CC19F5C
6E8C0C370DA8873946E4F8DCE25DEE6B20DA7B1C975B9C5C87C26EC6ED1F936F
48DE503DE3FA695C8E6D10FE00FD677062DA32B5D337BD0C31FC54E12DCB2278
8AE0A610802680AA851B15678E92AA58443D8F08F68320A4A71C6E9F7AADE024
935748A729A65313FF958F37EEDBD2006039678D6BB6D25E020F9CA25DBB9EB9
3B15FCDE4A7C1F08061AF65DD3AE5793D869B05A08E38DDEE275244C5E687A4E
F300789BC6635B98FC3563C5FEF847E01D78470A050A0A92D654FEC40AB6DD0D
8ABD59DB26B2CF075D33F5D780140442D7642EEEBC1E4B60002190FEB5236A7E
230F3F2F59EBCC05E1848FF5FC3E1A6AFAAE553A693F68F933BF44B5DC9ADC70
9180AA9DA746289EA7F18CD6E4C5108B861524C0A77D02CFB23978F3434A34EA
F58B4C4111AD11337ADF2BBC495026A72C83054A8D87C817B4DCD9520731E5CF
96DB40A5A9B6B0ECB4D9611372221B8417D4ED3D2B61AC6124A92A802055CE5F
877F68899AA75172103CD4E895DF6F044295DC5EFE07D5CFB50D2207D68F4372
D9D3F93B57BEEE677E3F1D85B0B68485F78B8FD56FA141D01BE5161D69E23810
81AE4A03751B93960A6AB8025660CA3EAADEB1064754717C32821497F240CC8B
D7F52B1CF3B31C92AFC96AEE26C1821B8876CF3661CC9EFDBB7D66C96B57BA32
AAF1328A3AD1E8FC4EA7AA0A35D0740448C10A55AA3BC51183D7179E7394949B
C716A7AE909FC72E1B9C78B9F2DC8C390722B80FE4EC674833BC08F441D062E7
25DCCBF80383D8018275A79FFBA3D364BC130395F3AC7D4F34B61C741E4EF71E
624A1753BA4E7D836F42E275B0A558DEFA1F771E695B0E3C799A526C984B161E
B45F6574D0AC1D3F5A02DB27B92654E2FCEEA6FBE7A76B9428D08A3F393CBC0F
F47F6B20188B4B5FE16CF6E82CC9FCC7C451C91CA6DE923310AFD36AD80BBE71
FA3EE1A2AE0811FE1558E9B16C246471AEE1513467B8EE256B7298CD6BB8EEA3
1D1CEE5F8DB2393855DB16920E4F4FEF8F19AC6EAB70C2130502A644FEF8BD7F
757259A5D32A900FB4410098CFD2DCB50FB52EB4CA1CBE2228157AFDBA55C40D
BB528D0F3F8299D7B90390E5A1E11B9309803A95E6317B94A76F09418FFE4223
A529F580A1036BDC7D054CF10EFEB2013BFFB65C96E170FF29902ABA11112D31
132A1DDEA2F738ACB818EA2157A4DC9F401B90D3BCEF25D0C294BCB1B43363E5
37D9F66FAE43666D8B44AE6202996E47B30B5F02D16129599ECCAC925E0375B0
6D78BB745E626916F0CEE43440427651937ABF6AE07EE184C4D64629739E6043
EBD8C7057056C31038E91E245D7E1B1AB223825ABDA6757FCA7426D5FF04FBEF
4CCDCE61E425AC53507242EC2C66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 88 /summationdisplay put
dup 89 /productdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F4EA9934F170D87D1F0D90CE8F3EAE863FB027
FB5969E37145C8D881AAA4E0464F52F3EDDF47DE80E64E5F88C94AC12BA8B150
9F51BE7C828B8A1C16FCE9471B5CBB2A1044B616C6A566C8D6695CBD9A12370D
1A819D656695996B605695DE8CA4DD9F27860A1F6455296336BF62FE3A14A616
3C33F381FF1A0555A88D2CC01A12AE00463B07618D88455546DF88FFF7022523
118F4BC087EC4C8C1CF084F4BC839D55F3CC2EF009DD15C1E3346B5A91972358
851D25F634BF5FFCD4A84487E9210C65091479C44934B531AA4D88E4F54BEEF0
7BC9A327079589C92F1A718A32859E34B60ACDA971EB0C5040FBB0BF9FF00EE0
07FDD5A348FB7D60AAFA4E615C2367FCA050F2FC5659BCD30958F338B8CD0597
06BE1481A6109D1BAF5736FC47EDFD54C4340F456EF1F96D168467764665E853
200DC81A88FA4D91906B4796C8CC1F03986CAD53986DF47193B4F427C4F7FCEA
AD2B94D71EB820D384FA3FED40980500D49324A2F5A642FCDB35E590F9B9B083
51E48A279F80B807FE935C4D5CCF3286411798DCC491BA989061312565884967
DB038CB06F026D5AECFBDCB6B911487ED20E40F8EAA86B8F73C36BF3E1C6DA2E
60429DE261BC91061BB7939BC344CC642A040C75DD191714BC52278A8E889952
C6A3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
dup 50 /element put
dup 70 /F put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D45D2221003750163EC92AE0928C85394C9
42DB86D1A5992304E4700982E6015F53DD5994514C67DF819B53E70954D72048
BD6A932A702D09248172CC3C057827B464BFDADA50B6F4A5587BEA6EA7CCBD7F
30D6F1F181D048F238829D420EDC6802C21B5561DBC1B19BFA4431E2C5647899
ECFA42CAEE34B742B0526C1D6B872A1AD8F43640F62F3D55A9D81FBF62CCC995
25D028DCF0F801970F3EBA68EC5561996C7974127FEC1F87F76AADF9E973892E
FAD0DB27FF3CCCB3DD7F293AD4FE771F4A75F8A86040506CD46CEB95A334D38F
F19AB75757D7A8441971E04DDB98EBB1E20602B33FC7867088F5025A69BE2D6E
623AE893E57277BE17AB3EC87279DFF2B5032BFEFE0D022F6B1357813B7E7657
49AF92310AB5CF3C2E2A37BD9141E1529D5BCF6ED864CEF5E616DCA286366875
4BD1539B247C21F0910DF2BEEBC8A7034DD1B7FC1E9A806E2C8CE52913E170CB
02056F8660F8B1626BA11AAD9CE8F411669188772260F4D4BFDE575CC1C6BBF3
A9835F126C094823330A16D21825F195A1E251B8BB2E7453420FD5FB64BCFBD4
CDF61A9BFFDB50029884D92D060CF6D9FFBC1BD6592BA03FAFAC359B2AC1ED1F
CCF3AB7EAAADA26E33DD6E42931322BF12545F0499A63ACF3916677AE0523BC0
434B81D9EE5CF10AD1E58F9BF1E77748ED3BA975331C0BC1B0B0666CAD7EFA63
CB9F589E9F94823C8FFCBDECC5F0D549845DAD9986BB21A137878DB66497589A
27735FF32E1E4BEDCABF5489A552A183E7796E12D0C2BBC951515973EAAB768D
99098C6A730E91A2B7AFA48CBBE8268CCC7B5597F12AC64D8ACE67103F4B4DDF
C9E39DDECC968CAC561D191259F6087187EA383C49E938C48B719A76C4E9D107
75CFD21D58160825B23FFE85E5923B0367A66F11EC500F551A863B4613BE8CF9
C8A584B6267BA3AC60155704C8DA0CC68A469902D532AB0E4FC7E8F8B058E561
06D797292D2ECF0C39F49BDB2987118A4DB449F1DB86CC1D4316228F0B77D35A
97F3776E3660D39A9D78E6355C0B2FCA717D4623D99565C1D0E2663FA57A50CE
AE8B6CD08C18FC7547D71E68F98A2F8FEA42F161DBC25508252C7B0C45412E6F
A5ADB96E6BB3156BF1A8CD420F6206B1D692B625DC00D5FB5E4A82689CEE5E12
F3408C70D7F0BC6BF902F8257D8594FBD2F4678EA52504B95BCD480DC936F209
9D46909527CD2F9DC59C89F8D451DCDE30EBD2E590E20872C0CF8BEAC392B602
772F773C4B597CF6C5DA2A067C8CEE7CFD3828110D37278A267C6D8471090BD6
27B5F8BDF206058E26A21C7EB353C5DEDFBB7809C5CF4BB7976BDB0BA9541CE5
DBD9B41FEC4BB01624B14AA441D1ADDD7751E43C9F05665E13F73941268E95B8
3FFF367CD3C7EC0CAE637E13486CCC84FCEE0198C054892646A66D0D6649EF9F
8EC32FAE5DAE6DCA38503C0941318A70FC4705B79FADD5806CD47DC5482ED3F9
BD038EFC1E633881BE3AAE22213D647C9234D833775AACBF27B654BCCB7DBBA3
CCD426614837EBDF5FB1FB5CC0726B3671062ECE6A52C309DB87B7B0DB23C79D
F87D7DDDB0E18BD37914F76C7C9BC34F9587FE9FFCC2F964647E27919FAFD504
66EADD3EA27F2D6A0155C83F129229692BB2995B86CF47CA3DC7807813C0D9DE
9129B59100C050AC94A13D1341DF2BBD40EEBB93C3C88AE8510F9EBE4011DB41
462DA3DEAA4CE732EC876F4923E0F26E81101A107E11B59905A1838CB32E05B0
9EE98F8981D839192D607C9CDC69013C764E81A56A891367DAF73E88F3D249A5
E40A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /theta put
dup 21 /lambda put
dup 58 /period put
dup 59 /comma put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 118 /v put
dup 119 /w put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A90B8A9EE5C613CDB822F07B
115D4C174FB7945535F2F9C2875C9675143B8D98DEFD3898170FBCB19B4C29CE
1E6883E0F68B5D42751BD7AD09E3EB745F0A6338BA2148B769B5E1EB21109414
C1615EC1A1FEAD5831938F74E26E1F6BF51136E5C76F823D29D35078412923DB
B3A32176ED7935058ED16528D28E50E37BBEB1D1554503645DD681BD9CBEC596
5E246EA09BF28E98FB55C1E009C35D0DE1F77393EC792463AD99F06EB05CC098
26600D42045A75CCED6ABF5FBA7CFC21560FCFE13CD0B7F53872A09449E7A748
4A5015741939054CF994DDED17AAEB074E76FD2DD48374C2B47B17CECC15A13E
3E24ACEFB8A3BE7B6CD98585D1FEDC7BDC64D393EE6FA025BCB36A327A1EFFFD
BB4759AAA590C25435D3CA9DA22F50000E0346352AD1EED4DF13A6E1A1F24E0A
A068139B719A22BFF5D31C9CECAD781D8DA0B57A852D2D0035283F0FCA54860C
73647C187BFD9B11B12AA8F41413ADA6FFA00727E8B04D5772B4D8F8C7954254
CE8BFDC60BE5182326E4C36D68773DB94151477D950A963097331A2AB764C12D
D6D8EC23E4A06C17CC83CE9157B238E4856BFB307530289DB2C0F394236A99C4
6733F751071B28D285C4506B083CE9A632AC6EE6E82ADEE7BF522F1A26F91461
583D610ADED4305CE59C8F583BC4E033CE57E64863E03A36C178F1FCEB6A181B
7B53B4792849A1B572C5AD9E388260D6831069569AAE54250CE8670507FC2845
980FA0A4A01906D69BEB29FE008A68C5F7A5DA8635480EBF1453660105936151
E5E263DC1316D10E9D9F635660B7AB4463FA1B78E9211AB7F7931989DABF809C
8CE7BFEAB4F33900E37EA87950249C83C6003251A2C5549FADFECAC1191EEE53
56889B48B3991DB1162B4D0E051BC6199FCD3C1021A946288DEFD755CE78BAC8
33E78291D8A381E29C387705F265E441A31D243612B70B601DC7E85555EDAA0F
450AA909B3A6252AA5951D8DCE74B89B8BEFAFF87528FA377E43522049A45359
32B8E04B8DFB750F6E1C01DFAB1C92B98D9631978E9FA28DE9BA0FA60BFEB808
0C5C6E3FDABDA49E28A567E4F1D154364FFFA683A83C9AD337F4D78D842145E3
F18CC74ED73AE033F3452FF0EDE9A1D11CA822D2DA2828F8EEF5796305C25828
B6171BF8CEE25942AF84182680316A940227688E61E763F30249EE80789414D4
22C90D1955B3322DBC963D3C242C7336CC0E7E5D08014F9ACB3A68F2EAC23127
5A581AA78FD09C96BE4264F8A67BE88C0D57DBAA8D3C17524779698355466322
943F4410DD78217D9398962EBC4C7C10EF5A68A051656B8EABD65D029658E90B
F990D4155A9F704079F98A3D7AB275D9B214E583690930A017EE9F2EF1BF3A6A
26F65B125EA65E01FE0113B486C9E1347F2FD41C7EED9CF5057B40FFFA9A9C6F
318B0B8C09644B11ACA91BD6544B06AD48DAD5E3C927626C757C95B04E08302A
957D537D345387C4B0FC219F61DB609DB4ACC8A73CC9905EDFB79DED655774C3
F78257FE9F1E4A33386163FE866E1FF87546A145FC7CBF45AD44B1A5ADC12A8E
0F38B0391B6404F6B2465E92EBFB7D930DC6CCC990D48FDB86A5AE0531ABA64D
39698CDE77CB43BC5CA48F1FBBABF66CA0DCD4C88812DC9193A6EBC268991016
D082B291DF5D11A8307D573DDE24972E3CF2071F84EAF55202C4609D550083D4
7B50409FC48CB4FA45199F0F8440BBF9DEC2A53771B8060DAE8A58AF9F030A8A
46AF2704D2559F4F68BF74F7B309D9BF1AE3A75A69F72497A2D70E3E70205FEC
00723F66D548CD160806B0249ABEAAD3612012FB74E19D375BE2A9BA7D6F26EA
35B5B5729F90ADB15C77ED0D1DA02E49FB82BBAD72F609EF17BA6BCF79B79D52
F5E8D988FAB870EB34FB7F9CF83DBE179DFCD4B07A0273FE4780A5FE5F37F062
B67CD109087DF46B9A6923DD6B50CC121F2DD3B3DD49289DAD107E93BC5B9D98
7B94B7B7632A7BFFAE470CC8D77692CE684F935B9D17D9E924E9868FA555A8B5
D5EA7AFEFFF8C24BE5F38159CBE8EF6727877B7406689794853405761896A592
11134990CDD832A58C8804F4728BFEBFE20EAB5C259F14C22D91B571B426EA80
53E19731977AAC371B460BB5E8CE3CAE21C2CB21AFE31BAC9DE6348FD1AA1770
441DCBE7BFED470897C2BAFF4F67930BAEE52F229F033A04FC9A1FE6F5263D66
4B98DF35EACF599C6D470491FF8420C2B1370B051EA860D5A532D9065AA1449A
653EAE1523FA678617D31F16FBFE6849BA6F4EF5479D626E7B82AB6F9AD3B524
2FD74364465AFFC22A52E92F370DDDB8C774C125AF6B9D39E9AA0B4293AABEB7
5FA11E3DF4325DD47E3C79CDB4AD7623655B3AF9CCF7D479B6A67BD7CA8D2450
F14C2D9E2957C9CA1136A2C1DACD98A981361F026BC6D450FAF7CA5519AAD042
9DF16DA4B81B4A5628535F580E3BB089C2D53B8FEE0356265B184570D8B645AF
0FE6B6F76D5514ADB7122A339E3116C81523D5053A88C0473B4023F6453565D4
8131681B4CDC75CA4A66151C72E06092AB8B1B5C59FC60DB9562628D5182618A
927CEC9EA57D7AD5DBDC4B7F72D2F8D6F3C477EDC5C7491EAD20971879181ACB
1EAAC47F30B35ABC088F01DC5C2296EEB213B4E70544518DC144BDF742721392
4B2B1B0E82CE1FD1D5A9C8FA3AFB549998479E9686B1B52EE5927ACF626BEF76
AAD31A7B70E717390CB1CE5331C49C63F61A179A199777484D0AA181C4426B0D
357BF274B4B8FC7448B7CA0E554E1588B53707534BE5EE50BB91DE0FA07D7948
FB1AE972BF309AF73FA75417605A44374CD9731B2C957B91F4C5B58C3AA4E66E
9BC2490E15C3D66BC774DCE2F08AEBB4265CE350FB2C5EBF8AA44AAC6BA74DD5
1DECCA950EEF68B9416527876CC3D2C8DC99DDE46DED24FCC3D524385C27DB86
9E2D741EAF80767798C5BFD971A6E6B14B793A4C88A81058C1CD2EDA0AB3A1C0
D69160A774AE9C66C13CEDE6E9754765492900C98B65C8A23115730B9AF74B43
6824056216A2F96B52681605EE8A93D2E5F25EBD0D0CCBB646A6E4CE1001A1F6
1F82677720BDFB43E6249882736D267A99839B622FC35947E49E644D64F2545D
E24C17B45A78C317A5F81B2CABCA56A367CE4FE9DF42F27542E5652AA708DC57
24D4407D4C96B7BD4F4A842185BEF8236ACF9D1E7F0487100C837504C524C04C
842B040EDD0340BF26C913646E9FB567299C84F3F99F65B1DC63EEA770017923
28348B3A1D3B714A26C921B671FE7FB80F654F42474EB14D618FC4B5AE1D1D51
4AC452A0380D754B3644AE7D1FA1047282EBC7BAB4BBD19C295EC58C12F597B1
C5DDC299C0D9D973638114542CF6C451AB319EE0314B921514F62F0518C1EE3C
9BBD14D6E425086F49A0D30020B0CB024DDE3EEE76B7EB6488FC5F90CD495E43
E77DBC332A389026A4B83BB5288698650AC823C046FF580D09140D16422B8AEF
F56702B0666CD81A6FA16809BDE72D3B727EFDA2C689128E068D8B06997F4D57
511C02E188F59B4A7B7F95E8A8F466133C8D85211774D0C465574903E7C612FC
79191EC512E8946B722797C61AA434185EA85F586ED32EAA65DF9AE5668938A7
7A719CC49249C2F9174EF571547827F0E958C4578CE3DF2D3568909CF1E38FC6
0D318D4F818CE90EE2E1C8CB7DE15AFA98AFD67CE852F2D8917185F59734BE44
E9C8FAF8E0CDDD785B073B77DE3B022F9903A156D575B8DD4C93BA6A73A1CF27
9E0996D92BC05100D8F596712F521D6C37FF7C8F67C0AFAC40561FF7CC07F395
0BFFFA171198629885BEEAE32A54199CE27471007DAE6EA2B183139F1ED4A57B
3F6B281C0EDA27BB0C09C3B3FCCC9B039334E9C36CFABE1F7FEDF030C2A77AA7
93C05F68CB50412F9245713810DAD7CE08EB089865B87CE699E38F89CF5DEECB
D1610D55BFFCB79B6400477ADD518F64AA15215823E27C51F3CBF3FFCB96FDEB
0D89D92132E97BB7EF1B94BB22A303D03ACD0701490FDF4192B58940C95D146A
C597397B19127F1270D7BAFF5DC6983C42909961B86AC2D774984E5E05434214
099B18D2F6A7A16A7CFECE53D2BAFEBEE07969A93C14B1A0356F3E0585D3899D
2AE23B1E37F63151D7D1F5C34978AC310DCA83897C0933D53EBB53B48489E420
659C2C4D8043DB0E320BEFF4053A537CF82E690F8B8005268F0E26688E2AE3C1
4D9800F95551653051F4F15580640DDCACE6F88E9C9C4105492071BE6B36F385
F7ABC9A08FE994CD19ABB08BF43C69C0713B7BCAF535942DFF5DDB75E8C16FA4
29DE6123858BADCC0E79E42651CC0E712EEDAE62B081DB8F6BA8C3C95C87CFE2
590253D07FB36C55D6B6DB384A04EB932DDDD3B74851E9AA0C45FA02B2FD584C
E45B3A9899C423987E912FB235785063A41132B35B821D8C4D3F1FCC3A468F84
6A5BD1A85AA9BF0B224338339559D29DD62C40E5B161AA41CB5F23F0149765DC
3552D5A5FD71DE11DFC2742BBBD4E220F76679C1EC7A817F3D6FDE468CBA3C8B
1B7DD1B93AF2A1C0CE5068F792223D6E3C59676E1758C77F7D3B8D501C4CAC38
ED283C64915A0C894D015A05472774B67D02E99FBA477AE73143CA6B5951C6A1
257E6472C2103B5D3304B53CB6BE3553BAAC3C560A07ADA19A8BF7590C1A27EC
8093B2BB81870C90E4A2A6C43C7CC8195828FD7AD748D3AC15A984F0563A0CB8
752284CCC60DE3D03768411DBD832FEAA498CC4FABFEA6609710EF32C7439BB6
FC541C2257F490EC8F5C9A1545807C89655565C468C26DE26BC2089325A7B8D2
904DFEC52997C60551835781D1407E2D2E88699C2D644E892F7317ED1764BA96
3F45A3A719E43A25904D1F75AE44E4C0B37D46AF937CB8B20E6D08F37B245AF2
263CE4418EBD0E04C9581B102729DCA899089C5071B0D02D9C176511A549B3AE
EBCBE6CD7AE9657E92DCAE00EBEEE4D73C3EBCA3EF7978576D8A48B23ACDE627
63856B0D02481D0C5688895881550BE84176BF4C4603D606A27CE21E4CA518F3
290AA1A9AA58F02858F4CE101BFB1C88EA7AD7D107A3EE7F23D1E7C03CF17E57
E8BE583B8321828464DB914B3273C465E110FCBBE617BCA23A23A28FD1ABDB55
E11202604DB8F0D0AE5461DE890690E5C76B0E2224D44C87400A7E5F5855E7D3
8487F9B008FB83573AACC0116461D52CD645EF27A96616D549C750FAF3551D10
B255A73393A4ADCDB37FAA4901591EA4C93E644CCD4870F3968E58109F7ED78E
F64E578CD7D8E5B4E5A87560547089D5F869335332E0CF05C754FDD584590C14
76746BC12691A41D41ABFDD5C467F00EA8CC87940CD0A4B7C9280963635863C0
A9007A52E962C9DDE63C88BEFFD2DD15792E062E7CE0A0CBAB53ACC9D4553579
3A3C8492262F8A075E56D987938ADB8F139658810F2F299E2DE54684ADC1A67A
63A4B171F81EF0336D34E5FC86444C72D3E26B7347E6D924E2FB46FEBD280533
9B944EE2DB9675559FD28695E62A70305F849C4137428B83942207C3249D0964
21693927D4FFA0D2DADCBA3804192970E504E73A92ADE59E60765ED90150BE74
4BD46D224FEDE824C6DF29D0F11AAEB47352FB0C846F9CC76DA8DEB2CF0F83B6
F1DC0C3E3015F68E7AD9E9722EEA082EADF6FB326BA0D4D9F8B2EDDC90E752F0
2492BFC983F23238767F9424CA2784632DF3CD1186E3681EB59EBED0B8390741
D97D2090A6815B5EB14FF859092B0744A51E55837A91BA7A54A591D574252B02
7AD4A8BF5B09B36D9F5D90E201E345B07D4F8CBA14EE966C81F35DEAF635E65D
7611D2370C6522EA3DC5E2F4FC8470ED4A3C2E0FF4999186A247C339A6126BE0
0452F1ECCB1C9860AD2ABB8143EAAC5ADDE952366437A85007A9A3A3AB5C490E
9BA91A58F03E92BC436F241DAE5ABCD04B94C1F07C4CCE0376B39260EF1F442E
97C17CC5393573011EF26737FE5DAF86C66063DFB440BEDE3EDB026EB4A8701A
80BFC0A135610C318EC5781004DE514C2D13A18528B870F0D66744967E86DA33
9565C81F6E19757F14F58CBB44A692BD5DC2834937DCBD9960ED689561EED911
FD3FD0B9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 48 /zero put
dup 50 /two put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 71 /G put
dup 73 /I put
dup 74 /J put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360CD1885730E570A3252A5ECC419A7F
D124C3FB3A7D58C0EF6AC117F50D7D4B6CD852200A1F3193BE101CBEF414F60F
85935BDBDD23254648DEA12B95871AC8F859AD8C9315B258E525FA7BB0DD294D
497646805C3CFC1CFC72C17EED56FC5E7A5FA54691474DEA0C85DD18ECD59923
619117DC6AF37242576C4E9A56BFF2D3E717DFA750607BA2BE87050F8AE8EA72
8056655F9D9DA1ADBCB07A6697F6664AC6B6C1F5650255776305892A6E3D986E
10A3F76B65763C33A249C23C8616B866CC56D8440C501D46E821750FAFBA1CF3
06101C7D563C43EFE7A7AD8D402F232034B7BCEDA9C49AB562DC60CEFA521711
DB3D81E0400F776034AA7370C867BDF8F8CBE2F2E59D2099F8627118EFD202D3
51B7AC1FC6D959ED360AB4E5ECB4966369BA85B6E7733A5C7123CD2519845706
4B684F1C65D278FBCD01A64C1B5BDD5798313CA0778581AA72EC3A00929DDC1E
FE4CF94D71EF8466889B663E698456B61D69BD455268FFCAC0AAD81B7442AB1C
8D5B4A9BC2ABA4ADFFB5E326D2A3D771815ED0C4B93E527C3FDBE3E9D7DB1B31
BBB1B9E3ADBD7EAD8C3F5C8375333B014B75154A8A07D01FED1C412FA9813664
082503DA2F8839190054DDFCF2DB62714066E588AA61E764628861464241BF4C
D438285B92A32531A35E7D0A43D48A8C8480D9137FBE1DCF973998BD0204CFD8
B0A8B0A3FA0E0EADDC2F49417E655474056C7633EF1DA737CFB0B4EF55AA19F7
459370FE7CFD4A2CBEFA608E14A1D0F25D154707E1D7438DC758B276E8851C66
23BA8FE1398B4F68B4AC21A5965F8008927C1C547F3B35D43FA75D5402116C25
61D8B04CA8D3F2307C04B9371B324A73A4723B76CE7FBC4162C2DBC8C2D5C768
1ABEC649ACA756BAF69BDC40B3CE28A9BF7CD5172B1B9D4F7A258BAA94488A1B
1BE024406C0132D2963781A4739D5F74956D7C9B33DF938325F0222F8F63B3DF
8D8EC0279FC83D6FA946F1ED49D5F436EF0E377B784599432DB594F62C8E955C
DB8AC84C45D73E3B0276793629AA1D1BD1697DDA99D6D0C7B09F7D4988BEF2B6
6BC7656723E8DD38E27D05E8013B03DC1472779430F69B9B2A8836331229FA9E
6D10CAAF783EBC83564C62170053F4F072CA460F99E254F73D137E27F970ED4D
0C62D122EB14E88A8AFF8D5AF04C3DB8E9E10BBE2AAAF5FED0D21D6EAFB6B634
E8CEF5F19BABD4A2B604C6BD935BAF1832F66CC8B340A0567A6A75CFC635036C
F27FFECD13744BDBB6803FD753A9E4D625BC07BC6EB17A87B8908EBC1946882B
A9E31A2293DB44990FFB38A6DBEC4F5CBE423233DA8ECCD888428F7B2D2B92EE
24D950AA619487778737F2CD354ACE5EFE305F453E42A4F885FF9A8C27E9E1E5
1E60FB6F0968D5B3F878A47021215B231F2CD5DF4F6E2FFCC967E98945AF5D6F
0EE69BFAB2C63210E805687E9C2D4D89B8A07F5ADCA73CAC98C868238E6576A1
03E1F26CCE6C243A3BE30EFD1EB1F5F8C42AA68640D68B006E0ABEF9E1041C81
B2588574ED227BBC372737B67815A1987EF8D90A43B1264FD925BA93416B6758
A146157D85D710E0C35F5B50AC2637BC7011340E49D538F2BB89A0614001C00F
5D36500F54CBA9CAA12EEE566EC7F61A1476D42B5354A454FDAD50DAA81A85B0
9FDBBC8E43004BC0D2679A1BD2C97E1E7DB9D79E6622D3B7A377AAEBFE99BCDF
D32E1CCDC1EEDCFA3882EFCC7E682EE59566A67D3B901D8CCC07E25C60D6A103
7074AD36B274E3C63454AFB2140151E2B06A3C521BADF2D6CA4E50F7F72E0125
12A69B647B765FFAA4E16B4E4B4F17D6CBB30775DC75B1276EABA9C364A37169
F77CFBE88804F4BCBB80DAEF44BD3C3C36FABC9898C44563C85B88D8AB7374E4
85E9CC4940524AA2CF8AA08DE589B5F95388F046FA29EEE78E16CA706870F6E0
AF823FC34D8DCD9EC9C27AA730ECEC5F7FA382BBE354C905D60072DF20DCF48C
9C8698D4BFADDE6A5EEF8285231C5A327F4CE2DB9549BB2768714FFDDA18C2AD
C0EA360F1C19D665E819D9676F759FDB452EFA00A9F24119DFE546E8AE473D60
01FF7DB354F7978C76EA1140DE2E938F3761CD7512D36FC8CFD12E2C725B7A48
0AF4D2A6EEE4F42CB501FC29BED00BDFB40416B2EBA91357D25E4A765989D61F
0EE1B3F0CC049B7EFFF8F416C0D7E692826F773BA5DF87F403910E9670F14739
6F126FCEA25A4DF11962AA596812A9BF276C054A67DE690D085CB3D6180C582B
EED0656C95C7C2D3E869EA2FF60FCA38929648A93B89FB99187A15B6664DFCB7
DA1204E0BC7C8E2CF80FD8C4CA19C42D9B5B0DA9241AB5C38D2094CCD6B2162C
59EE0F5665701937C9A371184E94E297F1EDA2D71EAF3C21D157CF00C0D117BD
7FECD47FB256879364BB8A57ECBC76B0BBC7EFE1283953EDA89022EFC9444F51
13A7F4AC18F6B4D489B5B0BDF7CEC9F868A7D48204E64E171328BDF66FFC0D41
95F4B48D9064EE8DDAC3D2EBDF467B178BFFDE96C2CCA26225C8F354FE09CC47
F8BF78354C6875DF9EAFAE47DAA13ED7195CB41E267EF54C283B2DEC00BE4819
42CCDF43B49224E9EFE26623715F4E8497E4A1876A5692080C6A46E74FE33764
9554B1D0FFB2CD578F409F8AB7DDF30C38B2FAAEC91F08DDE499B5BA7BE03573
6F757F55AC65D98952AF12908A9668F1A87F4E5C213F4AE3350310B4B63CB135
79DD4FB628D3C6037CD09CDAE49EB4A69A91222D5D3703441BFD2F055C3E9508
E72FCF084F4C02FDE73EAC531F71971475BB9EF380C8ABF4888B924F3E5C9F11
41784AC73B62F0FBD9A4433E21DC7C677976316C9E0DA50740EA84DE02D7CF62
DCA512F288952B3570B5AF88DA46842F1F93779CEB22E2535A8D2540D6F0ED1C
FA673B169ACECFF36D0EAC5D017C4C15E5359CE1378B11F6B5F305541ED60212
09AA5B3C84D89539205938271B92CF78F8918CF731F1407AE142B038B532CA4F
BDCEFA4932167B25F58C8A76AC6C4A8FFECC5C4BAEE531161D0597EA65B213C8
9CA75D29AF3D75C7AC80DFFE07FA49A403F9BADBF4F557D4CDC9D2CC81FFD34D
38A63D1DDCCDC06DFFDC47A4FB9051EB16AD16E6A266AFEE24D7101CFECB52CC
A7516425529D8F2DD836DE1579E746B57EA70661CFB5FB66D74F19959C9032DB
E112B37DD37C77A7166417AF207D1BECBD54BC44A485B062196657C664B12A59
DA4FBA8157211F3B7A59E5BD445CBDED1E04A731BAF071A76EC2DA82509283EB
85A5C6D2BF76CC725850BCAFD831FE9BA70FE8AF0F08CA7A5EE12225663FE632
EA633F14015F703D8FC02B00320A00C0890F1509EA4D4480CB3517C5521CE935
07F2B6A7675E2DA67F0FC8A8EF6B0A5DB4E5E407374F0F15E178CD42A78038F3
3883ACD2135512EB1D260D52D28019531E38270257E20AA75CB83761B959CC09
4DF9E8BFF659F7E1363E7988A7A0B1744A8C66D1D8E04BE070578A23D00A5823
9B02ED96F42242453A7890BB3B57FB209981B6FAA3BCDC9F98932DCF3812826E
DBB0EDF2F6FC663EDE9EDF028C00191020A71173EB141C3E5B1353475EDBCB0F
E879370F4D3171967DE2CF9C1B3C6A3625EE8072950A606224E597FE989ECA52
A8363B7C2E5F346C647C58F7998AE84A6D307B756A4366CC0BD5F6964E47052C
9B5B6B4C827F526ACEF9F3123D41CC91083342D6668B97B4196EE1EDE435E7B8
137620768D338620C4623340384C80DFE2EDDF16DAD94E397A670A14DA936C14
E9285796FF6E3A8164E020A8C47C32D850625317C9D3A890114F3390DAB36BB2
D1E42B2C949E06C8F0A3E1E8DF7FBA9241EA229B817AE9079AC33EE1FADC12F4
07A8C1ECC7DBA84F189BA93710232A479876DA2C75A31D4E71D2FBB5CB6218A0
A6E9A626849B4CB0FF403FD4C7C5C3059E3DDDF3191DE825F6072FE3151F007E
0B89F6942CC302503894B78545A1AA4E33EFF8051C02D65BB666C60497D4A3A8
5DD8865F7822B5345463F62989225D2AFA88276935A5A822457684B19ED7759F
2394648A81B9D24C8E606B990B731B3ED8D5320F6933B601B6B323CAFEA651C7
C249CD3718AD44C11BCB5F74BF983182075CEC1D0ECDB2F2D0E79E08F721D250
01E7580B9A88B622BDF872295DDC64CFC276DB7AE27EFE617C6814741A1CA0D2
7942D4CF313C175FB0341375EFBE39E6F5F37090C21F30535CED246857E373EE
5E489583C42E9475A2E812AC784BA442CC17A593E8B96FD30D94593E6834849A
2619A1DAB3D44E7B027E66C9C15B158B03F3548F9C37D3C49302825DE7045E88
BDFD1DD165643889CE2DFEA0F5FFA12E08BEEE3B865FC93FEFF1523A78E6437A
26E3FF0698FDAED780254C93A25B91384D5857C63D52F3CB20F34F8753291979
23B7258E36C62C59FF46BE0C0DEC0B891C7377BD88E1D9F33F26779895974290
0DB25DB41477263AB9124ED3FE3679584F12C57DCACFCA94604CD46309E3236E
7A358A5FBFB70C5DACC643A879C1333F0F746A3B2A659E741EE736D90019CB6A
AAF036D922E713B50B1807FA99A0F30BB79A8E17D92ED9F47E24C7BF43F79203
FE1EA64011424887F8F2FCE5555C27D22A01D52FC907EEC4478BA68DE4304A62
4B72E9E62E250683378766C1640C22E53676E6D1FE1332BBD38D1B1B3C29C2D4
D93CB024A210B08E9F1A3BE5CBD544DAB41967CB204CF4AD64C1D8209195826C
70C14BF91A501C2BFF41C6E70368F1BAE0859C12E61579A55F5063EA683E18B3
6F999428897A1D3DAD839D2273D11977746F80880BF736217FD3880BC63C6AB8
5CB4454B617C8C30D0B2353FA45F1C35C071017A1FD43EF6080DDF344B8627FF
66D1F30BA25E2D01D0868DA724C2EF27EDA85F03A5206166E9DFBD2EBA81A6F8
68FB1397B7BD3B207693E2427B7CA2A0EAB8231BB7BCFBBE6F1E69E71DECEFE0
19461E3985B344461761345CE80C84A5723ECB7598193CE5E75420FFC8B447B0
007F93756C704A618FE6977339970B5436C1F40AE3AC907C00B1606F289DB8A5
CE885D44BEB9BAB8DA12E16B4423137CB8EC0781EF5748593BE0ACC7D82E85CA
EEE817E038029BEC3F1BFA0D8CB5CD435546C831C2D8F26B5A11DF983130BE5B
F4C9C0B1ED640713F4AD12694B15A5EFDB44DAFEE6870715AD54FDCEB6CA4EE3
B9549710D10A4A60BB8A2D4B9495F4532173C254AE5C88585ADB1AADE855C2D5
4DB2A54C1A3564E43BB564302F50A419F1E569C414DE8C709E12ACCB99D49A7F
11BE3CBA2BB32C2384F450AA4990037C640EF073522C5FCAB5E77B07DB698D75
3F3E488482FF9311B8243A92C21FB58B9D80B8926F0E4B4693B8DBA8D1D1D55F
46A25A02ADE62E5D400F0F971F6BEB7AEAFF952EBBF94B7AD6AA7E356B1D251F
7EDBD5CB39B9704D2BF8208F8E93E5D56D444DD261D63CF37B51FCB64E4148FB
32CB522A923FB8FE66FE9C5DD0307533BF06FD3B8EC3DFD5B7FE8E7E653DD37D
D8A853831B476642235ADA91CAB8C4661346A10C32B1E078E851BB36DF6E44D1
6960457DA3BEF8D48BC9F08B4CD659DA79B38FE9E8156DEEE7783D8389A10106
D3E75258233647DC30F6656BA12C3A6863115F1A4B4CED1C026CD7E8283A236F
B341548FF2C6F9CA905F0672527453A5445F9A9F9B20208016A812C468CA6CCE
828048AA4ABA03E3B0A486E887528401403F0B21C0178FF604A26B12DA8397DC
7BD09D3C2AFD854D054D5715894ABD985F42E10527579541F2E60B2EF9544B80
AACA880C047242C9001EE13427DE046E3DD82B559B60C579431B11B5B90834C5
A01B2457A0A7E1AA59EADD5B8F765F6A0EBBF5FF78884328EDB335820D49A6D3
C5F6DDD7BBFF22EBBEAE3FD500A3F3454AA2DE37281BB0E8A5CF63556343F990
DBF443D634A9FA0370CAC238B9F1CE681164AF5ACB42823AAE7FC785D191E1FF
F6E39C9BCE0240732696D78EB1B9727E118D91736AEB20A7BED897CE233DE3A1
CC4E2F04E18ED291BF9C4A8F72FE64BD8F387F89763363B3B19EC3C04AAD27DD
2B95DDBCF9330854C80582DA5C6C606372AB44A108B021265BA13105AB3351C1
D87E2477CB9BF738A978ED7B7F5C174D1A0B0AF65CF354086750026653ABD9BD
D73C985EA71C1730EF8C12B58F5D096B98E13D3309876CCABDF6DE4E3CC1F97C
E8B2A0842208682E1AEAE1BC622243CCA647E985F724D9CBFBFB67CC4C789390
B97C270C44B8916FC716C290B2D9E103007CB429B60EAC343124C764FBD53739
1A056B67A5613AF51DCD0D3457B2C3A47E5E212C96B78CD1DF54CF18AFF05CB5
47384F87F17D4BDC201CE5D16F6430A1A4B72FA0E01578771F1D6F350AA4B929
D7D212E157BD33540170F330AD49C4D6A8DD88BA41BD90B9EC5A7B4EC3863B41
D908C29FC07667FFDED8F46D75B729878874ADEB2480F7B62DAEB8FD1BEB04A9
F7E797F3BE32E9C8DC4B3B12361B25E481C4839BA588582D17C096073234802E
4D1D770D084AC8FD54EF3C7FC8803B09B0984AE37234919DBEB1B4F5E4CA05A9
16189F6FABD4AC97B21F02BEBC3717BB9ACF2108C74B3D3B533F9ACC26CC96E8
5F834BDE0B86165F4B19635CE329045420C888556830984A62F69FB12334047A
D69620730D012FC18CB4C307EB72B9073F8C31F2A10C2190D7FB25F4AC7B0163
39AC2899FB07E3EBF67636AC8F49B2805F6E2B423CD331D58EB7434813ACCF1D
8652941C41A85A9271FC2F00D0F29F16606E5DCA98EE46460CE79E425499DBBB
21E553FC2DC569A25CFC7E8A908E8CE3E39E8F5F31CF6465AAE8252F90D19010
63FAE54EC31C5F8A34935A7119504B0B9F8CEFF6243CE53B5B114714BADE90B6
B5235B27FC455F6018AFEAD0686EA67C086F044E331DFB038E1742B3DD2CDBB8
FE1B9DC634B471F39A4214F1C8F817ED30046878473C60F37E59D050E0BC12D0
1AC9649479E866C0269637AD681BF5209151A1B90B028B02DBF13237A4D36C65
BCE28B2FCD3FD2D77E0A4307BA87F67A9F7B53166E91C15316671F07CB3CD66B
ECEEC40BC787301213F20901F9C4F521E22C0F0887BAE47607DBC07CF53D6BD7
BED6D49C9E338C4522D50523CC345946CDC70DB610CB3FFFEEF5B4EB48945D05
416D277B9ED597B7D3AAB9E8FE15B80A7A4F0ACBDA1E28D1D418AF2DCE7FB3FF
41FA1E22DE3A10290AE7E3E0C64E49BE3F4FF858EF00BBE9FDDFBCA554CB7777
6D1F34420EDE7825195B7B85B30B328C034709C39A7DEDC61033DABE35FB3C9A
46D0727C6F958E2369DD6D48B59F14911EE2B624FCE44A8C5C327E5706A57937
886CEE1C9AFFE2771A49360A4AE7819E4556C2E9EE3967CC6646734AF2696225
6687DC547040953D3D38152E33E94835E56202968F21E37429F0F79BF6F8737E
C02B565F73D880061F680A37072BFC252984E3494DEDD4FCA9578DB4E9224B01
6C955C176D3D1184C699DAAF13CD3EDCDCA3830C1933249A6C12C85473C21B8F
1784F4C240C78BCCD7264162EEE473706A09778C4E288922921FDF6ADB42D78D
88DD321C8B082E81EE08E82F5C1459C4C0A1989F51306CAD4BE8A4459A7B9707
314BD82B172265715B91D83697505BAB0A2B59E2641FFC6D679E6820DA54D24C
D3128A7DAC662AB1D3D809F95C4D13717FA0DC9BA2CAF91A811C47380152A697
EC020A23E2A1A7BB2A6B408DF0C1C8294EE303B69C0FFCFDB652C261069F5EE3
E77C81D0E7ECBBD0878E10FF03764B85B81DA29882139221FB21FFB8739CB09C
2EC47C02DA6FCE5B1BEA1071372333C4E74C5081DE9228FD5EB06659CA4E4DFE
A2986252B284390F021C6FB40840CA735F8E1A9B8974F5DE4D523CF34165486C
125111B64709B69321DD0A86DCD2A74EA413C9533776FC0DBEC2EE505E1A181A
80A5CC49A2633CC1AA404166F11A671DB10D74D9507826A81854D9217CCE9815
31BC15FDE092C7BF56AFEBCD157436B63B5F8CCCD0659046085EC83BE50AE8C2
331C510C4D326E563753760F58A99A7E4C8C8850458537A5CAE11EB2F13A52A9
665023710BEF2F535BD660D1FB75215D1D6BD396610BB9EA0E530B3252D8DCD9
51C1E3DD12611E31943F520BDA423511229061C6BAB10BA5A02C771CCA0E57FF
CF013C113064AF27D2D9A004FB4EA249C93B310FD2BB31324510CDDB7AA1E2E2
3AC33EC9A0D0B9147EB70CE86CDFB1C0A4262ECB4FEE555F2D2681F0725652B4
8D313CDE2DB5F08FC945D1B515AA710FFEBC2BB88C486CB504AF93E5A63D9016
A2CA57EEA45C9ECC7D3958067F234374189683B716D68AD8E42921EA6EC41307
E7327B6917543BF1C0F173EE6A5134FC15F90AA675319B48245414E1303FC97B
971B55A1E67B7A755E79095D0D8ED5A79A21CA3D289BA7AD003EEF3C4CEE3A01
6EBA9F9AC35FE1EA0E2C26FCB95156EFF526BFA1E38D70D0E84DE2F9C35EC59A
663436E530A14918295FCC9865F0D9CABB6D805D21DD35007C36E3F33F9003F5
78CD0A5192C1F76830B08F0E422611A8174015AD4274DB6D1A68F3838FB1C8D2
441083050AAA381256E52D0E1479575987BE8359D9BC7914B433292A643387E4
56F0623E1B65AAD3815C62BF98C2EF5148CD01F3B8C030117F98E78D1B4F260F
0E4EAAEAD953617DC7B9FC8FB37C3BBF83EC0C4C2960FA66781F06524C206CEF
4C1EDC3126527A601821FB8CE779BB4DC72E3BA8D3F2CF8EEA8114D0C5D6AFD0
DD910E434BDE3017ACA191576250F7A8C1234CC0DD6097EE564E10A0CFFF10F2
48DC4AF9748D760AD965C07E5B0D8D36C6DDA4DF04BFF2326182DA9588E2310D
8354756124619EDAF53C4A2C0EF7347C378BED05D3BF36E0D00CDC3E5CA6CAD0
66C4BB07ED3AD7C2B9AD57D621A7CA7F2C39E7FD4FEEA9BF4877F82ACD1EAEC1
1AEA223BABF1D97D4476D98539B4E7B1903904CFF21492B442B7B7BFF308813C
58789243BC32EAE171C316F795B6619578741F7C25DA3ADF3DB3D71AB4A1D3A4
7E8BFD6E9445C2A76E7A49681C65B18B1E13AA578A8B93C30154F1EC1273D0C2
76F7538164A7718326466B9F0CDC5A17B3DB9399056D94A6D9E276CE1B808C9F
A111466717190AF100880D1C8D0EB5F8C317AA7A517F89346DA874FA6B353C49
269B7AF3A73742F42730390BA77148820C9317690FF400807E797575E398172A
28B965073C659AC413E284F16006A0FDC1BE0208991647A35CFD33AFFF5EBFD1
471ADBBC48272A015269462F45C08B8627FB6E079AD2D4D547964DF9DA9274DB
C5F8DDCFA95C52430507B2814046F5F2ED86B421B617A1AAC1D3AFFA87D34B01
B6A848A2B82F31B3FFD7F7705430E48BE5CEF97D84A90671F9AF046F8A7143F2
67125ED20FD4B3E73091A4B5D8B7AFB3AD7841E0F1F6AB34FA6C687AF34223F3
921C317AF035D3F3791E45C338209BDAD37CA7A7BC74D78696EF9E0ECCA7DCEB
DD6E2A282B805E02909B2DDAA79881A55F23DD1F4D7F376C87F6303C98E98E05
DE26D2FECFE988B5E4C49D717D3C2024047CD363EECE9B135479F4CAAB6B7E30
33B1B44C051E1FA8A6327CE5017D9DB8C024DD1021EFAA2ADE64BF4E19259D87
D33B53A3873D822D47F6641F90765F7F7C4913E5FE0B04CA8948947CD8B7C143
9BBA1A71CE845DF8BF61464FECABC19B6CDC268D7E1D2E75B11B3C937BC2E456
C096E1E3360F0EBAB41152738BF782862DD4B38D849DB84EA9FFB789BA77DC0C
B58386CB780A6379074E43792E27ABD495687BCDB3FF553A539F05BFD3D9FA73
2C8FF2BAE95FFF6EAB47F61E9E0A57AE274F8B3BD23636330137B2D1BE0B5017
DF75C9BB70202CADE4492501E0B0DFAFFCCFE6237651E2BF652715C5D0E341B3
0CAD2756C28F0D047FCED4BF40FE6F3910CE65063F3392FE8EB4DE60DE8451CA
372936C2E89EC37AC7B2541FF7470C84564A36E652CBA89B9F53A746F71C797F
1777981323B3D176C05214C85D02F4790A05A4AF5910856FBF759B77B82DE5E5
F54043F1D2ADEBC336195E469709A6476CBF11C9A5D5170D0114C1A614BAA699
8EE76BFEF31AFE17F52D23A38D59823BA058C1C2475F8E1809E8799B88E37BAF
EEC8A240C419316775378F64E01C3023AD65B60E64D9FFC69C053FF6D8E29463
4B6D23BE3B0B364EB5A030F76952181F4C5790BEF19C87CD752AA6D194E07BDD
04F7BAA8F939717D26CAFF44E8B8A74E98F36A79C392B24BD512DB1A7F76641D
B5448087F6E595A41B1A380D01DF71702B0DC1F675C9B2C79E80F8A089D33F24
33CF85BD9BC4D0D55D6E66E925D6DFF7D67A7F767917473CE40358618D97CB13
338E657AC00FDD764FFC969BAA72AE61237782E3B2AE143EB55E0F5BDBEF4B6B
57168919EF9D838420F1D24C83EA9CF60AE67895BF6434FFC9CA3C77BA80EACA
BF12EBC0DB415474DC7BE13E4CD5F17FCD1E87796B0C499C278C734B1342E431
E0C4C02264B095C08E6A0E12FABA954C10470C11E11B825E33C78D441B5DE784
101029E70B732F6DD14042060B7F4EE9ECDAD46555C06583003EA321426B5E38
C035CDEDAFFD2202AE40F54039B1370466C46E76B0F5B21311AA10DC03406C7F
1F4F784391A5BA0389C82423BB4180BC4B17DE804ED15E796A2E3B88041C4419
100DCDAE9C993B2CAB65D12DA90476714F269CF534E9AADEEF4921EE63D59E60
8C1F5A84F16C4FEFA566920631C569E558880BDBE411E470FCE3CE0DA940734F
B1B9921E67E0DC4EE9F572C65645E48DB741A4241320EE4AFFF52330ED075A70
67243167D8F79365764A8F38E86BA083AE5C78F844E3AD6D07472B767EA9C73C
BE4F07BADD72E2E735D9F9D9FAF5D6375FE0C4077374873E53CCB0156D87FF66
1E89D593A3155725BB9BD7B85ED96C019F369B4D36E87AAD45B1193B6721C913
00C2D2223117C7BD731EEBBBC9E1AF881AC11E03FFE6513583FFD8D44F3B5A76
5652ED9EFCC1C3F5FEA538DC2A6767A3F9199B7470A3620D8E6F99A555E35BDA
960108EC9F96BC220178CE68C740ED743178028468FCD1703BC1D016EF4B68FE
6C547DE0930CE80AC0BAA70B5B4E1A77C509DBEFED21EC2FE5614DC4F5176AF6
B51B1B21F3596D41F92EA182F37B0D9DF15517BE786A8692CBCA18A01527F1F3
46696D2DDF2A6FF7109B390FAFC708222BC73F68857F03823ECA90BABF9EDF34
82E66EDA3DC2B4A2B4B371AAAD83A78F65DDF976D8711A974F3CACCF07D3B2BA
C31A7A51079DF13DD3A6C1416CF70ACFA4F97038266A4F21CC9752A9BCA9F12B
1237A98DBBA6BE012051AB1F72CA041233D36FB6800C1F3E72F6802412AF94C8
1DD798628C92A19230854C6796411ECAEB1EF3FF5CEEEA8C84FE86960BBD4669
313CEB2CB363509E0F97F6F13704D3FADF135FC775E7E383B2F72A522EDCF2FD
0F3EE998767E37BF2CFD12DEDFCF30F64EB25B0D0923AA585CEAC55958054B5B
4B3AA61D2A7418D5F3A1BCA014F7C5D7A50E427E669E45ACFE21220A8AA4E334
AA45739B1C6E7A818A4E87F1DB2B29B9A554278D3B624EEAE2C0FB79D6F7ACED
81F1D64C6F74BF9F62A5210952A03364365EB4364BF4AB6CF4031D948CBEF8F0
145325D6389A3746FD54758DEB4E3F975CCF95A74797B38BE9EC205D0105F937
EADFB7069CC5D7FCBBAAC71588D7F808E4F79DC0654FD0A66C91A5335D5DC3CA
953BB415326F6C825291193D112622959C74C29AC5506BEBAE5E2818543903C1
5028A7D7CE034287172A52671FA78A598017150461615E9C1C089C6E686CD59B
F3A1CC18F2ACC403F2ED0AA2559AC093BD01BF2AE763B4A7D0DC385590A17C54
843B07C2700A794060200B31C050E21895ED7E4849EC6D23A3BAE16BED18A25A
C6FA92070FC817DB3B009B76908705B69FF9F15087E86CCDF7D7776AFF1FDAF3
8FD887782043A82C30B8702332AB4B285FE5E40D9DA80DFDC48E8A9B21026B34
2C815D652E5866D916AB7B324AF11C119813C8D229D460F71257C8C8391C1271
9AC317FD6EB645F89B4FC757C54B53F271D1B57883D0BE9A1E37A616BC76ED87
61EDB2BA7A387E8EFBBB4FDEDEB08C3528D051664FD6E177B5411903F06E8F1F
BBC530E1B4C58872C3E3F9D0C35C4FA01EADE6B9FB687D5936DC4B71CE08F89F
CDC76CC5E8EF61D385598554168C53D79D8348CE3C1F8BF186267684FEC31288
1C3EE7D44D323F15311E34730003D12E93CD2FE962E6841B97A28D0C782BE525
ED286CC43D5746FF928177AF97D1258DE2C77FB7E6B105EF81DD45B946F33B5D
27A8F15D24BAF69BEEDFD9F73B140029EC3F586909389CE3ABAC5328F00CFE27
D4526F787605007D3181CE0CB7451B3A715FC11CA6567569AE6E1CBBC35C74FB
B9D73CD999D406E4BCFFEFE4AC98A10C04A9CB3652948F4C323DA3BADE9C603A
6FEB5B067F75C581295F3C5F77586546B8DCF133A4C3032BC88D73E32B2A32A1
5C5C932F1AF72AE9662419FE396936EABB9C56AA39730E458634519AC027519E
352DABF1BD8E8E7305EBCF441B6B51FAA564DA0F08C54252E4E60A11349813B6
3790D75FF504F1F3EEEC8E7F8C0F4CAC7F598E3B10D748714E80EDF6726AC007
59BD82FED3DA233D3D57BEFB1F4443692BF4280AFA448418E3527F18F747FBAF
DB82B67C40A79AF5BC58E6CC0328869C7E081CF5A45140DD94DDF093E075A7F6
1867F4E039D8D74C6F06E3A32338042EDB02EC237FAAB85B36CD9E74BA2E8063
62C44A525578EE65F3A9D00151AD97E45025D1C31945EDA242770EB013D34E25
5E73703D3032C031B298E84E7352BAE8A708DB1D098204E3A7BC9B2960B45B02
8B6F7CD8EF50B95A873DB91621DBF0C0DC422727CCDCB563FBDFDE3EADC27A2D
17E013D0B9FCB1307FEAD1E7C4176B516BB5642E597890CE130685CB771A43E8
3F532D148D397ECA137A2AD8B04C02F7A2843A47375FEFCB73DB9BE5106FDF3B
C36302379DA39601887551AD44224D677C112B221C96F55C17AE7810BDB47FE1
F39508F5CC1BFC52D5CA51A2D32C68B16BA4F2F76095A5DAD6C595A422984D39
1FD76AFF5AFF102D94A46F4B1F36CCCD5A934E05CD6F62AC3CFFB3D8E7B0819A
B83C35066DDAB02B493CDE3800EF621BE3E6BA03A83BA10AED613B7D634333EF
5D2F00C21B5E0E64422B3685780954F6B0A01773B181945F94D202918813113F
FD90802ECA478697C322FC472345BCE8378294B79880F84AF6F3F660E8262CD1
0AA4B199CB7813EA9A20B23C2D67345AEC8B13446C344197085400BDC72DA250
DBD05C274DC9BED6A3801B44C7C23D99F27FCF0637328ECD1057FE80E983A775
1D7BC08A2B454F174CAE35CE75D5147FC548242AF611D4193611124B0E59D147
7DFC98A351FCA613711839594F4329DBFAB5585400AB557299CB234FD10BB20C
4CF0B1AE0EBE9039319C14F72811B0DA3F517908F58E5E195C315283A089EA06
75815F53E0B52CF7D7FF1331B93787D51B2A8F92A7298AA529D75FB7BA97832B
6430F7F42D53BBAC7B19DCBB79F316D164CA9A8D6852D830D1097F9A0501316D
6A0F240C4EFC10C160381FBABA0FD022E97F6DB05FF242699FCA2E6E0646AAC7
8C0BCB33E2E12D95F6FE8CF8E9C1AADDC8A0EEB550E9FEE1878674720F55EEC3
584DDE021635B5FF4EE350AE28408E4360F93497D7081E6F5169274096857F29
196F363031EB1039C3EDD7F275880EE51563D545FEFE94654CF8D865FDFC8FB1
737C3314175BC1104AF67922ADF9EA444949B47D75EC317DC08D09EAE7578425
031E21E8BE530EA98472A11729944A92DD7F23F1CD85C4DFC837C7D1AAFB2687
4AFB7B7C056C9E667A88B1701D73F0076FA76F62F5D6023D76D42CD5D189DA04
57632BDB7269DA4739C15E1D65FC0319DCF4C8D66F531369FE0B55F2A7775472
D3C676D01779C039215A44AC1A251C5D41040ADC73068960D942CC910361BBA6
FD81C3B4CC37DEC8CD522A41DBE17834D6EE9C43140AFC21FD4C408352911520
40DEDA69A71EB95C7A91D03DE3170CB440AB8CFE5DFB74C7A8880733EB317FCA
1F8EB09D0D78774AAA4195475370B6C29E8884C9068BFF32B5F98DE9C5E43DBA
1717EC6604D4010FECB7CC42675D858CF43FE0C9088FC39504C1C3AF8597D873
BCCDAE8AA06661D00848375B620A4B1020B510B49DBE08C4C62C5271958B9771
72CC494E8535ED4180EAA35393192973A9A539FE40B0E000361CF01BF23BA306
A4DD680C115EB95A28E856F24C95ABBDBDF9D28DAAC5F60B275E568523602EBC
4002DC673E5F17258C2F98CB379D8218AACB38C8D560FE837473C372E708361F
FAAB272FCA77FBA7EC21594C16C2A81071111A592BC3D8A69A21BE0076888DD9
7BF75DF808D6B73EB0ABF954CDABFC758E9C32A9AA43DE5672154C2D4C715E16
FCF86E962F1C057B500D03AF26A80EBA285810481EBF20BBB37B94208210C40F
857252E083EB59D60E364A188C6C18535153BFC6DF15D2B1465C12CE360FBC58
3EE41C914A87110E6ACDB4C7C80A66D2CC644A5C35CD9BDB96644E00C9330EBF
C2CDDA73FBF30DFF3C6D945E7D28DB98CB301D30BAD6F7E616349D50D4FEE872
500D0AAEDAF35F1A604EBF548D07C4E3C196039EEE5B8817250CE877E6DF9680
57A45C5BDB9C0E713F556814E084E7F8EB87A443D8D328E19A86164BBC3B3D3D
7DE9401C91024CB68295DD3AE3111C0FE75AB19D75E7D6D75C1134BA3495919E
C60AB4A25037EF370508BD022FFDADCA89A5F8D9DFD9C72085009C8414048B45
6FDDC42327630C02F57928166A259E4460D7EB275CDEF49A74D6EC0A31E8EA37
A72BCE39543D1217C55717638D809B77816C112BA1228802E918C74AD833A622
79E8BAD7EC23484392D70086D2AE4C770A04405C919D0CDC3296666F2836B302
0637676AF49829BB2F9608345999C7C4F7F34C81B0789896D73A443AFF783B0A
031596CA88D1F1071955177B1A66CA4F8C61B79EF9395A6C294E955F4568FA01
50B46014641C57A1F16750F307DE5DCFED6C2AE030A5210FB86F87885717BBA8
E922EC53484751A1B59A95DF8DA27B1D4A04D2C52D1E2ED6D682C473B737630B
D1B3CE925AEE58D5A3DAA04DF4E83199296FB5DCFF66FA40528352D020BEF2DB
74E29D314E482F3501ED26ED3CA466490AFA4EC115709C5DBAFF4E025E83E25E
F9A560335E9C223461C6780EF59F6691CAEF4E8473FE7BDD424D6260C128735C
87E604D908A226E68B357956F64D4F0D2C77584E9F78E30FFC356298D029AE31
63AE473633B1179CB9BA26300C36129664ED39ADF11FD44A0AFF2C82E6E3FF73
EAE3FE90CB5F36751DFBBFD13BE467983B8A11074D2343F54C218C5C5D6A2A50
B27DF51C60FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 22 /macron put
dup 34 /quotedblright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DEE4B63A8FD2929735CBAADF336DB2088C0BAD9
B79DA00F002B98E0B4790F729DB337A63C1BF138947E9552402C37257019A2AE
6961E7DE6E5472914BBA36D0E9F53FA5771D2801267609C8B8B12A11E0AB6031
E251D1F7D5055B426B1CEEB8B386F92A8661CE6E429DE0B3A612D6CDE03DDBE2
AE36B73CE97C83E306D223CE7774FA5AF973D985C5120978E1A02EC362C66754
4098AE47E5F9E0807326E42BF2869A9A97398E0C20F5F017CA9DB7BAB3BAB101
169D9B8A4E33ED8CE8EC3AD987CE15528ADEA1C2830CE749F731509FB6B90869
5967DE2A007A5F489E6735A959D465B74109BA1843085C27C269C751AB2FECDC
406C8C00B476F321DFBDC8D8B289265FD8D01FF1F9B77F9884F052D1DB422D24
5201FBD6463F31D0EE5A68F59D4494A93081D9ED308EE443A16710B76C554F62
59A79694ECBBA5B5F7952A3CC40AE422B2606781181EAD3F021010D5084041EE
B3FB09643D346C85D389DBCCBBE4CDB021849C266CB622F9F7DD740A0E8A1AAA
EF6F9D84C4DDF9DD97DA09905C0BEC0EBEFBAFB779344C1DEB9626E743D60D4F
71F6CEC22A583406AA0C6AFF44BB559EEFFC84E59DF38F5D6FF09211051034E7
681DA0AD991982906F5A888875657AE9843F0EE896ADE3990F916F3D9672CE2B
4E3FE944C8EF382711929FE7016A95D998767D156C56EC6623AF9AB4BB367E97
57AA8F3E7A2AAC32CF65FE36242D8C6778C40039EE78A3A7E2897A529F703398
333A695D5AB39E0361486C12C0E58457A66912296326199BB749FBEFA97FAFC9
7CE3AD344170F3F4D8C867A322EC0A50E6F3CAB9CE75DE391D67C1EECEEB9F0E
180D18E9BF2980CB250272296EF0AC7132D5978C51BD8F3725A222B8FEA555F4
5EF355E8BF2AC5122172D5065C21AB5B3C8A312FF64CAA46B369DB33F1F0D4EA
8F760442A1BCE6D48CB824BC19B586A83E8FEA614ACA121FD093489BB97B6DF2
155EBB027B456C4EB79768F572EAF117C3E1DBA8E8ED2890108816E9072BCDD8
836B803AAECFE55830A76C6B244AB97E2912BDF0BFE581436D748403890DED95
D2CBF3E1F1F3478D685F972CDFD6A3056244F41E0A37951CF0063988448B529C
280975AF9153530F3294802AE0B10DABEB06C3E874B88A2E4E93E55DB68A4B47
513E1F8CDC594945B1F9C504227BF4572CB33383907C51382A5FC08B1ABA8EE8
B65E45F9721FB7B9123C1022A4C6752C1802FEE927AF31C7FC0C7808194DDC16
76F1BC9F2B67CA60F432280426409C3FA734449C3B4A6A8F3DC90E9A90C9ABC5
6FA3EC603C477D689234E7FE7F5CB3DC135B4F69D36A174EC1C56AED7E3E83B7
19025631714964FDA6A3BA2574709544F8D318D9543B5E95321A7131547E0E75
8E243561A55E2618F1D8B4B41407231186C7BE9EACFC4CF225A8E5EFA20896B3
46FCDCA42B89791E984FF2CFD2CC7B5409C7456E12F944BB85096FF60799F943
386A45621E129E440562D2CCA1906CA660FDCFB60E1189D7BACF8C6F479085AF
0FB4A3861C67A4552C610497D442E859E2CBF7696F7B08049AA54889D43B9510
4214B86E9F3A5F749D9FC1FA6F5AB1D724A9FA3C784203B38F17361283AC1375
91B5122F0BCE995D9D4EE4860BAA23C8804D9B4B6DF96C7906DC4D3F01B71D5D
25800EB0723FBAC6BFD382778E4872ACBABDB5DEEFFFF4D8B73E728BCBE0D0E6
218801EA7B70935D72551BF8144B8F1AA4A6AFE95E574E8036AED93D9AFE101C
9961B4C3CA5042672B00A179DFD4507ECDBBD6BB2F1DA4B12DEEB91F70B960E3
5EE076A7CF9F6DB91A2839A6AA51098821B8F471208B970B89CCF74167219697
89658488E28072CFECB4D5BF3B1E736992E995B82432939023C486BD306E90E4
2D3A5EAFF27FE1259DF6C99069F162B988B7B35E6FD15B81A40B9F999DF9A925
09A751D9154B67F684E511075593C915B82581629D0C9CEA195A4188D50BC852
7BB8FD0C18F1B7B4C6F79EB0067981F2F662252C0709FC2C8B228CBA5632C5C6
42A5E3941E95ECD3B8D6F6F508EC616A4EB8C7AE505306467C26D07A9C191CC3
AEB244662FD1A3676A2E5FA084C8CE8FD16D9A2D450A755AE44B89B9BC24DC8F
170B2964684B03EA13E80330EDFBC3956AFC19AC86DA7C61388B92A6EF61F656
0EB13BABBE8D07DC3F726DFCF0795A108E4655ECB9C6DED956FD990D7DB2172E
7F41EB604F57CFC8647FA89838FAC6642BB5622D487DE53E22AB2C55265B78DF
1E8A68FD33FF9F7A389BAAA3890E4F95DA5BB76967319DE8B11463BB2904A7AC
45B0C29CE34641CE2408B4A2A82EC37A41DCE80636D9349D6BA8E9366E0BEFB9
7591F9BA5D835B77624B250F7B4CE0094ED099199C387A3176F404D2DCD88833
8E9F208E66428BF89A955D7C752224788E6DA983823A371CAFF56A1A6A0F2560
2DB1301EE091D9F7A4581C195181C5DF1ED4D9DC160E089C9E48FA7A6D32ADB3
7F1D44E03466038C05C0592176DCF6A78B42C2A174C3E0F92DA67315AC4A83C7
7B461EE703FF3E5BA2179808F11D567689D0A96C879428F6C90E201F176560F6
0E4C7A9BC757A5AA387824036ECA0837CEA680E0E318873BED624E3B00D1405F
5B9CD4C8CDC57A0BBC8E1F03189ACD2057AE3ED8A0A3E91E61EE677A9E3A3D5C
8CFAE64A32D03BF38035EC99CF31C670ACB93052A23E324A985416506C712327
65B5CD65E67CB50907176F2DF1E3FE840EE34EEF27482FCF0879D44BD1DBEA66
7E95CC91AF28DDF5FD97E233B9F7407120359E05B71D0A27931EBF31F8B1402F
73E947CCA64430901AA26B2DFDEBCC0B8BE89A8128344A7A9EC8F2CD1FCC2712
05C74D3C8F83DB12FF29639BB152A3009FEA2C24119FF2FF238C8202F97C6EE5
6522D30CF37A71973049E43CFE82E4F6D7C157A8E3F0305C98891D0E065FB3FE
A9D7185378E4C7014E46B8B2335A21CD97AA8B50BBA0F69C6453319448AC8DD3
34CEE22D6E34C9CB828B7D95B192BD99AC83989654355335500897F21DC1A888
03B139A939FAD11687398A556076EA3B3E079D91DD6337F4E060D8BA511ECDD8
B1A410AEFEEB515FAA55553D1CE5180B59AD5C1B12210BCA407DD1B058DD28CD
7F1F41BFB5A2D987AB37DA1018EF33AAC50B4C83111333C0AC7D17249821C11D
2C3854FA14E282F88EE8437F47D2A1F30B3CECAE22C4949E9D7C1D19CF6718B5
9122284B870893CC01D3BB9685D23533DC6200C2F57C64E89BB59C4ADF024CCD
4FF5F7CCD561DC7ABC387FFFB3508595366B7F92ED1AFBAF1D7A4D1D1DD610DC
1F4EC3D0E698D8253EA5E6C53AAD69A2261B830CD7C869472824EE7D24ED4150
07B6C97A8873010E970C2848C91929DC1A78D5549A8AE864481D4FF648DAA5EA
C73F17118C1404DC0E1033EEE3081996FEA9AEEF420EFE6D8FD27334E31E8BAE
F4791F05B99FAC27FD8FE775E32DA21704EDA333D8394D3C4E90C6ACE3A6AA79
42D7ECAF59DD4CC4327E6BF79979B3C6249C5144084FF933CE48AE61ED5EDC15
F18BE278EE68F3CE7397C10A024C8ED4D4919ECD9220CAF1E8D2147E4D91E120
92BBFA9867BAA88809457DC8BC95BCDC6E60DCB33B31E7F9CE5FED9013AFD7B0
B038F670D113971C253B5A055B9F42AAFB9A3C72EDED884CA932EB02F3447CE0
92C84C4E6C78D72653F5961FB1B7A8A4FB5B0B3CA9713B1E38465F3009DE3613
D91A1F8254040C75257A0989E4A73213DE60BA309759BEC954BE182281FBA52F
49F691DF6C817009D6610125ACFC7282F3FFEE04143BFE605DB4CEB866234266
4400D7A22C18910656948887FC4393FDB6BD4926D43692DD7A6EC05A192068AD
FB8871F86816C9C51891905FDDA547F04F0CD2F6EE94EB21516B01B7E4D6ABE2
AC002957A9E2BBAFD0D6B34511B2323E2DD2566059EC349AFABE63F21A9BB29D
9E73C61ABF880022A7C09E607A1054FEB664EC37B45D17E0BB03C54D50E6485C
006E7FAC1145E6CD51FF7ABBFF2A12FDAEB4421AFD5F5FEB1867A1526B2B5A27
EC38A2B2962E06B9D4632EAF8BAAC89EC0A90CF1479F22FD31B10B777D6D0303
D8672E444155451033CEE1709240AB2595BD123E8C062B7161368A4C0B1980C4
F22E6FFD3D6FA8F9AA19EC0364833BB17F26397D4C963E96005B772EE942619B
6D005F2D6E357CD5A6991AE319D33A4379586D4097FCAED8EC4154BA473046F2
09AD55F2D683CED187D3243369F92268B5F8A76FDF4C68BF0A5E997AA4489749
4E5CDB7DD9A695B8FFFA008DB460C020212595294B06081360D895102AA41FC2
406E5368AA4587A4D27E3C7D7B0EC8DD1E2F6D29ADDB80A225BF59E2216776D1
8855CC16896FD9EB0A1A7CA68CABC695C8A9AE3885796450626F9C49FD82156B
573A81E138CBEAEB3916BCF65E6B1505A1C6F9C920476C1B0DBD81A31DE648FD
2401FD0399AB308A757B04DDBFE5FF8BF5257A549A4BA9866D762E74876E7086
A25CF46386D697F8ABB7041570EE15E5BE0E36CC955EA3B405C50184157307D3
0727B94E23F60037FAA1BA3C7EE4290F0D89479734F0BF060E35B4F2F4C141A0
7CCB9A2B2C89CFD159655D815C54A50516A892F4B91938555BE3612895FE1796
0F859CA21699D9044EF5075142646B617923B5F4DD67DD70803F28E77309B1D0
E6185370CF1261BD2325B000AE284DFE4A5D8946BAFEBDD9907233E547BB8CE5
78F9F6F848FFCB69156E8385E188F7E7FF54D1784AB51454B93009269F71A5EA
BE6A9517769A928C6459D3D2F5212E2B93B9D7D693EAA86E38648CB99CEBBCB1
FEEBF5D4FFA8936718D5BC061A1AD65C30658679F1F9D4FE05F4BAC0C5EEE4EE
274945269C5224AD15BE70490B1ABB6BCC448AE77B1B8CFD60DDF52253244FD9
30358D41BB478D5856D0DB1C904EEA4F0E9B6E402C14E05478991E65EFF8E635
F3C0EF760471997F375D133D309AC650FEAF3B5D87EB30A0E8750648077E9B31
FF020E5D2261A987048B8D01CC52F075B9A0F451C409CADED7FD16F60FDEC185
3FB09F7DC82F8901F03E303AECC8D1266FDC3614BBDE52B48F1AF0183BACE5DD
FA0BB23940A829C671929CF3B3DB976E7706D3D5D9FC6E8E0F19DE88F9B2AC24
8BEE9E429D19F5B61CE810509E1AEC9F98F56C7E972F6D0EEEA4DC5E5122BA0A
EE395DED86C8F541FC9A9A2A5E0356CA76C6CB8F52593839079F75680072C774
9DBE1598275174B2A28EB23DC00424BAC8BAA188812E28328708A1F1E87D2A40
4704C50437DEDCBF7CFBB7E60EB2719C9DC44142AA55448390DCE20751558DAE
B6CCB00A902D20F000557F2C7D6D0929832E166EE1D25E1EB23DDF063063A386
BFBCE4CFC190DCE4B7551CAAD9A6B2FC418528A0563B512791260C6502F4DAEE
072C3DD1178BE04FF9813F8DCFC4F3E0DF5AFE589FE68B29179A3E3A27A420DD
83152F7E1CBCB206CD95F71BC07C5E794B19475AC2A72A4E7602F75E34299842
72E710F44E4A9495EBA70A0AB7A5D23CC31E80E43B2A99053DC1DC923C6237FF
5DE7B8748C9FF34ED4E38F6BE639286643005E074618746CED0E98DE9ECC5744
08217844CF277B063DA6A326D7A05EA12CE63B32D04B648D95174A0D2D03A436
8C929507B10D43866A9B62F9F8A779731DD979DA2E0897B77B8D67C3CC30AA1D
4B82D21F2697A25850C9BBC4FB514AA7B72D9F38C00822EB0537A46798148812
08601CB8615417208629B4A0A7B7D7097C82F3F3CE8281EAEB145515AA912021
758392F7680738911B5115C55F586A6527F5573DBF7970881CF790B1D92DC838
7296FEDA4A23F669A767F6037EEE3B6DA50DCF393CCAE3FD4FBC53BEBA90D031
1182AAE3509F8D16B46262851D5801AEB542CD08FB8AAE074879E1173F0F07C2
8965AC94311FAC61E1D22CBCA7F708B7DA9F0090F9FFE099DF9B687D1C958C28
1BC96BBD37128C74D66F1F2794FE956DCFBE1CC57C2EC715786D4652A25AF4CD
18890BED18B56CDFB60B87EEB4EAA546B85938799EB048B9B2EE2C620BAE0F37
D1E5E5BA4AF2A33882BF909E689C31887F1EC3D5EC170E29301C9DC3088DE3DF
1D4403AD102B7CE807239F0D08D55A0C6811F1E84ADD938FC152436EC930AA01
7FA10F4A52CD0711E4042A80533499D38C679989B86F7CF85D47821B9B80F189
FDDFFB963AB6165C40AEBB7E3033BC9E5FCE0BC4966AA1B7AB916F7BDA0E5DCF
6D3A4DAB2066F18CF8EEF480C3EACF28527EB970F80A141E3591DCC46C915459
6C870AB2D62C3DECC32A74756392F73E52CEDDA6086620697E52ABAEC975E181
438E9BB9533164F074F452A2D084C33F4FE784BD60286EA25EB49EF4D41A832B
01D9BBD8A95972EA93729D362EF1C6104F8D986A5021C9870D220CFA59E1FB2E
85B91397DD695DF7DD791BD1211C1456A3CFEB5CFBBD0B01A33DE66E4A14BF7C
38BEE060DF48646C991C4D0084D2C973D44EDF65CB74DEB86C543D4B05709E30
FCC2F9F8760BE558AEF56C7E417C8178F30AC8F341784F3D040AAF760968E629
86840ADF773032D83C6DCFA32CE79E6656C1301B69D8A08A22C335BFAB85B151
6E0F43E6599F6085D56A05696505B93C965783DFFB41BDA2FB7C6992B79CD8F1
67B6AEE8217047A7358FC83BCE51E13587B28A973C7C26DE9CDC5AA39299D3CE
F781EA8F4EDFAE4FDC89B1D11073423FB94C773BBD74A62F3490BE6AF7377ECD
F73C17B2AB89CE177A50652667268AD2FF826380F44C67338F83B97B9EB815D1
BEBE9A6D40DE8C83E1F22B77988C56E9FAABFE069E371FDB7047018AFE4E5E6C
78E042CF0E2C867DEFED8A87E77638AACC3B3A1FD87B86BF5426C975721FABCC
45F40D6E12FD6E573B93F73DEC9BDCD1FC39911FF3485F2ADFB4835E2163976E
4CD90C4506CD42E9522AF9CC20BB022485D1E0B092BFBD105B14288845B3B081
41DD5CDE5D1897033645842B2B702036DFB1F0694342C4BC36F9880102C40A25
CA105F72C851FC1D780E1031AD1B16A189558A536658DBD3C9416BC4349438C0
F5C20BDE62053FE56A81BDD5DA72516225AF9CFD934A1A9B3C176A090A9FF595
0908740EDF6B18F4A4874F6916FCA8C06E922B23060FBBEDA7FDF25C660A8387
C272AF1CDEBFD659024F3D53A16C6DAF7BF329CBF2F4369A2384697E2103CEAF
CE31992F60D60870727416BDB40BE0B110169A579726BCEEC0E42DD5C362FD4A
A293EAF275702DEE770AF28CF5676F2D2CDED1339ECA394AC74ECDDE6A72B06E
8B033216BFD4F5429FCAC8994839E2512D33BC3D8DC7AA2705CBDA2BB77C2BD7
F10142784812B2D8093B5B2D8A09C0AAA019DFD62546FA93C9FB87930D92B0B2
5EC9AB994187DFC8FA805488EA5592C9E13DD97B4B758B5BA229B8CEFEDD3A9E
FD115B33E18F0F017EE3950462318057F87C5D363439DEFD8970F46D1C1B5096
27103F474B9D651CF6E0D4E1E3D6A0271EA4E785AB19643A99D07862F3C495A9
AFD0D9274B0F240CEC91EC179465ADCC3B914A132821FDCDF1259AEB8222A3DC
676399690654654E2196C757F9A54375550A1B120F68F80A7566C8BE5A44BA21
9164C8B34880355D2D75465C99F3A11945DDE2E13197E531E4042BED62A440E6
5624AEE5D6FAF1760DA0774BE46057B1E850D3E6E7B2148ED36BA7774DA0E2E8
3C57384ACE449E55DEF383B4A1608D0A48BEF12602F04C47B2A8D8EBD180F607
B3A9798787FE182BE8137056B5AC513ED1FD4FFFA77E6E5EC76C141C58D2082B
5F6AA2E68ACFFEC97E45361A16E6DC0E75233EE595B10E2C00ECCDEDF261F9F4
5B9EF35151507DDB34D7308EF360A54AEBC3E51B678A61094EC431D1B606A132
7738944877AACECDE093BE88E2279DE99F255B0914FBD27CD0288F22352CB68D
BCDEFB31F41945B657E288C4467D57322B5E3B0F491A3B7074144EC501F51EEE
4DBF9682309BD23A546E3BD5FA552CD161621DF80E24583A8C8188990939263A
4B7A88701EDA93A0789413540502EA179CE3E5D3E50F468F51111D33248AB5B3
84309AAC8D20E7211327F13F813301EC1EC4F20A897AA033103600CF6DCC5A59
F426AE2E275C6A19DD89D17052B4F1D790DEFE3907EF6EB1F398D4AB38FAAA08
E61474B87C314B15AB06493DF0086FD3DCE2FE2F5FCD47CCCD9337B6B39441E5
6BC8C5596D6B26CD38BCA7C600479DF4E1CF82479F6EC71574B74522F15D1911
2704BBDD43E5BAA36E305D322DA35C83CB8637065E69D7951215F55C44AE4729
26E882D4FF6143BBEFAD135465FD32D691DB9E1E608F06C3CCA54EA2EE79A243
D765B42C576CAC5A63AD336FC9C94F260FAC1269B34162EFBED51DBDB081F603
E4F014681E5FAAF52ADB6F18AA8F313B83A909EB14CC98953D16CC8B2BC02828
CDC6162BF9FB56D031B7200F1457AE95017B15AE57345EDE66069EC52CBD2E04
C23A3DDCF613FE64DE65AE35F5D9A65EB48ED92E25C4F149C859561001169C8F
956A7CF639D1A3FD8B0009F3A69A389D8ACFBECE7C446E99B3690BF76897E77B
C75B095729822ED156ACC12A83675C59DE7D3E351EFDC810E936A80790B27321
EC0F5B2836C414B2F094494A2E2A166CDE483C80DC9C477C2B4BF603326D674B
AE4E9EED0B343F1A951A609230F3C0A62B818CF67E92F361BEF89D7723DAA62E
7DEBD75A262131D246F28FAE3B4F11759C4DB728B6D03B95F56B82ABB3D6E582
363721F598A362B61938F5E5683DF51475C52CAF8DB6B67BAD73B730F66D2F09
59ABF1E88086FD23E968EFDCCCBC325FC4E08FE4C04256C4A05BBD0C99AF148E
6D9F1311310C9FB5A0CFED7553B468F5C2879780BE8C51FB3C25CA59EF2DF685
B398BD37D55F4410B1C26E94890CD152181915E2A58D158302367D3271EB657A
495BEFD34D2BB41BFC8AB5116982E09250A1DE26BF04DCA06FD3022185E39F8B
4176CD26BA2FBEE997A0C34A780CA2085E99DC10432BF54C80E629F38E31FF32
EE02D1554E2F340DE0B82D2336E9426760CB22397C095420D4449BCB57288E4A
1A080E7151F69E330E6956DEAA50FECF4F831800F17F9AEA8D7A30B02D6C4516
6C5C0F9C0FC295D69A5037D3FD16EE32812ADA7471C1AAF8A32C700D1A74CE45
F4504C7386A808E3C04AAE3F3FB688DBF8CB594F9D60A7DFF00C7E1201E33652
9C49CE5E698067A49B7F13E32D75576333952FDCD8F848007099ADD877D25295
6BA4899BDB9006819BCE8C844C4FA6B7FF30983D09C1B15A070FE0932FE73151
4B63910644324F82BA62DDCEC8957A2E167DDC9FE6754D31C339AA494E0F952F
60945CD279C68AC7DAA2B080CEE4C92696FF33280A3662E1613C04A268870FAA
723A4F1CC1DA8A1EC86F4F9465E5C1C309BFD3958FF5E8F79CC8EEC32240E6BD
D159A9D9FBC5B54A342D1DE470F77348E178E0D9554AD80F9545C75102D85B21
9947598585ED0C78B43D91420A183C0A8242A91D6C916E4C61EB97DFD58C9C92
E5BCC1C6B8E84014422A4E8EACEBE506EB98BB01DFDA236D8D4E7B48F9A58E01
F588055A3548C4DE511B3C60920A8B635797FBBA83D07F303EE9FF5B8FCA274B
3C1FEEB5276E144BFB2C3C5794F82D6E7A993AEC398F2A41F920A0F2B1E47A78
AEB76360333BDE55C877B88454D961BD523FB391DCD154340F46D0F3087F1180
1BC15B9C0E7405CBF00B84A947FBFADE6A5C6131164CBC6F9F1FFB251F5B1DA6
2642886CDA257393809376398C857881505D3981D0C73AA5A3132A12F450BEC6
6C40D743F27FA287058BFCEA5746686499B5B9A5D4BB9C7456FB500263113887
3488EE28664DF93F0C54F56DC3D677D2A5619B2188330CD70EA1FC17214421E1
5716ABD46174A5C4E60A657408BA4FD2C718256663DA0B6BF60FDAE3D63FC34F
835853C00B3E00DE4790E555D1D7A14EDA02B28B20324D192F85FCC14349BACC
7C2003B4CBDC9AF86C069D272F82C120CA1E857B6FB65A0F4631A9D5B1F14CE0
4B6578E77F3E8EC6768574DE08BB0FD35B9F1ECA98080136270A028AF811B0A2
1F2DEFDCE9736B1E736C1C5500FC4BA6B1C7C1ED6F31C5A9B3906C6C6C97626C
23E88256FEAEF64A274EC384D0A0EFEACC8F029D6D08CEA99839C5FF76971075
649492563A802C404988F4499FDB26C39A54BE05DF79504CDA16BCD2365E4F58
4CD232B85857EE4A4F5838B6576C05DEE0053FB24848CE9697B7291AC6DFD67B
193C166CDF1B6E69F0DB7348099E4721279B1DD10B531E956C959ABACD705A36
84D5F62530B853D9FD4D3F316FA9F19CA7EC63AB22599FDE66B18C5F564352A9
5B5292DB28049D05BE511505FEA34E8075D8F66773E5A1659CAD268BA7BCB298
C7B6B25CF8998ADBB5DCDF78256A89CB19907366079F4E8608F4AE066BD11017
A4CA03E71671C3ADF7AD45A0CC4D6425028EBE82FB633034DAFC86D998A7F406
46D16299C09FBA25278423699D294504AB9EFEE2E0E9C9E8BEA3EF737F75234F
7E120416B2EE04F7705DB2D574B903C2A6AD9864B8ABDC8AC93DDBC2AFAFE988
9260A5B03D2DA2EA89A95B7F86DE36D8F80EC88913EFDB7CE2A960AA86BBF699
806334D5509F6F1DD867E71015041C2F207B754AA523D799CC386FC8631F6644
5D9E12E2D35317BDCCF93E934BD97D8F099A5A02C411D3EEE0856385C8F999EE
8992ECE792FD9EC8EA3B5DDEAFC2805722E18A2CB607A7ECE39370AF0A13905E
3208A63D09DD293B01E361EF7E7A6F7ED75F595F1C514CD1002BCF76495D0BCA
357808039E340A01201D9685809C9DBCDDB4A4C1E3551E5E3A10AAB8C3FDB576
BCD01C9E225C1FDA7EC02CAE36E6962CAD98FB78490FC2B1158A598A515B930C
043282932C33B24348963834C8B893D0F42092EFAD69567F096D18A08A68E3B8
92D1B855E553B3B2F43CF08AF97727B7AD57C1A08F2089608BA54D40D97B5F52
34EAD3F0050942A81B6ABF6215D5860FC0277087662EA3965DB5CD0F16530097
8158862ED9E5B4CCB50E9E27813D9FB7A5A08C2880079420A670692895621122
7EEF01140F9FC03372CB014610DD8AFFF5397BFCE5FFA8052CA32A4DD40C5243
6A9BC510EE90797E1C72C7D193B3688812685ACDA05E0D18DABD6DBFDDA11686
C4D9DDD218447F3C9000B2CEEB498DA70A97201ABE6EE8B7E5BBAE6FC7F55292
06548A0F9020E3C13C329D83921AF760CA8843BCFBA5DCEADEE3A080774A2417
8FA6EDA032B73195BD2B1E690310D31FA8C97B4AA694B36C5301CC13A629D18C
CF60BE02697D83B34E0683F8C3394869DB379C16C5DE582D80677EAA5AA35C81
DCF06DC04AB9F0E4133B75E444FE5CCA6241E16B324B947F1086525CBA79CD0F
566B4DAAD8D94421F86CCC43D9C9BFBE83E0DB5303967EA502BA996072ABCCD5
39BC6056D6143547C239CB764E236DBF9163C31A9E8BF89FBD5FCA3A18202DC8
83C85CB03AEF2313D1A85C53DC3E9A25C97D089575BDF91229AD6EB2AB73619D
D95A03CE17AE6A7F3DC583C2D476E3AA54D89E4E4F35C7EE0AB5ABDDE1D90D1D
BBA6810CF7F6E26493B405956ADBDE9B6D6FAB1E913D45876802E9C7A5C7CC0A
226D7FCB79CFC73F2DA0FF4C863BC81C74FD83AA840E8E54EB37791A29F9A76D
76752625D698435E29773DC1966F0EAD158FDF23B98999B73E92E5A37A15EEF2
EC2EDA31AB3DCC09E552AD5135F9DDEB94A3DD1447C358323368872759104D16
65895780CEAA13AC1DE8393091590C913EF15B19B1926556072DDC47F04A8363
6CCE2D9DFBA89F6CE0536DADA98B5AAEFD53024AE1A4CB90C5E76AB712D4AEAB
D8090A8171CE5AEEB4F29ED4294508E7C3A20D98F355BA37239CC8408D6D823F
A682702EA1B4E4864F1338D94781469DCE7D79BC1BE1095EA4C33F111533FA09
23EC0619EAB119BA759118F846A805E5115DDE3733632CD6A33AE1100360D690
B74F700CD8509C44E6E7A4B3B4714B3783E66499EC0C9A01B55E585B816EB72E
35E6399751212575493DDD6885DBF3C4FD871B20255641EE784C358ECEB97777
DA429C7A9EBF9D73CCE82CF1B3652A7563619E8FC64019A83533190E1E78EA26
0D8F14CDC5C590BD8318FD5DBD103FDD22B57ED4EAC8DBB85BD8CE52DB1A939C
006E22C74F4B1627ED4709D5C155B32A3E38CAB9708B8666C5B4C8C3D6B55D2F
0AA4E36ABFC89BC333FE59CD883DEF94B7715B2F314248004645E6B130AF5789
F21C3ACD02F2931740D3327A87FC7F24B9FD138E8ED84E99EDA60F5831186B8E
928BBA263B959230691B93CD2118948F0E12D9A15208359AF9767079B90D01D4
21C6281DDDEC712BDA0BF37AAA42DA1BFF2359C6B2C46275DF2F6FF04027BF70
C64D48555AEE6E3662DE5D4B02F5DE959CCEFADAE921575CF4025A4B936294AF
1800667E2E80B66FFDEE43C7FDBE340706343FCEFF0EEF3CC435E3EF77243797
7CB93F78BBC908B4D871352CABF3EA8A3E1732C8BF0CD2CBFB191148E5A5928B
F839CCB37107AE7C1A06682000008B3B3F3013423AAF0CDD2276891B187135CB
ABB0B93F29EA3767C61045A6D3674E090C1F16233BBD61C6A27A82E391CA361E
17717B1336B1AAC9555EC69E049B3A02018CF2095DA4F82D7839222925DC8A78
7DEB86F3295158F64B855ED0CE7DB838BE48873EFEDFF24CE96AB400D780F053
57F458FDEB36B3839D7E2D2B5D9B650CA3878C25A7A083555573D0E3257B0818
A0E3D957A6C90C934E982B59EBE3DD59778FD3E8F25CCB606FDC867B33525DD2
61D04A447DA008F1AA1E8C4DFD0C2CEA964AFA3C9AA257F76FD1BDE858BAEAAA
0551125CF15D9021F76112C3DC42D570D98EF24215BC0194116E2AAFBA489273
4CA9E01CD3CC2BA295EF4F8792EBE2E8AC4167474498E6E9521F81EF2CD8D5DA
B66F14FE9558EFA0BD09EBB66AFE377A6CD2DAB99E87BE25AF359F746F5D57DE
7E96EA09690E0E01225CB919403E3AD319229CDFB8DDF450FE3F62DC0DE932D8
F699E2B5F173AFE7F5B26C7C00B540BBFDEC8A109456A0C1907EAABE288512DA
7195D579E5E79B293490CA3DD8010430BDF71AF92D30F7DD29E5E8CC306BF479
E41C930C823A0CB0E5C543816F910F3DE4F1131C964B9E2A0E1840717E98FFEE
F6FE91563F8B0F3D4BF823E1F0B06A0A620CEB0C6E6A338599B298CCCDF9F6AA
9F8603E7598D4D5ED5031D90FC3FB8B07F44DFA1B77304C21C3691A33E2DC8E6
49EE3AB9128B2F004BE3EA3A9382E83DCB638F828D4EE27F2587FC9B68FEE330
CA41BB8ECD8A9990A9D419B23E88914C348CFB92EF18C8E37DAFF5C85B3B7C2A
B0F633894AB4E7634B949172E83B2DAE011D5DAF7F478AEF20CF29E364DDFD76
2AD01D38D73BBF6F0FBE25AF9C1562D6600280DA106423964BA04EF0155BF650
7759BB99D5EA4107F97314C8AA052088E96185D84214A6211E97CD091579E163
C6CCDDCC45884BEBB73B61F224282657E274783352879D69BF6F6BD63AB1A062
FA6C3059C63B155845E07957178EDA040504838FB662DC904618A8D0F3B9319C
DE290BF62ACDE7064AD0D4F3AD034631B1477D5ED4D202C576E06E1FF752A68A
4DBFC9D6F674F1BBCD4FCE08060D2ECC28BF5177A48D5CBBC0F18DD8854DA082
AEDF8E3B035DD4FC2A8B9539257B934F6781BAAC419DC8828CAEBC446AF38C56
7CED72A1EC466AE4DAD42EAB302C8F2DFACE0E4215B072DA26EAA7EA98DEE294
CC3DFD83BD7CA7B2233AE82C60DA4B504D2D56F95449A2B0A6068086F8EA568D
5F2A1F2D6E1446FA171E860C5D302D5B545A939B83B172A6987D45D3D0D797CF
6974AE36D558AADED97279446DBF26F65DE2ED211B08FBE26F5767F84B54C854
09EE49989C9A17AEFD8FD240463F1A7DA8B84142FA3E2E1B8F48F32BEB57C7FF
B72F655ED3C104547DB0BA11A179E4EBC3FD73AC3101F661BE8A0EF1BB5B453E
5824D7AC07B4F077EE4879D4E522559CD5F42B132895FE66ED70356CAF3F43AE
2D7E9F508EDF1343ECF96626E23E669DA0A8D17BD6DCBC85A13FD046D6842B8A
73E5CD5734CB9530D4F694E1AC39C507CE1F1DAE9E2E3259CAAD9BAD8AED40F0
422D4927618228FE440EAD263DC6D349AA18975133B37F6A457E33784CBA4389
BD0AFC01FB389E0E87FF361A2728D3B513E381B46992202503FD5CB6581F6D8B
AC9B8A5A873569E872AFE7006D09E1FED01AB244CCE64066306B98AE105A9AC9
483E5C5F9B4E646051BE62F2D5C7E91A159016C5E8627612670449AFB55E4B46
65B5F4B96C61D5133C9642C274D1F7F5E48F8514FF632B6EFD77C46C4F07DD33
02B20B5A0AF2ECE965F342C4FA9B73EC3667704DB212CF1852D344A2FE3BC7E1
FEB6F740C29093ED239333132E75D63F5524DA5A0C0668B7B8FABFC15B295F55
F00B9A6CBE7D8BFFA9986F499109F2CD12F9D804762BF99FF45F27ACFE8CCFB5
C71B40A7DB784596DB2687349E130882C1EB9C66E3F6C2E81AC99B256B82ABD2
C31B99E832D003E154F56FF97879F03EB6E958120404713516376F0BA04CC882
0E4B8A7B676919487E0899D85B6774F90CF7540342E9D7D58309DC649A3ECFCC
E5E14D2F6D4ECD66E8F6B69139640BB4F867EC83009A27FF9894171102EAEF7C
C6293C5437573943E28C5D2E386F5E46A43F70D418980B595144F7463446E8A7
3E9273420F0091210759F6FBB5DBA0B506A31E3DC3B6342B2493D94DB2476BC3
0DABC19077A64B1FC7C5FD75DE0A1EDF3A0059947DFA2EEA9B7EE86FD80928BD
94AAFF7FA17C1EB3B98C83077762ACCF6604419BA2DC8A0DCEED521CDD5C2EB5
370790E9135E4AB8BFB3072742E5A8E52AFA10977A509D18122911CF9989254F
42FF35AC2749D27FDD691BB6C4D679D575C62D3571C9BD3879148379F2654DFC
997F80021BDB369A15FB472AF597284B60EB7FD7DE9408288CD8542F41F3E8BD
824017FB7EB25EA926161F07DFF2DF7CC791956F35BAF86D9F08F5A6DF959835
B59FDB2B455FA7F864A9E64D925DA7FB8FD3564E55327BB845402C940ABC0DD3
E9FA26DAC31402CC343D8A73BF2B8DA0ADAC456888B53D187C413B00FF36EBFF
3D8508AC21483CC9C891365670EE5AA4338D2D0D5932392670936D56BE2B7663
9446715505AD052F66826A185F950A9AC042D25EBA65FB96356435D6DC5AB97A
67CBA84A0DDE2BEC236FE8977E1BD8E5EC6C654B4AEAAACEFE3214333C4F99E1
182F15B85B7D0EB24241AE310DF98E12157FBE9EEBEC0712CB9B4B46B7CCF37A
8BCCB219B2C710C04866381C893742F0A00AEE037845EE9644CB7AE8EEB47396
F9B67AAC0DCA3AA3BA09E2ABB7AADB8CF356CABF84F2FD689F79D8B75BDB0EAE
73E358666BD222DD653E40CE68F499AB45EBC21E4F03203B5D7EDCAFFCF13904
72B0FDAA8F5B9C441EFC5F54F5D36FD0E13C783F4FBFD06D70DDB7E57D97D61B
5C75EC52EC2DA2DFD59AE37882B13C94530B6495EFD25BFD74F57C205DFCC8D2
6527E7E31C3C2210AF7E66F09F04BB349465D204DA8F8434FB0933E9C5F1CB32
36DC8D22FAF173E9738320731DD60095E0A426B1A4C1B180BEB9D787F9D18210
82EA009801AB974C8F144CFEC333BCFD5A093B572298EDB4F4B260D6D15F5B3F
AA4335FF0BB156A0F9A5872CF0ADD718A916074B67FA1FAF19E7DDC484F01CD5
2E27B6859D00B758292DFE6195BEEFEAD8481255032F8744C01294E731308701
A6FC1A7ED62586465C76DAE92C6882AA337F5AF37F2FFC49FDB8B4BF1AE59B51
ADE7B711B1B6AAFCA82BB36F768ABCDBF6B905174382A66F5A46F891F8F05B03
7C5139CE0FD2771DA1612BD0EA6C8160F59E27CFB97538F01B889DA8E19DDD0E
63C74995825D633679F4AC82759B19B19D9B9B45A81CB6CAD7730800ACF486E1
50F4B0F96967904EC8EEFC687D0EC4EED997DEFEF7E5BDCD70637ADB6F65E371
7B482A71D250E43FEE2E7F79265391F0D36237940B0966F23A835788B9000A91
E0E3FDF6589A98ABDC1DAD26BE83D4A8D6FA65BB3221F6009F775222205FFAFC
314D016F0EAA19E214E03346E31FB6F8B7BC96B0BEE33F854BA96A7F51BFD6A5
60615D9CB9E8BB447A4AB7840A6DEB443EC954EA9C8FBE1C0BE18AAB07C0A672
799C61CABF7CDBBFE652F8B8DAE27492B74AB03349EF6C87E411B958D813B655
9E1EF392002A69277494BC9AB406A62525F04DFA0075F089E0988FF39084FE11
179587C0AC5BC57B88F7B94B1F77601B51416EF6C28CAF164B46D49D1D510F34
27317F2238F9F029288FCB605F57FD2F49A326F5C1967DBB262D9CC01115C364
DEFBF005C0820DF2D85B6E2E7BC420D7357F6A08FB8B5E3E4E26DBF986EB79A7
CD213872C32BEB70E8E6F325DDB7B1B70C6719079991D4BFFDFA877449B04E86
2CE5999D328E2E1867D822E3B9F247236C52830597964149577897FA4FF045FE
F91B9484658C81C44E82B4E31CE9D9D0D748D7E254253A925C0746C456AC9ACB
85F2A0D6F0F0CF36FEDDBC887740ABF11CE7B1A9E513629D0F9FA21A80353C09
8887E2B1F5425035645B32A41595B30AE2C1F4AD71EFDE8D6A03DAA62FA3A93B
D434152C1E69D8404BA41864258D743A9B86752AF24A30F0BCE3BDCAB4AA9EAD
6423A22E6F37FC348273ACA0A49289621F11EC4BEA468C1F89315DE51AEF9850
4695687683A36ACFEF63DC2C875F7C4467DF053DB7019E860393998B75C07433
8A45A89C8827C83C3286A2EA281C5DBDF128A92B21734DBDE2BBB39EDDD4A75A
D3835FD5F949F49EE13430C7CA1FC6585D17B4319896FFCF5D36F19EC1FF2FAF
6609FF02EC3DB94AE6F1BE5A81A5CB8A1EC2C649F4D7EA370EECD0411E369A11
7CDE7B1729DA19008117E7A6D0F2F83B1365AEABE7770E365F6DB26FB5DBDF89
47BE2210980819025A4756E691B9BB85C939FBE8866231AA72073B051611219A
32582773F5E3E979EF45E988E38A52E6E6D4AA380798562E955978F68180B52F
8205551C5FF662750F02C3BECDE9E3E9061C7AD311A056B151C15F895B63C092
14906F0FBC04FD47D66B046559172D3DCFCBA48512B7C6BD47F55622FC7B0EC3
3E4B69715380F26DF704170CCF528C2733683EAA8E6AFE37A37E620EE76418AE
618AA238123B7D632126FA80D19AA03C34BB28C489C6B1E851AB6E524AC9DE98
DB13E412A94FA3BCCCD67D288EB68BAC4AB3F051EC0CD49CB7B631C225F039F7
5ECE9708553224E8283C996DD1778CD9C45CBD79D74F0465A6066507649022F1
282AB99387ED73DAEE5F7B2FD35C15DAE5A1482D361CD0EB9A8F1B9F3FBB20FD
FF57F344219BB2DEC76FB50B89AF5A9FB6B452EFB7CAB669FB6EC631B6B932BB
ED3380E47A1C40A389CFBB63D3729714372E7C5A295EF98081B614157E35B5B9
3A964B6A563296497C6B61A90269281BF2AD5B29AB7F81CBBC385EA8BC6B4CB9
1D1CDD8B9C5A4FD98D6552C67AEE860A01B88202C75CC83C216F98F968F0AE04
F108412E79417DF87E57BA00509521A8D7C52AB5AA7CB3154E807459ADADE1E7
2DD290729E7D46EB9CFED06D9CFB690CC4DCB18BFE6B6A357864E6C8D70F3A9C
054074BC5D39B00F7274BD2302D4E12ED3DD43F2B4EED22BE68CF10E54BA4351
09984AF24C4B66F247F7BE41F1F59708452C72E607D43323B419D619CD0DAB5F
5B4A63EB933F618D376EA70E7E9C673A26842C9832772CB2F9D27ECBEC8BAA7F
DA64A514482B98C3BB38B78B848E144419227A85D0BFB7A58E93A561BCF9158B
9302884E273B21ABDA00C0A4FFE2D0208EDA3352A2AB0C31C9AB737A82ECA848
7EC7C398486E0D5F48D0862560B753F19FDB9B179101F88B511FF838669CE52A
F3070ACFF077289683C3128E6408E9C6C93935C2C056F94EA15DAFA8BEAFC381
37DBAF99587055A456036232EC33E89B38132CE5D415BB53FBBADF93DA3C5E22
70FEB2CDC01F2972B422D26F63AB173B78D0FD005FF6BCA58BDA85EF7B5B8C41
848164F3FF16E1DD81A74E7CCB0230CC06A4B2278D04940211D68CC10CD2B77A
A29B9B6FAB93EF7593FBE523BC0304E74389E963F02230A4EBE381FCD089A585
57FECC9213AD7BD21C395B1A7B6CD6E640A83D3A8932330104AA802C1BE675D5
BBA1E43A99939F34D5CE1296313806AD8DB37E039C66E5CFAF95A084456F30D3
81E78C41D706932C2B264AABDAE6C5A7B36ADA554C5774D46AEEA55BB9473273
9D6D21A00F345838D5ABE3064F74DE76B638C0883CE84B41C31FB6492B6A993D
AB046138688FB42DC5216AD4CC92B5DFA6108549EC0A82D174E4674836D34A6B
A5A45EBDE74AC1AAF1091C2B426D9933F3BD72C5EBCB7AA097452CB5A3CF1313
0589B8F39E472B1AD6FC0327892A1B78ECB1BBE90F523F0CC8DA1A4DF6C8B7B0
B96B0DA4F58723111711F38A1A438352D3E8A327BBD591BD384785DF66514C72
0F36FF283EA4043C132B990BE38DF483E5EA360463F3EDFC3CBCA05DD5F5ADD7
35284C6513D12CABE1A2A0B3569515D2954E797443075374EA053632DA0013FB
62AE77FDA746499F952BCF3284078F9C0A302DE36DFE68F6052AA54ACD9EF29D
8B53ED718B56F42676968BDFDB7A79580B716AE538AE1AEF6536FBBAB4DEB271
88F4FA5CD37F7A4317C02C49037B69DDC4FD336520B50B523A3A2EF667DF9C5F
7334B8ED5C3F8BE5397AA619765898C3251CDC13FAC0481E8C9E64DD8CBC9DB4
2BDB29B7DC1AA6962053208D71FF414624D40F338C459EFF0DAEF1C357458B12
AD8E8BE2904ABA49419FE9AC636DDC0687248A7128B8E5BA7CE4E458866B7F13
CB803E2B1D9E96524A2F397D821B27CDED6F25FC134B8E5FAF403FE4C58F9CDF
B5ABEB1EEA9A61304FAF7B4BA2390DCD0E13F48F4159473075E0433A173FE962
E802245626A6AB5C65349D6D7326DAD638FC8F0619F6F3D0A55C7FAE945DC07F
593019B009886440158CF090D8A97A51B17BD40AA203C87E2B072FE3D271CCAF
1E8FF30DDA20511D335FC102652931A49023F79507BB642A162D6BFDA5622096
61B6EA16231D1E9AA6A9A15989F37D8E2BCA12D778A842E658147D8B669CF08E
4CFD5976D89725DAD048CD2FB69D65D8D9706FFD464C2777FAFFE10F70DFA908
C463D87F3EBE976381CFC08EFCDD2E27B7DE28EACF316D4658E785CA529A102E
8B69CE18B6600C3DBA836152EC7F1B839E20ABF3E94F7525ACB26E5250B137E0
F2AD44F5015105CD974F02038F9E34B766A6238968CE8251F91F119557B8916D
F61828E1DB05206F34005DC7431C32D4FF67A04277EE7EA23C357C6406A09CC1
DC2C54B7F2D78A0E7BE5976986EAA7521AB46DA14BA04765F2E714965DDBBC96
F46C48C1D8F69C64DA38685EEAA56835DA94F8AB1D697ECFE378D8E98A3F1F73
4A937217276260DB748B31C1DACFE678FBAEC2915D833424D7B76CA39240836E
AC79C9975AEC883C4C6E661BF5461E46ED89E89163FE06011C344295013F33FA
D6FB150CED12B172AE1D5C238787557165F73B20FD38679C3F9AF8AF1637AA1D
DFC52469F507CED62A676DA73FCC4F5A8727CD8F9914E5D7CE354BD3313C651E
80BC98FC10F96F3E4BE3554DE115076E1972CA8E9CD354F38A3FD510AABE0DA3
EE3F0E3E029C2D1BC3FAEC4A3DA58E37ABCD1BE359330FC82C4F1A7AE3B8A180
3BBE79BEEC320BA675C682C2831F6FF1C5037A169DA14110A79D498D8FE618EC
A61EF1BF3A00EC9D1990AD6DF53E9B4796C7AB178F7E1B7E43D9E652E46EE65E
EADA43E774E10603FB954B764EBC76798F6D4BD6AF805FA1E5446B31CE005A99
FA74C7403263AE0FC14B0BBFF3C1CD90B0E7B1F01C780C29A1A7259D75286A9B
A244166EEFE167A557C9EE925A7B43D2CEF4B8D19CC1E90E39E081B76474B2C9
E7658A10C50AA796A0A1D3AD9C961E49472EDB8335BA257951A9EA9B376FD683
02A80E32A3CDAE114E44FA8AEEA89C41981BDA65C1E12C90D220EA5E561405DA
2189F07C577F34FFA2936325C569D52C3C75A0F5432609F9AC1C484FB10FD1B3
7B9A2991EEA66169820A9D2BB8CD1EBD145548258162191449D71BF2028E6B1C
04E2233F4DF44860B3F4549C9C06229679DEB565670204FCD7E88E8326EBC03B
A07F6551FB27749D29AA2C802DC33FEC051B8C1B14DB4A8E6AE851C009E01EDD
7B6428536FFC6B9C44DE979581DFC55ED2715E59086686B45291C7408CF8913C
0BFFC6F0733AAD63982AF60C67A7390199B8ED13DD58DCCDF7720B14E3C485C8
6AFE15200A628CD56407B8F81FC3451220406B21129C600230310FAA90301A28
BA4D14E76F9556E77CE5EAAB27201B7BF9669A22E51D079AC98D8C1C7992E6B3
68664F0DA42040F1D6A1D39569D40E6A83944BE099E6CD922A29BEA762B4587F
28DF64875934956519416EF67CAE2C04ABA508B691500AC31072C79E0910596F
7BDCB87BF21FC21CBED006BBBAC80B251DA1183B1A5F820A233F73B39A6AA738
5DE4D32FF455F8D0F0E1BD192AE61BCCC887056CB37F5741A87AAE79B9C69B07
7DE8F04263D5B4E00CBD7D03B2390979311C46ACB971ED55267DC1E777682022
22111EF8CE61C78A51D4FC9C0AA441078FB848FC05312B0BDF0AEB521E01DB6B
3C641A3683CB8EF515099FE791FAB9BF1AC455F0128ACAC0157BAD39C3C387AD
2E34CE55AD74F06C4869D6C50BF0425152C311AF11B257EAAAE0332FF4B4AFC0
CB1D778EDD45DEF8FFE1389941E7B48A9CCF868D42152797718229D2A57FD78F
520640DAE31FD2079ACAD6B73A4582A465D95EE4146C4E20B75FC160936177B8
011317E76FF0A9036E3F73A9AE6697A646E9FA13615ED1F074093170C01C66C6
2343505F0144B603C2844A4EEC678C3A2B487B9E3645A295CA800C2C30C03097
9EBCCBEA76260F7CA5E31F90056F3269DDD478B30814AFBCD4A9D97DB7236FB5
FB2EA5260C32BB386E31AA443830EC21B377CDD6C3DD37BA8BFCC9C08861A097
5C41987B2441A33E7CA24D50A66192E1F4BFCEDE4A9532AE81ACEEB74E5A9963
724741CF32FE5697B3A36C680110267AB6EBEB399968060B3E94F9E57BF11E5C
DA7AC52BF5C8688A5995394D3CD3DA0F0C1F6A460EE9B8322C5662A1BD344947
C4B8C89FFB384E5C03BD7BC6C458B0B74AE715DE97B0774A1DFB8DD2DD587F39
8DA4761FF86289799B4FDEC320D0B4627C735899BAA07D6E2CACA06CE4740FE8
331BEE71299106C3A623ABAE320B39332ADF0B73BB0AD9422ED3559531B0922D
63CA6193165C89106213E73408F2271EEADBDD9F21F14EE794C665BEB2ABD534
73DA2D77D465F1E1911E99DB5669F390804B9039E21F86050892BFB7A5A272AE
8332E5326DA0105DFCFB808E0588E85E9BC7A6000F3AE2AAF5541C34111C3ECF
88B4273FC1827F1B9F3B647834A0FAD0F0DC29FC1A915A31F5790637C5DD495E
7D4D5DAFAA7EAA6059B58AD83135BEB95E71513F9740D5E7CE462A4C18B5082F
EEA55BBE41CDA119BACF2A27F9599314216B2B577482AB7175FEDA2B47C1A7D1
BC5DBB109310BC8149B34DB7005A8170B0431B7DB923CC556137BA87A2A77827
3A95CB3627BCEA7C13164CDA29C02F613A43A5DDF66D46643B9B22B86E053C9F
38F48853F48A99C3839FE9D9EE4FF857EF04F394499F17878EF5E2A1C4DBC941
16517244FE98A3F37DDC98DCD74836BF85647FB73785C90BC4FA1B971C820051
160FF3AF7B8D0E14619745CB010FEEE92194957283C2A44712A1564D6E8DA9BE
0412D1586E1A9FFDF936DF5911EDEDC892C55492C9C5F31249DC67B578113CB5
645BA35B4E84ABA3741303B7E51717E73167F9FB3C916B525237F989A27E486A
7CF972A2E660308D32295FBA8F811A2539DC4AF96DB50F3DC35A8E1E724C7C2C
88A838405E68FBDE50F41015EACC30452B73347565D1536902C4D999FF2A4983
70FB53B5F194CB21DAF977ACF5FE923D67880208D36640A15D21DAD0AA85FE99
BDE824C01ADBB8094406FF507E76BAB2A65BE7D6EF4A96341F14C3169C4723D5
6A7D392037B19987A14BB4275C40AF5224E5564C42EB0A547A170D58494ABEEA
291E1F0B10AD08FAF5DA6CB3B61BA8E3BFDDF546DBC39888BC4743DD5EF8F583
AF9D46CB3897F728E27F7C1F8F33A41A717929B90233BD33443FEED6F5A6D14C
C8E4BB9D58CFDAEB33EBC1EB67EC0259A2155DC724BA303042CC03D261CA82AC
31677837A7F107F83253A435F422E9E2B528425A6A3FF37BCDED846643096453
B0CFE0EDD507B22B5FDC6766684F5E06AEF8851706007E3ECBDAC71ADE276F66
128815A6436F1DC3D4695B4815384EFE2047FD64653104825B8456FBCD50FAB5
EBF79797ECE13DC44D2B88E48D0E4BC2814A552EFCEC175D42647372ABB4EDAE
4AAC9C902521C667C618E34DFD1A816B182BB8D9A3B3BD45B981E138796E91D8
DF749E3DCE9D98FD60733F3D9888BCFF33096EA86C0FE64EB42E1C31369467D5
481268A0821322C8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08EAFF9731E745F2BA8ED0C0E
1ADF7821CFCD4E38F3F4C243CAD31D9F8FC68B9043740852B4CCBDD37BF728E5
648215961FA82A0C847ADCC5187331D0863A4573BE520C02CAE14AED4F06B3F1
FB4A318AB54CD86DEC824707B29F858FD726A167F2333855C0575EAF4EBEA0B6
754B1775F967140641FC06F82B191244186FF347A351FBD8FA62E8C978B21F6A
E124929876488AFA97FAD1A68A0C3496BCA768F4AF8016D7A65BBA3AAFD7F5FE
E75FE714FFF3D54D09C9747ACA01CEFD260985C6E87477C9C7843343C7E9E3F4
0537D461EF019E046DB8B5BA258462B2FAEA1826B3410BA3333480CFE0DECE61
CE2731FDDF7FCF2AEF7CC2B1EE7095F480B3B27D78FA90FBE923D372C680C87B
7F0E702B8FECBE0CBCB087ADD6D28549FE707FCB616448B0D94CBDC404915943
66539B177D5940370C2035D0FEBB3A3C666ADCEB45F5B15DEA729BF86BBCC309
0294FF267657EEA805DD28DF5DAD26BFAF3AD9B051A45CBA4B4D328EAC8A36E6
DFF8332C10141AAD2E204AEF7778AA8105DBC2F34AC44C8CFD40CA9DD0AB7DE4
875B44538A8917FFC7D913F15BCB8BC66BE881C2D86F49A5B8DAD71145BE3228
8ABB5840BDF652782C7CFC3DDEFB6D76729A135CE342D2C4A0898DD96065C9C1
CF81E3ED53B08272883E63DE6E3950836BFFE5A63B74E079D521780A2A173A33
9411D30E4B615722A66E31B3D26325891F0EDF3A15E81ACA3C87E1A7DD7653B4
B72FADAF8FFE7F712181EF9CC1C961D65A6CC96D0CAD4B5429C8DD2C5CA352F4
B369AACC5479160E604427C15FB62147FA97E51B80F4BAEB8A4BB3B5A8C2A33F
982DDAD7F594EABF8FA378A44765F30EB2D6325CE06AFA7BF008F8E4C6AFA777
9349DAC713A3BF254DDEFE78903852ED040FEF48B157D38856F9C8398088DEDA
C05720DF86EE4D35E8C3C976352341EF3FDFD7160E85BF46E07542826E78580E
7C0E668F004305FB9C7989680EC67AB089053926358D88743D6DD8F0942DC56B
31B23B557B757AB3A8C5321D3CBFE5B1DAA31D3730F52372B9CC6F4FD0B38A50
2CA8C51D56BFBDE50EC307AF754A35FD61D65A26527DA0F2A521AF03E311A05F
FF81122C73A7C77978AE63BBCF1EF02C3B0D5A09EDAFE409B4488FBE97ACFC7E
82E4469C9AE8005AF7E0E1343A39A4DCEE48B0D1FE475E0B90D12A72F2738D50
288936E3D928803813AACB7D64D9B75EB1C2983079FF8ACCBB773497892E4B38
36A4344B2A85E4253C83E77E7EB0AAE4AEB1D8A253BDAC2DA77360A26298D8A1
CFE592197DDE9D2A94E767A25147AEE4FD1822530AE7066FDE91409619341F48
B10AA721340115691F033E72787903F71F977F7BFAE3686AFFA0237C8872388D
110AEA2A2A6F7AE6C2E3A7958CEFA5421EBC769301DA4C13BC27269A1D3E6D45
08E15DF93A73BB4F654C3E4D8B98D4C354E168DA42D7D4DFBF3D8EBBB92E54CD
DC9C44BCB02A9AF20F8B13172E8C92B729F0F68CDF8AC291FA227D0F6DDEB306
515B03434C6A9E85664505CD36EE3F4F2D5C49D0A7456FE4D4BDCDA7B11B7A3F
753B956FFD1BA810DC9A8F7A9B8F4423BDFCE33132045328B0C01BF4E2870265
0C8E8038198FAD6C3271C8EA6915ABF2EB7EEC5FF4BBE20C352EA8E622A50D7F
67CCF2C70DF547CC473C6867696359C9163C7D06F2776632B56F408CDBB284D1
AB6F6F193CCED86610C847F75C8B21036195E6AA5E321B52C4F042A3E2D3CC7F
037ED19905B7AAB3F80F143EED49240B0A1D7D9DA2FDE6A9CEBC67151690A28B
715DD08F9B430F12ACB28648F6295953428BA05FABC07FC439181BA85863FF0D
939A2B1653D27BCD86E0237C7310A28315BD687125EFE862F089FAA62B40835E
D5AD50C8B74CC99C88F2A979BF670B288FBA709E76E655A173EC9DDB2203CAC3
2D2327711498790F5FCC1529D367611C4E3723CDAF4151D61FB4FE23BBB4FFC8
5466FFCE923FA9C2D391DEC576BEF335EC046065E52D8363206BA06E7178D4F4
E80D09B3296821A078B4486B3CB12254E564470606F022D93B4534F8EF190E8C
F4C35FC9B791D6856C38C57B69D7DFA282207AB258BBAC234B506B81D54C4027
6375C98228FE016EC080A56DC7EB0AA48B0C94E7C7642DCA65A56D131A2BE137
C05E82ADE4460FA53DB78A36AB0516D8A5DC412BF0F4079199F30313CEB850DA
3E848CC71A557C045CD3579D776C52F07B23F859E102D8B2938AD5E10397D1C0
563029CDF20DBEB7372CB8CCCE6D364B2C2B969A7D503EC0B81788D39923CCE4
2A7C9AF40B184E16EFD0C56B1B27964E20F8900DF7491751B9E23492E6550B6D
9290B8380555E11DF2B93AE068A3E032167058311E69BCC58EE2B7DB98D7C2C1
21554A37AF62F737CEB563D4BCA785346068D5F1A9A860D0FECBD49012EBF471
98DA7237AF6B945C3B6744D9C1A4F8A73F375D3C90B7EEDB6AD05BF1076F695B
6F268A71C5986DE5640408055E1C15A74D94B6211AFA4AB03B1366EB436135C0
87131D2D2712AC45A9450E581BD74AE4A8620CAEF5BDEDC15EC6ECBB70117E54
5849F2304F528E35B896533FE67B9149999A4DA2C549DA9BDC9D18325A590C62
7F7583F53B6E258973F39F4E111FD125741079B1137B093E833AE82CE26BCB00
D761DA806DC4253055D92728B20BBAB139E1E84D04B46E645AD3A0C4F5F11418
3F7FA9FB6CB4D206F4CA11CC5E9788A94FE2C271FEF82386F6E6AD0E33870145
5DB98A21C90CDC89ACE7C5C31D9059FB254E3B857E6F87CA73225F2535E911EB
0BF8D13250CB4603551DBF864E9CF04C2B33A7086FDD95753A1A799596A163B8
041705471AF044E606296AB3DFD7C3CDC7A4D41C6AF56992684D02F226677047
692AF59F6C94FD304CA21F50F4823DC172D1E457A4DC76FE826C0EA9B2DC7D53
72358B68B63E3B59749568A387A91E32AF71C8ED83A3155E0FDD0C42C379188D
349350E0B7BA9844D599EEFF78339A51FA0670D0CB5D33EA620702E9C19A1747
317AA855C5151738B6E698FFE112EEAAA4DFD9A3DF3ABA02DC0BD84DAC23678B
DD348023BDA2E4C38322F7E75CA9DDF98C3515A2F050CF877FCA6A50A18BB842
6E1F272FE8BBD70CD447210035E4C95852DE590704C61C5905B4C4C83E04627E
1A0939CEC9BFA16CEDE625D14171FA920BED42FAABD76471E35B1CADFCB701FD
D498C4965129E013CDBD4DBE77F9DA819CD422D393092D6C1232938AC10D5A10
CA1D54BE28022693EA8BBAF1B0F5B05A087272B2E09999A2A37645A48A7413A2
742ACF5D9827834F23A6DDC0E3F38A8D8C388607004DF40BB01460E4AC32C9F1
F77B72C6B1A2A6EAB2BC14E8BF585027089D32A6E15E9BC41F3A3615ED3DE60F
5A0F476D66DC207F9BBB5CBCB2390B05253B7C4A3B4972718FBCF66D6A15ADCA
C311AFDB6879666E0800486A633A1A86EBAFDE6123A4D618834EFDB7672F7C3A
EB7AE9705AC6F85EEEEDB5E822BD345654B1BB84D1B0DFFF723F5E6882DE78EF
B86440DF99E6DC49E46A5CEDA55CA146E9086089B10AB26F1EE5C67E61D931E6
77C33DF0F98CF8A0EB897977F76EF39B2304B250EA4040B6AE9F7E86AE1DA60D
8C3ED9F7F2868467E59A5D073AE8B95667EC923B0990A196804DBECD076C0C44
BD15A9CF52D5D798ED7E1CCFEF6DA4EC79CED6A286CB8BBE6877BD760E7BE195
CD349C4CBD263B7A1D5719A632F0507B86B6DF43E60CE0F47F0D4961316F641A
F0C1A781B5233433813D27B20874274FFFA4B12972F6F44CED7BEEB121569CF8
E6AD8ACCD63537AE866DE0BC713090E73435D75A470B2128A4C22A50DED1A462
B9C316F9D06FC765A571B986056AA9D897ED676EAF10612E1AFC7ED718B708D8
4FA848C7EEAE779115CAB6D36C4CD76F0DFBEA2008DFC8663225486C91E13E93
5F3B267FFE85F0ADDB904F0C1681DD1E1645F2FA31105D3361186521CEA5281D
7F7DC2AB55739F163D519123C39B7D0380B85752F2911F92D19C2AA01411EB22
5C723F2EFA0E7B595EF9869A2FD475B96F06D4DB2CC78F0FD8BDD5ABFE6623F8
29DF9E800D523062898EA1336EA634762497D1981E54FC20D7FDEF20ACB69613
42297A48C1327EDF554F0EF44415F5DF5CDFFF38740AE522E67912AC507720B8
F2E0086CDB6199A12186F7F62ACA755C688BD54A0CD4E128704F34530FA039A5
8E45992A747D9799B12E44A8C6365DCEE9CFD708E2BBF4BCC31426317D3EA134
12AFED4CA7B12407097B11E8993E3FD95FC8FA8D1BE930DF751948907A765A8F
D8A22EDEB9169F1745643F2486E022E64A0C886C706C0623043FF9CFF52F868D
AE34DB4C44237B8DC28289D33AB840129D47D0E1B0A84A0E95930C75D18EE307
5E86550388AB3D3587523C584AE84196C48709B50CC90343ED995B8CEDC9D53A
1284CB15B9F69321DDB366689DE0BBA3314BA7215F67B2D8A1776493BF6F31D3
9C59922A3AC73135FAA12F50DDE92BA87156560BDF31D902F03EE538ED2D6E6F
39EBC791DE3A92249DC9FC2631DCA247D1F7C9E5B0D18A47DD247EA5DA0D89A7
F3CB800D49FDC4B81729AE5E9D0EA9F6A22E8560997CCF505FA919455D749C21
DD6FFFF75EEBAFA18CE720CFE0994B19301BFA39F77336CF9812FFB34D531EED
0B484FC8C8D637F64C91AB59742EF3A7AF90291EDA5FECD6C63204755803F3B7
B24F3EA7D8EEC8E1B9ACBAAD264C9E21677BDC8047B5E6152FD938D85BCB12D0
9530B04220AC7ACBF7240C4B2C746F7398E271ABAC690445DEDD2B9CD98BF3E2
7BB719A96587EE0B0EFEC60B5AC0F5912AF6D0920376B98240FE63E44F18CC37
F2F3963396274C4CD0FF350D1CEFACE92AEF39439C82DA06987BBBCB4D24C4B0
AB39D978ADF0914D725BBEDC3A473EC4048A2FE114F1826812E280D8EFCC8AF1
938EA2040FF7AF82276B88B6F131C5A810CDDAC0067204B2760E0CA11EE759EC
0A201330AC93BD5D61C1B334F33714019459DD03F01756147379E6B0593BF96C
F928CD367BE21964291CEBCC9B5B528E982201A5A70C893F4B3AA0690A4194D0
3DD665C5A4CB781BCD3CF8B61405B221C9434D4C0BB6BB33F977910DC2486D43
70E998D9F9749D347AB3805E3DE911FE716884177E88D5442BAD359E485088AC
B824F6A430490000C4CF379FCA6914F3DA526D98837A68A50542974A6145ED32
5FA079CDC850064555F7B78D5F61F74DCC9D00C3A31B1D4AB8C6743CDCE21941
1759E8063C5F6AB613A68424B4A8DB45F5EA10C76DFF9DC1346529221DAF8F6E
A9D4CCD7F8460EE0F7B848D5F8E64067BE842672D3946382ABE2F9670473259B
ED0DB7EC5CEC30604856328E165323C208C41B897A165389103E10E85BA3589D
8457E2AEA93EE052EF693BA2BFF2DA262B1A3B9DA0D76BC80AA6E507FE9200B9
A5A5F39B9FE091286250FEE8E29F495BE6E83445A89C3852E377A6C10BDAB808
2D173CC9C164F9E8220380383F9A6CB3557476A948A666A21B28B0C5AE08E349
D570C570AA2613BD26398C35D18A4990302EB8EF77AFA5529ACC78C1AE146F3C
C3CA468EF78DF8019C8D3F3D88CB3E9ACFDD9C81380EE25B6ADD6A537B7C292D
A648E7F076D4C61760181478F171C09ADDD9C81CF21430D911A9819FF91777D0
5ADA3521A6D6B592EA06B2131F567175C35B70572FD981CF8A877F293DD1AB66
B163B1BCEDF6C1865BA6782417889F40952C23FF18462DBFF030CC8D4462852E
A6BD93781FD572993354752E32A01DFAC57E35F30FEF6E64FAFAA4D319CC125E
14FF3C08223B67B94BAAB97B7676AA4304D7D4F838D8F3E78AEE8E6EE42AFF4E
3D3B50DD2746E8061B2211C0CD2F8593B9D6E6C66B58748B8C86D2232549EC4A
9B56E8697BD78CBC19FF871F3ECAC570955B4BE0E8593BB13EC8B8BB3B65DAC6
866FF6DCD98F61662A340B80633B7EAC6F7765A276C09617B1CEE6A2110AE632
F377B760264E3CEBB1CBAD4A26FA099769F891D5C29AA8DDF689490A59976223
CEDD5CA187C537F70992A7D754540273211045D38F8B89D5CED1454092CCDDEE
84EAC2C811982B40C6C29B9EE8097BCD6D301E423ED423EEB0164628BF769386
D946F2B8AE03A134DF4C4C9F5FE9745D967F0D00D2CED5A76F7AF79CB7FC997A
AC99D2A56512991644986C1C2953838629D36A4459DEE2C27944F3A286BD989F
09842E6E6728E249980D7FE75FF9E38583245B1732822DC8E2B42B19ACFE80D3
1B3074464642E79C81FC02A335E521425001721C4CCE326885C940F15F2D5E63
405AD84F53A3518E37ACE80F0D6FC911E5A2F509FFAD3ED1519652607658A8CB
EF136DB4BD297B0C8B4875981B3590EBDEC4FF31E85EAD654293E053FB013F50
DC1BB61DD3EB9A5F2B58DE37DAE6163E71C423503B5ACB43F437076155361B95
F4AC1EC3372E47D4833BA83B83FE6ADAF205AA65874C7C69B66855BE88ABC6B7
67E546B6A6C74E2AFA6E3761B6CCB023BF3713F94D198424FFB92D7018C72C6E
5E4F9B44A1EAEBC59B44250D1BBEB64DFF26B7637A0A144241C2FF3D1BE93044
98EF87286D19D18EC3144E995030C11192CA5206E4A1CD30650132EC4E00AD81
C848AF10633C856BD8CF1318870C8AC5CFE45377A530269B35153FA61F1C34E4
C8774E49954D74A1473496119F8F0BB82D2C7B55B34AE5D9927D15AF60D699F3
F9386CAC90CFED9E7C2E231C3A9CAE048B0E029598BBF32B8ECAAD7821CCC91A
3EA432CC7D47B876607F836B570C09204D565235F0CEC7C7E517D52DDA787714
1F983DA37F8B5CF25DFF5F33775D265E30B3511FC827FBF70498D25B119E7181
E9A4E590EB1E226F12694E976C307F1DDC472661AFC430485077FF0359E15139
F112BC5920A56DE86E617283507329EEC652612CE1B9CA640E8BB0DA21F1FC6C
200702087A0101DFFF524E700FBF4B7B1CA3E8C51195421811DD9D20661ADB71
0CBB04A0ED498CE90669D28662D07D5EC204FDCEA6B1C84F228A158FB3AE1E24
C7A10121AC039651115305D38840D43960B2E2AE882F4561F10C8AE4EAC40CF6
FB4CCB489F161A5B1E9ED6261A0DF8E521662B831681B61D59D4AD3467C217A9
963AC529CB80E4CC7654C7869B03D4FA542F52569F693E14165CD95DB0631638
41CAEBC936C3AFF042C30EED4974C9E7FB7CD458147F0A784F0C5A4EB82605F8
B0982CF9C2354CDCFA70422B742B599E2C2C942E4EFB033D598A7A295ACFDBF2
60E6CE6C5C01FCD2EE7D4DCCF6A42A4382ED8D71D3DC420194A4D95546E9C601
A7DC61C2BBBAA11094759A6E936F2783D602C3BE2D209820A338D41CE34227B0
DF0A52D5C3BAD2ACBF9654CA409264F16AD68DAB44AA4E244EDCDBBF6EDB7DA3
C917B198BA0BCE4DBE17BE4F6AE8E10BE5D92A1710AF540233C31ED1DD7F841D
7AE6CF137C782968ABD55C9CE61AE62D0D692899859A1FE182EA054A7A3FB942
C51D0440717A0B00C43E181850964D8FEA65EFA0411E8F1CC697FE9CB09F79B1
60E7C0430CBE2D1F64CEA6CEB1D41C232D1663389554C642B87047F8341A644F
3901907E28692165CEECD5FF28AC787665B90EAB8E8A5BF19E09E620C2BC749A
CE9F56B1616DF4136B8385E0ACB45955EB696B7DC8EC3A77723B75705B67BA0C
45256F0C8E2E25BDA66A0522A89D14086EB1EFEEBA34BF0C819D5524C56D4E07
5E185DE10679B42017AC715CAA0AA8EFDF18C8D77A71060FB53F317E26263057
9030885D3FAFA0BC4FEE490EA201D069C6E1B7A33E3456530B31CEE9998BDF30
FE0D45A6A23EDF1CD58D6A3E01C4BE9B136B96FDB7BF0414FC98F0F03538E011
125D717041646890FFC58ADF1853A7391F34EA94D50FF77BEF5677BC05DFC528
6526ED2DC98902F9444C4B3F15FFA0414EE7BA7361D734105860A3CB1FDC9D62
0C51EFEF979BD6A18E04F0CB55F3981B021D02341E0E85E1954468AE4FF76C84
23AA96A0FF8D8B8B5B44BA384C66559D9289225D58E688A44E77B7B8D43CE410
0B2EBBA334BA4040200006A338707F3E05B5511A706DF0AED58C6319C8D9033B
35E71083A7A3D156AEEEDA3AE299116A0E3096AE0C209EF13B60D2B9800BE6FB
4D17BBDC1721711F76CA33C70C3FF5786288CD44B42BD092514186CE2D77E0AB
50F63AD1A3482F4312FA2A74094D9BCE2D45506776E557A5D75F6287323032F7
93B17717BE03A4112E7B65A1943D18AB0DEEFFB1F5124E47FC0510091FC93158
4DBAE5E044ABEB57E2DF8CD578557A1CB436FE6B71A7D003F835F71333F9AE4C
6F481EFC254E81E7FE9ACE6E107DDC74E09EF8E1B5E0322AFA03CD387EAC9D4C
4133C092DD82B4BD5E45BB7DA4251276ACE8F9DCC5287CC280877F06182FFA23
DF4C35E628AD3883C893FA30B41161C8862D158E88EE3F5909A683EE0078D391
0F04B8076B500D5759081787665446AC849999A3C58B696D8E106389EB6C61F5
5F8D036835A5EE508B14805C63AC09FD6002D6456766337D03F1D68175FCA5B0
2D89B6E791FA3E8D1625EAE1A656658DF2CF6F219318D896453EA620CB4A3022
A9A2875C4D789B92D3BD7396098A5EC612CF29FB068ABB0095A65E0943811005
9C863401FC84578336CCDCFBF7FA738843DE9FCCB37C2C31C9D1A4B03CEDA983
0538A6F35D4D81EFC356FB6FAD3BE0CE12D1CD0458545CCFC384F308F2E60B32
F0E96AA6FFCF31EF6C537E93CB3AB9BE1AB6B0B8C33C1B0D2C40B6C7057A5772
D55A4A550CD43AF2BCB1FD24BC0524BDB382F77E2464CCA5621A37974548B1AF
000B23FACC7660B26CA306674E55CB5995F53282A0F0627B5C815D1653646621
4580A07F6DECCD0C28009F75AF1719F096006DEFECBEE71C9D7D078EEDD6C7E1
A08803EDBB87027292A745637DAE5841330A7025B2DAB37DC91D2776F05F2726
5B04BA0456EDF7A3257445F739160771D99C0AB2D0D3F06C99C79A95B65E7851
599B1ECCF140EBB98364B154E87E5C0A46A73292083D9D0A872D893183864C65
BFC9AD54F7FD0EB74CE29AC3F2BE92F6B1AFDEC5C8FCF87628E012651F69309F
CB01A6309F3D80262DEB3B433A5C8CE9CE020D855292E86F97972BC6B3192FBF
9FACA51A8C649301F3421563A1FCD70BD2E9AF404DCC898D44D5187C1CF82086
AF9C780A67F7F7AFF865968B13C2014760FCF6FDA828E0CFEC533A782904AAE5
DA4666E600BBA4A7C901FFE688633DCFA6006B77FD925F993A30E90603BF8B96
00FF104A4C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 19 /acute put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB3A026D50C7A88DF5F480147D87DFEFE463F76122EED3A0353A7
E13321F7E480062A971611704D93A866C29AE2DEE5EA872F5F35A2686E37695C
ECBC6F6F2CE5F46491EE865739B0D8FEA41E1070870F50E2EEC5F10542A071E1
A861CC30A769DAA4DDF8CC0CCBACF1FAF00FAF91D446CE54AC20A4B455D06578
4E93EF4D2B88C75F569346AC2B878782D12F909513434C6DF848316629CA47FF
9B07038337966F12D38AAF6ED045BF1102FB39275FF7D8D7983121C2134E34FE
F1618EDF8B9BB56654411A74A23840473DFBA36E04D180892D9E1AD5D37BACDB
CEE97B97156C9B60321F42CEB4203F46DD2D9DAF8F90CF4F43A855888DF002F8
825A21D0D4869F02FA1C99FEE1A786CE64B33ECCA62C7535209C546D9201261A
A71B05F2E629B76DFB0EAE94203BF88AFA8E328CF74D77049949C2CBDD9B71DD
F800A4D407601BB632B33F1E4AA97827F837F97419F753FF9C5850EE37E59A4A
3B90EE6AD37F3D078B6D4120137695A8BE5DEC8383E556D1067F2C6D1A2CA6C8
4ACED9E02D9E46CB2FE2A6C3F956DD96560A026C67523E5C62E46F945782230C
A3C53CF0611566DA480CBC2ACA094B76BB85319087116F501CEABB9F46AD331A
C05EF80D172579C60F8DECD8B6327AE6347F01850DAF4EB383C00FB0FBDD6725
15FD5676BC7CC3F8EE861CDE3449C37F2DA97E67DC84BC6973E552E69A1C4D76
387432B043E82218236D55DFE34E3E981D128034D2BAD5EEB75950F9106F2BA4
0D0A12DD2797EA505DDC0A58C2A9BD251B3497F77B0CD6104106AE0156C6D538
2CBC7017249A28B7C05C0695DD4B5C705375EF9C87627A1CFEA2A6707D6B09A9
2BD451DE2E75ADEE792D7D611BD1053C2B9B1397873A7C9DB9728EB209FB5A0B
F348B5D5202EDBB80215266E27F62AD11099EFA0C3F96EA894EC646A808EB33C
B9E6053831F9C3F4273293AB153B6EB6CE6DA325D078C739AB157321E7C4192C
45D5080CB5C60D6BD5C9B15BFD37418CA33E33B5F6F6E8EA0ED503C7B55E1F62
FC62C03029DCE78FBDF990E46D309368B5AFEB6756F38085408BB3062FF54A1B
7E3179A44CE640D69D7252A590CE9399D5298BB705F2B3FD9F888459A681E27E
2C4AE26093689327A256571CE9457E7F0F8B2C23380A3492F87E469A8D4A0B9D
7C5926D1B11DE3F3C578BC1B886C070642E792E2389F719739DA2F3137D03E68
662658BC4926457774C464F3D8420103A78C0BBF9C71C946EB77EDDB65421F96
C3409581BD5A3BA30E3461AC72732809646634A1ED34A59D5A5F561784573338
B105AA4ACFF0F2FF4693372BF2925AE8311964CE351D3EA13DB52AC6F6A1C3F8
D55189D79E072108D41E533813A8D64E6CD879064628A19D9415CECA9C79D4C3
92BB92EFDDE3DA316426D873C97DED4643116E4D38C565127AD010218A19FD12
ADB07BC56A8C907284E3A22C5C9C397B9529EF8743BE8F06E71ECF9D86095BE6
4A36FA77905AD6173950038801AE41ECEB13F5AC225AF00258F45113D686DA99
A83AFDA49158519525813796EA18E45E6D967E1BDDC1433570A13875F20463FC
C3382C06FDF4D6DA66BA05BE6DE6BE1AFC4028F57C8B5C0390F94CBB55FCA761
7FA71126F076BC9A516CF68FD824F01D49DF0EA384CB6EA25D04E589EE3DFFA8
57FAEC97BB2573456CB7F0439C1B26F85CFB17A378513BC577A7BE7680679B52
77B7939EC62C6113BBCF86D7A1C356032136221AC3447BE3F21E030748189C55
3B9F62C83765B0149330CE55F0FC57A865FEC1A4D1579702EACB103393DD6BF3
00AA57AD0C632F766E9637705B2A317094CFE27D96F77D83F393457B91495863
453C8CF52FCE837AA7D34AB152C402AEB84E556C30CBA8B29DD64A694F1336BB
A4EFBB6E72FEAA21C559B9C532F86111B827745BB261315C4A63BB27FE29CB1A
B73C6932C6D802D366E1CDE6B88280D2588E5E615A02AF345AF36188E54E6316
1B96A0AAF0202885FF6B4AEB766C4947F8501B06137150FADBB8970D570BF481
3AF2B1B3B2D51364972D3F62C80D3E6B8FAE2765FC909D6E7A75ECD3E4BB1C50
448CEAA22162179ACE3156711E0E7FC8044C0C4ECC91B8AF9A3FFE6A603B15D8
7EE7582AA955CFF7718F9B4EB041B9468DD40306A7E60528CAADC389D9FEBA0F
7F089708F461991A7D0DF9CC42206F25481C94C0C917910818E2E0AEB45C4BE1
5EE8087DB979CE27A3A718D977F90A0F4613F064626BEBF9362E2552592BDA9E
7712ECCBE7D3B0506E727866C5BB8393C4BA41857651883A729B8C073A1C110C
CB0188F23C1269B50E15C6068A2926B447FF27B5C906F97AE33B65CBD0129C99
0A17DB0EDF2A863B6CCC2CC6C53914A89F795406ACB010086114F4032A0DB033
EB6000992BC331A4199A16D9B85219B9ADBE1CA6529A7298188C295292B58642
A9D79D6B0751724F008C74C0035ADA5B32755744DF216042CE0E9BD3BE8916D3
D4C0ECDE469085BCC3A438298571204AAAB9118DA7E7DDB94E5EB10375B523D0
D91B1CBE1F8EAF96A1FB9419487BC7A82E60F8B67C4B91B3E92AF0B9183F250A
909E7B5A77F6237901DB36424D030E035E3C097473248C1AAE8A332BB5648690
3846665621A0651B8EF2A5C4569868B83533B22757B91D5E9C011D748F8D0D66
5709379EA5F0B2ED99160E3E7BD2AB8488A7787CD10ABB9A367CBA8CED2BADB2
0B58D087DE8A6A3C971A03327FEC53F1F43913282D7DD8B3A7E164D87DCBEA2E
893E1D2DE91A7526950A68C9B7A53AE5A10BBA2A9F300D43633C32208368A9D0
42017D5173497398D5059866ACDA6D7CEAC92998DCCF28D69597CE1A2C036538
96E07940025DD68C11C8EF40153E2BED41CE8DA5C50E9EDFB70047B6D2CFA4EC
E6CACB29196D5920D78A27E926494D5F4D94DFCE0A7FCC2CC6C236165402863E
27C1582569CF7D4CF0E63B0E98138A8A60F08AFBDD5AE6B3D9FA8EF905BE8325
05C3A2C6C1C4A50CB4B2B58EE912FD4BA7B893FE02DBEAD80C03FD91C56B8CB5
DE274AB44143FBB248AA643C5F1BA7E15CF551E15B269BD37A87B2BB536B90A6
6DA0A76F439F62095CFF51AFE5F6AF1ACCB8BBAB2D83E9B3AD2A2A9514AAC2CE
AA798A3ABC64F2D46A4D2EA821568B75BE2808A07E8662D72E9845AA6F3C50EC
FA3A33CA74B9213C2A42D1ACCF96380B0D7F9711FF1494BDFD5CA108735A0D6B
0A56B3CBB5FFF52A11608AD195DD5FDC0F2E2F75A3566D395D227FD5CA00C9E1
2B31A275A48D76D180F1F7B118BA381BB30E3E8BC3F096C5980BDCCB256AD839
8B32FEDC4877524CA11F34628AE320D33C5D250CB54C53BF3A9ECD401D42FC7D
991844E9DC29F75E6ABB6DE92F21CECEC3B22C6A21CF66ADBB64198064D172CF
4AA0BECAF9ACC7583F3FCA309541BD5F5937DD1597418704C16D0FDF03EF6DBE
516AAACCE18917D8FBF529C90D2AF99A642E1428DD30A0E56EDA743CE5D7BCA6
A62FEB83CD90A775D2FFFF66D79B046D61D145279208C9766EA1D1CC9A12AA57
15E427F7C300C5DD8859A7D271EDE59D7C27CDE16967E30E5F1F734C5F67C993
1627A6010A110BB347EC119A4A54581BE372ABF08AC57C1172B051B953AF34ED
B1FADDEF49502ED0FAD8B198DD4BBC7B928C1F1C221C9152F4E8B0A4A314E918
B627B7859B881E130BEE705486B0F98F89C6E780532F1AB8BF5AAF315AF8C54F
77CAB81C8AEC3672C2221FDF135DB693EF730C216F02D377EB944B9520388906
121A611CAC40137668B006F08CC67BA29BD81664994D89F23BA5FC8F63B7FE71
D6800BA1792C25164D3537E3B80A045B5E1EE2EDF7BD08F220DA5353F8D4E385
510AD7A8E4F0D189598732AC32E23D298018EBD5EB49D54D53D75119E3887295
013F3B922B983E722E2C2EA062D14F2DC10A58285868A8BD7D341E1D224A1C99
C7E9EB09F18EDE01897D0E3B0A789C9242B16E648503B944BF543BDD214ACD78
2B06038DC94C4E04160F551D0EFDCDE0B2DA43437DB43F1495A2B17925C6B554
B14913DA9593B0A3ED952ACFDDA52C2D3958D66FA98FD28E9513C5BB752428DE
0C30BC07F619A5A1AE579E3D18C2C6A1E8F5ED2809E8B88306E979D980250C70
5B8AA288C7BBDB53FA432CD1951C8720545E4371AA6603A2180D81648847C652
02F9C14964FA3611D999930C7E76F48BE9150BC51E69B1E6B7A526742916F068
61A339B546AE8EFF5A7CE2A2157314CA4CA675A0958D44A7DCA062A39D22083F
51EF1944373F58D65B5FA777F87A79E98141F022E23D08258BE4D2DBFC52FB68
97C3DCC54D158B79CDC4740C723F1F69266025EA445940F4273B50DD27E9BBFA
A277BE1136782D9F2096F95A88225992E64FA6CDE6C369B652748F0FAD0E0C5E
86C2ADF74241A78CED42F39EF3D72151E346F2AD3993B22153B82DF94A832E98
440AB0B722D16904079746721E861094AEE5E971FBB5462680770F123EA14ACA
B0C92FF7E2764CE91DAB4F2E3D6FF69055F9289EFF0E1449019142210CB1275A
38274101C0B0DBB1B0F735EFD1AB85CFA9439E47B3BA08EF3508360DC0DD6927
83C16400EB078CDC54FA12054B352CF0D3D25A998A5D79428DB5B5851FC16722
EBF8EFA6E9EA7035E0A1DD7761F5FF4416848CC340BA08AF2C54EB3BAF523287
A821F81FD343856D89284B61039C25F0C7568C7184D1DC5A075519068D9697C0
FA804E2972B0B32D655C98DB0CDC83846013735006CB0BDD44002847A6B6C421
9447DA3C594BE8FB72264DEDB144D9EB6CCEF8939CC8582FBAEBA5EEAA4139B5
C163D46FEE72990F296E1FDDD088AF19865AE92D5A3FE42DE8DACC89C0EA005C
89D843FF0B46FF45D2256AB05ACC822054A93BBD831FC35C023004E94BD85548
391EA8A3214C6DD1C364BF26C20FE2C78C941503A7171AF20B0F64312AB18BF4
D32304884F9312F92272C293AF5EC7E19EE8A8E86D812531B9DAF8712E7AD6E2
6DE764694799630294B1DDD8F4CDB2A034C63D6FA1C9C7C0B5C3E9149F2B0210
C542639127E6BF63EE79EB56DBD0B989220B8E45E293DE611BADEE0EC4B53994
8A1D8B3F88EEA85F0941553D26B666ED845ADB2F4E1CB83C3CCEDA5B24AED36C
2780CF668EB069D888BF7CC07DE8B16796131B90C4CC290192A11A793C627ED2
86912E148F92C90FF8FC70C3D58DC484BE93AD7A8B5E0529274E2C78F23365E8
21544566BA0D047B71372C4A08F31F512134D3085AD2870063D944BA45AA8340
C4484A7C8EC7CA0319EBBCF45E4FCBA7D949BEFBACE3D78ECE555E6821B765A2
A7FC670CB71F2ED7567AE3500777F5332C0C46072143E390B4C8454863C8CC0C
C7EE8B1C26D92BB9F80847A43C06C2377894B9415F26464A0354FD76AD2E5A54
04E39F36F25DEAC7B14BA0F29B038DB847C0A7A69F44304AE003C49584FCA2A9
AD50D0A86F42B6D522BCA935BF1CFD7CEEFB705321FB2A0E5DC7EC85D0C13C39
D8B849ACF518A655222AF47E47B74F38C18CD9EB5D9012491E6A96138988F2A2
C1B609A544CACC3D8F6EE9AB8D6676DC9F5FEB8BD9D6605B2B3F2A88039DEFE7
AC626AA1BFC1D6D521E9D0A70DB91B03F5A8FCD49E1D2C2B8AFA1D309E9015F6
E6C1A6773FE4EB4C001B7DE10BAD9BE80425D0CA626D0AAD2FF8DFEA16DD3F19
DD39B2DB35000FD5F5B053A19BFE317D4EE02DD8CB79834C1D80359142019397
D98A8D6E30B3ED76BDFE47708C648A884D03E3D1F686F931FE8EE50E4E7DD188
5ADDAE54145CAEAD2464D8D80F4FFE26C5FB1461AA011E904484564DD5354376
8BBDB7A77CFD09B2334CCCF1F63169FA6B046E859C43F066CC1FDA216C95E341
4B0BFB6ED7C0D2A3FD664384D9F90842A91E41CD67C182C3870658F1BDFA9399
CB9F3C9DBE25819697AD0D6620C6382A0DCB8AE18EBDDE9E02CCA815C5A9CDC2
422108BE2F57ACD64A4931750F984FE9DDE42F3D61139C6623060BAEA3852BE9
E93762B552513815316CCEC39102E679ED127F916B8BC98083BDF5E871E5597C
6205289ECA36F8CF893F0A5B4508E353BB464CD542CB8CA49EE037AEA2737943
363BA43BAB7A00F6CA439A0E361DFB410C3271DA829444478AC696D1A8EB6137
2D307CD00B3C6675535B3C27B182704B566B0F47EDCC17EBDC44E17CFF02F114
F7DB4176A7616FEC58E03A3AE77852987D6CA5DDE336AA578E4333C2A5DA1D99
AF4A53CE792F3A7BD9CEBA5D5889CB1129C3857F1E04137B5E89D35A3B7BB9D6
53FC1F516BCA778C6901CF6AAA7DD1F6C02048A1CFF2B61C6A6E306DE8C3692B
63DA96AA2AB1BA5BECCA8B259B577B89BAA49BE24B3D54B9E504AB0B3D6B9746
6723D6FDB05BFF2D57EB9D53ACCF2AA678875C36E4B66D2EDA5B6CCBB817F132
EB7DAC443077B05F3E3A02790E7449B8561EC5EE4E1B1590A3C30FC0CE6EACE0
D18742C0852F251A48A4C911303B632C4F64F2836ADED606F36406AA0AEAE79A
F31B3894D7BD90139B85D6378ADB1E9A46A79C3682522AF13728D2B50D099684
53D1D660F078B3836C0C1177A28189DDA863A2B03C7DC3CBE1870D4590EA83F9
36979A20E93DDD506F74364A8EAC427B8E9135971D12A337021AE504F4A7D362
F2372EA4EADEDF8D223BA0B599B8B67821B4D1AB6AF7577457F7674861EC26FF
2D5947E3AE2F591FA5ED747B6732BF1D25CAFB4A138FE9F62EFCD7B128F07480
A75F13A307914071BA5D543E02D796FC7408FBE5FB728D1717C3292FD72139AD
A1537BB16C1B5E6FA01EE0839BC0936CDE999BF732A73E863410892536DDA7CE
CC01EA5032E362E2C41D66FA0A707E77E18FAEF24DCCDE5EAAFAD8344CEFAE3A
7BF2D30D2864B5BF0DE0C5CE92CF455B42847BC399CBF3B043E8700787265225
AA9791D537BC0D6CC4BE407A613EB92E7B997A1ABC15430ACEB1E34C9C0E5D5C
19C8E9DB87C98160D18A0E89CCE0904EE1F4691DA0BE3802542647E7C3A86E9C
E1E0A79C4AE8E2D1C3C40F2D73AAC8FFF732CECC987A370CFBBEC0F369983F9C
7D2DF97A6E7772691801C1C396D4929F1BB39FD147869497807EB7D2EF768FC1
920B487B0A03805FB47CC546D8642918727BB96788F3F1AD281E79C58F0DE950
D8D8AD568808228C7E86F6666BC072F8266B3D22AEF133027F6D3E2C1F11DAD4
608F5F456B0564B553FC70CEE5B208519979ED23271BCAA11C23D8D2B0A7DB64
02A8547E8FA7C3002C5B9329F705488AAEC0B9C7F9AC3F0A417328911C76DFC1
2E4FACDB983570378C69DDBCA0BB7770045C2D247515EC4E30E6052346E67EF7
4EED5941AF3E36B6E444B9ED95C60D80B7F8FE5CC8278D0663BA4559B5AA1954
490492B7B45343B07D9F62BF11D2CF894D8D2B112CBCBD53552234D7275F749A
C622D041AC2FBC781B702FC26D2519C6D5D55FA75C1E34E56BB26C86C9C1F3E8
18D4AEBD4DB7C8BF5ECBE5AA2FA4250574C18CE252B01869F59CFBFE5D092C05
D8B5569FF76F1A505EFB1F6989877F06A68439EBD7EAE8FF38F2E487894D5393
0AEB48BCB7B92EAB2D165B1B85F657AC0C46FF235927CB2BDCF61333A73CDC02
AAD73FCD810987789D027DE99FBBDF7B76A4BC1E2C1FD69ED4560F17FFB3826A
ACF4489BE8AC0120D0C0070A8A3904A2630ED52B459CA5D2B3D4CCB192A2EA41
87B0483FCAD4B8F0FF2434E8696D821FC8F0E2A3A8D78C5BC8ED2EBB85109159
8398270531FFA84952709CA4591CFF9CFC71515E9B4FCB48243A9C02E0B70B48
FAB104F8606EF97D3438280A7A30E58CC651CEE6A3F6D6739DA2ACA033190685
3FF2739FED564BA1E9A08D6526CEB983BD4AC73AD0EC39AC51A6A3ADEDFC2EA0
7F75AF1B0114F4E61DB77BEC44AF0812AFBBCF5580CE78CB90B37BF15F45B3F6
37D2A7C3B2CDE6DF52244EA6F7E2B938E8DA47FE8094D0C8C3C45C9D55B86F5D
B23CF2448A957900406748B63B0C6D5306388B455881DBC8E4EB5F3473F209AE
49B24F57F42069A9F3F38E33C69E6B97E29E44AE0648DDD4DA58AE0B3FD14D75
ACCE90182CEC9AA397C00382FAECCCC771833FC06D2D13177D16E0FD64FD0215
AB487792D3243DBA606DBAB7D02FE49F6BCED5C977FA617D0D12DA16602F6180
45692A39131B61614064192204832E16D89ECB50F3E5BE5AC85A461F96DD484E
9DE98A80D236843BF90E61D7ACD96E1F0BF48FE1EC054F3DF7535FFEA7AD3A00
A84A127ACDD461543C09687060CAE36E35E6CDF176717CFCC743CD7F1E71C021
AAE3630AE5E487153B19786AB9D92DAA0F8CBE939C453652F5219C55496AFF07
C8EA08A792EB1B39E088F8C4C154F216310B4CC80910B690C136B80E45718C3E
456ADB94A36F6637CE8A0AF44CC82B80127B3CD4B802C30266F024EEF21D9295
D903CCE2D5B2AD3534CF4EA16463ABB460810841BDCEF0498B3A624D64246744
A1318C993B728E7AC27D9976C9B1F4753F55CF4A29DF3301233452D769BFC196
CD1562D1D873873613BAEF8159B06197D72052A44B01F386BA909319689C495A
AA1697A9C865FDBF3234FD7335853CFF1BD81668B1419074D9C837E6805680FB
9D0DD09AF5662712CBAF178BF875ECA698519C0679EC89FD80B1DA8FEE90544D
AB1C2F39A6598B64F2ECB3106FE38CBBB348C3ED563A82859B259B4B5D19E645
673235DB9DC5E00D6B4C5B2F700A3D7FD2B8DBD1515964B4D13ACD7925860412
0D53FF22917ADE4C3AFF97F4A4C3647DFB02AD30EA7435B664871B46627C4BC2
3F9FFC7554EDECEABDF5570085B399DE466E35A0492BDD758C18A9C3AF0E9261
58ADCE1E2B3F48B4D86EBE379D4F65399D1EDECBF9C8F4B293E03C3DE35B9E7C
914E0074C4458AEBBA12CECBED4B6EC0A1989E9CB7E1EC125F00035DF949CCA6
B1093AAEF41FB03F2DB8BA1C329A535CCD36CD50A1174B1501042C9E0FB86362
948BDF97C0BCA4FC4350F2DD4FBF398F5A271090206483F8814ED95699726732
4E5B3397E45DCD7848E86F349029D48C57E02A8F1D9724F556D3A35F6245F72D
FD004D922DB4758A3F650872B72F8BB143A467A57067D38F3B86FA75271975D7
DD216D7AB0EB3152D61656B522C6E5107ADE9F95E80334752E1614E426380E01
1689529450E25DE93750023199741765BFF261DD7EABCD517EF0BD2B816A4F18
E0046166872EE1F35C57D733972926904973B22211765801FF01B5766DE84F71
A650647C806A81C15185D782DC6922009F945396811A992B54E15850C7568983
3A5CA7DC80F75A88E077509378B90B359411E2203AB27E23D47B4B1C32B49BBE
A29DD9FB86F60AEA208F6335D87539F36F65769BECA2DE7FDC5A941A9C104100
75388D7E27D432522365C2E740B8EC7CB16860F4E38A9A8C1B66921F6C09DE03
B9EF3EF971D3A887CC8598EE998E8A37783A0C18F5929A26AB0C4DF4CAA74301
F2DA1CF6482CC8D70E2495AFD16E85DD03490DBE3FE49D913A00BD6A22F65190
E73B45F78AC16E88DCE80C6919FB4BF3BBD42D6AF48D7FEA3C90DC1663FD46DA
E2EFA5ECF9F972F7DBE4F74A32FC8F4F89052C12AA31C2DB84E1A3C14708FAD4
0CD1AF86B6ABE8C4AF1CCC052D12CB48E4044927759C51814713092D12BBB111
B08A71E5C42F1AC16F4ADC9EA9BEB29CF3372DD5DF400C99809A443C00042CD3
A8F0F944A3300D9E664BDEF7EC4DC94291747C881142A2FDE95E9CB25848A365
7D142B6E04667C898A34CE3EA399CBFA581236501F4D824357D8847CA642E203
750DBFD947CF82DCE27D2CBFCC7577DAC7B1AA09D1A49900945E6B102C154DDE
77A2F08ED8625CCEB992AB3BCA48FC69CEB689932820FB4B8F4C3055F66A4804
A2162A651094D5AFFB854BF700D6EAE9AE3361A8FBC085F95F46004C31B21030
0B50F42E5F9E20A80B44E7B86A5F3DA045ECFF1D8B74E1A83FE78A0B09AD721D
AAFAA89D147E2CD08EDED96BD78C46F8BE29966A005C658F8910A8DF2731BBA4
22876E97023BF6950ED81FA01241B460C7BB35CB4F108D7E84641E4EC304C57B
38AD5537D662444FE5375B8E2C2BB8D2E0E498037262C9B48EA8A1908366A2E7
04A6249BE3653EE52D96CBB05348B9A996ECF26EF1BC89903F26C3D463F771AD
8D14805D5534FF3DE66A1192AB812ECADF69BB6C1B1CF7C774350F6D529121F5
88AD5AD6B20EF126001D92CD7FCB25692F32F3EE28817D4089F2A927D9BCFC25
5C8B1F7C1EB698BD025C24156C64455F3011C94FBC929140E3E34D078754D145
543664441FCF4A21C76CBC00B975F5B4DD702EBD8C91D8FAC367B55784C93792
ADB39E7ACFBCE16D68951BC8DB6F6E1A756F6EBBB0EBF888163EB3411D27960F
0A99775465477EDA0441A894CE3565FCF4D19584A000840E68ACF691393EC104
ACE82ED21C873088F61E87AABDB1C66BBF45BA54CC5AEB237C26C472CCD2EB14
0B308F79B57DC7C897777359A505F0D1DEC1B6BBB7943B5A3E956FD0BD1D05F1
6230173DED162B203EBF8C42D4BC03B81FBDFB3CD5FF64FA818E24329C470DA3
9B8E5F07DADCA042BA86B94CAD42B9C86E0757A075EB3D8CDD621FEB63DCBACA
AB0C36B459D341557ABEA23C2BA2E5D60A914D3C154C222FF743F93054DCD437
63B03C3A85B3782BFA92F65856317CB3337D1008673E268AD6DF419EF6417CBA
48BFB8DD18411DFC4649C76FDCD1DB8083747E94FFFB070A7075F5D7FE889F23
10B8944D2B2DC91DA6225931101F01B25B3BC3DCE6A42B04E3599A356AE24DDC
15CEFE62CB2221EAC07A59C0C942226BE4CE3061D086D31B1BC0E70B906C3B5D
E40B0054AF2E6A731BF8D29A546CBDD57DB4A1A26B1718D1613614685B3F3935
38839081DB662D72EF2F2150C892C2E7183F02BB940B03198C4A80536FADF78D
501B1069115DF4F5B0869B3DBC5975576797B7DD30D4D8E5CB4ADBC91B639994
50F3237504C351218DD52D36220FA28F2DCF27A8B24A0F7C6D8DC3A93056D208
00AA90CCF1033A97D2C1AE4F89170A7BFAE806367737F6A257E973C3F9409B16
FDFC347473AE580160B812248B8F97BEF8F367B45A36A3A8CB7FEB488E466FDC
5C1AC63C80F6F500E2ADF234BC6BE7C184345EFACB2CB2DE6FEDE83DF82D4435
093CB320B5B0DCF3E50D50E5AFDAE45BF718BDCEC17E38E5692D688725B70A63
C2E5D0807E6218305D1B36111D3CA2C9007BCCE650A3DAEE791B0F5C5DF6911D
474F24E314B811FE1883F4807F806EC32AF2C4C20E4AF3DC5798D63846055C8E
1CF25093623F0B535BAFFA808CF8ECD82E40B3FCC1146AA44D4387C395B2411E
F86342329106E905882B2929E775F1F16E2E4031B7DD9904A688B38BF8EE67FC
86A86A4D4F85384E7D27F52DDFC6AC05EF5311EDECC823B4A2AB4E6384C086D1
5E6C34989D0E6A94308F3B836307284DAA8CCD9BA863BA4C2A9D8AFBDFD62016
4B4C4A5507631B8D24D738B9A2A135810EAE00C7465875EFBC352BD2DB665FC5
C6041DE1AC443AE8BA0DA498C41FC51DD0F87C7CBC3BEB189C41245F4EA306BC
9F9D655D2190CEB37BD1FF111504725F826B9564DC909581078D001B6E436FD9
75EAEABF68118263AE570E1AC5F506E867DCF7D08B2DBCCB0CA1A579BA031D78
D298B84CA031D52183BBC623B3607B49ABF6A9A4E8382569BA357DAE4C8B2C81
D08888094BA0CDA824926E4F3537BF6583979A4F4EF787BE1FA1AF1F9468A0B8
66CEAD8191BC8CFFBCE299F131D2C71631F41107B94BBE75E5C6178070DF5E4B
C2C8D46A008770DBB393AC7A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.0: CMCSC10 003.002
%%Title: CMCSC10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMCSC10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMCSC10 known{/CMCSC10 findfont dup/UniqueID known{dup
/UniqueID get 5087402 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMCSC10 def
/FontBBox {14 -250 1077 750 }readonly def
/UniqueID 5087402 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMCSC10.) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 58 /colon put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 81 /Q put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BB89566A9BDEC70EB4F2
048A6EB631F05C014D372103E37FC3FA317EBC9973565A638403DA02E48B7D31
CFF6C241DC5CDB470561002FF46437C06EF93BC99352DF04393C661FFFBF4BA2
0723ABD9B3E9CA9E63BA57EFDBAE684655CBBDBA15ADAE43E1A2C98A3CF060A3
D16AF8FE3A49B50A24C20EEED716E49AF6013D4D38CD9CC41A91C17E4D04D79D
567E1EF49110AA9C34464E95D81A730ECEB2C9AF38FBA6B45E253288438B4CB3
DC75B3A906D4357293BA41E59C35223A6C9CBD6FF5FC90C2D07CBB376C7320FF
435A6251822BFCBB612CE630EDF826C37E95F541C21B93FCE127591D5E38165E
2B58A34AAE37712BC58B63FFD70AB80F4F24612CFD2F1466BAAF3CA2BCB45148
D0DEA0E9B8FBA4C4FF5B8B3CB02E461355051842BD1C94F41066B9B909DB83B1
DCDCBEF7CD00A43E4C0B8191A29600CA197F0BA227FB8309BB539D2A620BAC70
8A1AB2DFA51ADC9873B8E5582DCD3ED154E5D727D1665F99BD89883D69E6CC2F
DB3A57AEB612171A88E22F038461DE03FC357F771675E34E90D4D19B4B36891C
9D2333960400E97494F4FC4DBCE6A73C34A0409E433BBDC0AAAEBA7D3555066E
1CFBB4515C8B573C9B9DD12ED5B6ECEBE35AD0DDEA9DB004FC6CB540B5117B49
59CABE5FD74C6F5B6482B42C20B5FF0467D1DBD7CED2CC651CA57852B6FBB402
A6764DB342889132C911CAA713A7F2FDD8A5E849345D6C81025E02F5B8B682BA
90CC9B467FBC37362436EA6BF8EB62D784B01D5430147945BC09D1F49EE89F2E
3E2B8E6D439248A56F82F2E03EA5C7A922F2813BE6538A3A423BEBC55B345AFB
3B3C125306749E137C647D78028AE1FBF3E1A82C260132832A9668F454D39C41
736717DED0A99F6B11F005F0E1D07FE84713AAB4C042FDC166AA146D7B5E9198
E4F485BE5B135EA281FF1C1E616B5AAF02771F58C5840CB5A427FF9794F93E94
17FD799C78AED1DC4810BCEF4C6C51D3C1504EA2C6F2B29805B7ECF97B5F637D
FE92E168CB9029E90404CB54FB312FC7AA8A9F2F524C03E61F03B1E31D4F061E
1677B39D5D30C9FD4673E1723F4AE3CCF38593AD6D7F61E9DF3C010E51F25085
35D51105E1464BA146A78D7297D4D310AD91342A0BB942034A3EC0696B467367
3E39D202D637E6B14D0EBCA6AD3CF22B07D4CA69C0FCBB6C93782B2F0DFC5AC1
5D8A16CB5EDB671A0C1BA9D10F63CEAFCD0E06E42C730C8EF769CCFD57937245
658F486036D37E8BDDE5670A212FB488A8753322A5B170C9662750AA958C0BBD
8E97D8239D2A08B30416504DEEC4E506013E037C91785C674F8A6A44E23FEE6F
CCC00CC5E4D355B0871FDB8ECD64F70EE32449BB5D6F84F8C8AA2D5B1A489BA9
D7FF2DBAA8D0B84054E93D64D3E77850A3724824914A0F821EEC3D605DD851A7
606936B8B9E24D6E932E16C448140FE94DD96C75AECB73850035ED9C04A1D93C
64B21E7D4657E030483EC5C3554AEF8BE4D0FE5B9743B875340B09E01273DAE8
F256C50A1A8F2E0417440A8BB0173F59E11523E1CEF2593A4AC5AF2167627B00
C5EA97D125EB8A4BD4C372877ABF10F5B7B149D73787E0834BFB3084E9508DF7
072DD71637019599252059738D4D6BC57A9358E4B14F6AF9C4B31DB8E25C29B3
7A15F9953BD73ACDE5F0445A5DC406BB4635FAE51C1D8202AE31730E6F355317
1DC197DB0B6177307C60E5D38F4487363EE051B2E609A52BC4D45B14B6558B6B
5E1618748794B8340752CDBE7756C068975B559615D4CD5A97CE30BAA7B2B1A3
2FEF2E055232B24FD8A21BECDE1B6A479A28EC80AE2CD16DB50B30B4A6CFCF06
491C7CD5AC29FB964D4846415233947522676DEABDA0D9535F8507D33693930C
B4E4240A02B0CE7EA288516B8A6EF908D7F8BAF9012D052C6AC96D9F8F6ADB07
8984F3559C5E7E3022A957982155FC9CD599C74E18328D3AB46F9DD15D1C4C3F
9B93ADB4489BA02CFCF57DE6270F3AD2F8597BE71786510EF08142F430EE5568
4F9DDB792B7C46B6135E341DBBF062FBC50FABA80CD4A384157BAE57CBEA9781
AA4416323265168AC097DE7E30A0D4750143A4FCE70A863A31876A8FA5327C3E
36E89589E363AA2B1A6E8B09F5AEB8FFFD0396067173465B6503383DE517A6EA
88C0FC08578398C2A721E5AEB29F4AC9BC990A50CD87BD35A11F9E81F68E7B85
5E5B95A4F9A5D30379EF90D78E1E466DEF867BAEFC4F5ED2C762BFF099C1C2B3
5E0DA1C2FB33BE1379413CDDB1EE6BB3A495331F72F2FAEB8152E8AD5FD334A8
AAB0082A71D5574B618EA8D487B8FAF1B445F3395B1E21224F5492A0E06F5152
7726835C900E2E52BE3B7B654183AEDEC68053DD0AF19EF6DBC10B6FC08EC7D0
CC0E2C8FAF8C9A4C21FB7C34E074BBA4EE64226BEC8C928A784C1BEE35B72EC8
E9295240B29DDC2539CD118BAC38DB3917D14CD33AB45FE47E827F2A2B193AFF
53C5396C52CEA4F43F06AC2D08C74CC85D608CBA267175EC31311EE25AB48DD9
FE811B411AE426C9FC0B6044D1EBF130231623F1566CEA4D1C06D8032FD9808A
94479C842BC41B675CF6B90113BD681F8D43F51D5016D80EDC11D7640FB950D4
E709A46184406ED90D0892A4CD9062938A8205697A200DBE1F38EB166EFEA0EC
4FCB45CDAF82EA103DD6FDD03D146F3E42EDA6496064DB3F4FC1C5280C9E604B
D5EBCA08BF2AAC90156C11EF68137DC76502EBF216F3AF3EE30DD2676D218428
F41C655093F8B530FCA378B5769F262A6FDB4B66B83F18F050E77227E28D71F4
5F4425CB8D51B3DAE872CD86D7804F870BC564A6DA1CA13EDB00D131CE4F6460
7021661B99612629DCC20C85CF155EDC5111E015A77B0B82A8FC1EBB374B7EF2
361419BA93B857D5C9944BB5B4AEDD86ABCC261542077FE09701C96370168579
5F89D5AAA08D700E2643E88C2FB8D1D56D37AAA9744872E7C050B4CE046B47A7
83F224FA9FD311C955EFBF173042C8FC66524135F579B1397828870D5C9DC71F
8615FADE2A1CFAEA90F732B6C266E2F3048FC43EDA7A6B6D98E9DB793CF457B3
F5877E7A055C92B0246FEA8C72B3B3456F93BF36E2651D32CD614C3AECC0B4BC
F824C8363E593A6458D37408FC5B09883B280005DD24123E2D4B1B85F4113327
EEDD9186A4AF2CD6439B46C5C168C125CA80F9EE9E68906620EE126CFBF26E15
B269838A54224EDCFE2A373EB750D4829BFA410DE5F1541E428BB1E024AF496D
F5F1C151F5A645C8622F2EF9088D57A2811868A8A8BFCDBFCE3ACB8463AC35B4
8B6F44E1C1232805842F56FA468F81FF37D5D55B81CA56058558544C142EB3BE
07CFB1F75DECB1E48C14D6AFDD455989AA6FFE8B8DC54F462B3C20E31D270BCE
8E68E2B43A6625AC7E9792704FAAD6CE8BBE0B341DA7189EBB3E9D5375B27FD4
12506D5BCA50AEDC6955E6C3C7BAA84BACAF7ABDF3A270C7734EC3C6EC22793B
E67B0E288F99699D38DA8B79F2D21DD97945FBDDD132A8F0BF947950D3C0B4AA
EB7B2C435AFE54489E1930610311D718AC610C21A644F34CB2D1959B3066F39B
EADEAB5CFC6AF4D191D86B02402B00D1C5262707861C5308730579795EB53207
A291A27A8B5C4DAE0A87A0C6A260026CA3CB620E1002E066A515D7990F3DEA29
0FAC962E0B82B7A6C86B1EDC54007822BAECED673FAAEF88C8109777EB79A53F
AF3C58546974F2F56E70E9B5CB59ACB5C27CB01895557B2D82134D7F02029B24
3331621F38E68717F5CB68A8892D0B9C0A8ED4F8BB56E80505170D44C6856128
2DED0254ADA4875CF56B4D97372AAE730D4C77A2940DC8C178274DF88A9EE037
215C6FE7B9D481EE4DE809B124C0270782411ACCCF89906A8B143D0BA8B2CEDE
E9B90465C3E57A4FD9AD2702323450256ABD09A1F8C26F08480317C08B75B720
70A161C99715A35A94DD5C9647ED0F8A5337B774C8E54F9653AC859485A1FED5
37B725A7E4BA58711CBCDA6054E34CBD8E9F9460179DA7DBD243D81A1531FDDE
BF2BD425BD9DBE75EAA333B1F5793669A215549A774597E6ADA16D323FE5601A
EDA41092730009A99BF5B5AAE281844A6BF3292D4D4EDE36B4FD8BCAEB6EB72F
AC5D3CD53D0D621CA9EA8D254FDCB2B5161EE9E80B266563F669805A3A15271A
0753983004A1ECC7FBADF62AFEA4DAB49A178C231759857DB910668BDB07CB3F
7E8EC24901863088B3231EE3FA563924032C91CA9D68DB398F9BD9AC0C651EC8
9051C9F709CD784F3FF5951DECD7E869ACC34B83AECDB011E6594347855EE7F5
28811F744A4BD70D4E9077EA7EC19FFCF612689F12B34332857AE41F13E6D16A
962DB9B6AAAC167B9FBDF0068EA13412F318384134B29F3F0C399F1973A3564E
F9C3C39B5BDD4C98D81A6CB476E565860B50704BD65ABD630A5F1372F2D826F3
3AD47C08B8AD3176A170C369EF3CEEB190134006D6135C5B8CCDBE1C11FFF1EC
3F6D8C46E15C4F5EB9ED9F31A129594D542D40DC3815CD075A0DBB648D868AF5
15A05C4BDB28BF23653A3AD96CF6AFC065DCCCB23D5D9A945F8CBB539DD3BFA8
DB8F1FBF9B6F25B41EB4309995CA3D5D6ABD70CBB4A2F0C6364E5439AD1045FF
72F6B45A30BD3A548CFAADDCC6C15D46F6D783D3E520215751DC98335A4ED512
D7D19235CDF911CC69F3CF4365B678EBF3E87C456A4E77339C74930083445588
462529C22A96A28C5CE87AFA0C981F26CAED5A1C8DBCDDA612624DBE0373F026
465185A4D8C73CCD8D71EE97116F8F7D341B87FD78F9CCB9FBDA2A7799711607
6BBA855AE9D5C505870DC85FDFAAA130A351D56AADBFBD6A7D52055E3200F8B7
8AE9A00092B55DEA8BDE224B4BA7FD4A191CB1FFC4CB995FEE1AC2883AB69E1A
AFFC09AB5B9AE311A030A5BA05E2213F9BBF016C8FA80689C069314D91274B20
53FCC65C7D7B3A7504887525BFFA060304931672A078BCD7F269595686310E34
E1ECA868899BC402D17EC36CE40D5041D7CEDA77F7764C9D98793F5334F574DF
E93CB10A5E8ADAE95CE63D2339557091B4B4911A4987CF21B7F1DBADBC2DD605
8EB72473C1F2EABCC44E0D0339EECB55DA74085606C3F89D57ACFBF5755A5395
CA8D4BD47E4EE8D8B882D3AB31A1F0C62E74654C7E041E4FF2693A38A9796064
46526B0A37E6B5BF8E48E80EDEF81E34DA8F6CC9025936A4D0E6D709D61B7B5C
AB550397117F3F9D2F5A542A64DEA8E1178F7337124D6B56BA92F659AAD694D7
391028731E01284BFEA635314A8DA8DF7A34EA3B6B2F8803BE6DCB423A9E8015
55EBD90EBAE8A00298B3B6B1C02BA516AF528122C1F2B07EF69F5466C2C36643
0D665D6561705509B7582D8301AF3C32E2F3B9433E3E04D62117C7E8A368BDE1
0D4DAA1C415B2A6573116D2A169AFEF700A83F55D88813585E89C94C07802BA8
3AE8F9BC3CDBFD9C2E35D062B1FD6E79E1EF104FC70B0AB09D12CA027F33F85A
22F0ECBB4AD55FE8C616B82C46CE69A600E4F767BD7A9C5F9B37A3196B038384
5DEF76A8884425FE598A63AEB19FA698C2AF7CAA4983CEC789268E22BA051EE0
20A40633D22D8F707626ED30E8273EAAD1C065F0B2E1718B5AC853ABE09330C3
B0082A71D557169BC1559B6D285A3499D41C4CCF1F74884EC3917EB9C574371E
AFE8578DDCA459B8D22C0188A8D150437B05FB92022C95EB6FBCC954216B5FED
CBC7C90B9A1F061376A9840FB64390A6BA99CFC8279A86A730C6DBFD14C53C4B
7277D676BD42203677E9ABEEC8C97E13DAA626474513B06F8734DD784F2FBBB9
B3B448B8E8221E380AB4A86D3A683B86A54129519D50DD4FE63B30954D805CED
A9A5D9A39C58B65B08E1C19555E927C6DBF7FD07252B2B57F62B905D6B488201
213D106A41033B26FFBAC2E616DA6ADA6D560BADF10E68872806CFD6F6E19D7B
57CF1F7A030A7BAD374F16A977E0ECB8742D034ADAF9C247DA19C8AEA74EF6CE
DAFD6B1DC562FD3B77E4D008BDE4D8C7FCA9895DA1AC9EAA01C32A0DA712B082
9438E77230D38FC4153E1711417B918BA6CC03203A5FF082AF880F48518D8271
C1121E4F1386B30A7F1BC6F10EA98443F8A65C867A109336B808BC9A8E2A75AC
F950835AA84B56F59DA4C8A18859C3B68F6B6DE09A6675F639EA9107BDB67B0F
54EBC564BC2D781B61C14363A54956BA78A2BB89C9F966C94EEFC29EE9F4E23E
C0BF750144DC289F0DEE1F8A25BB52E54F656FAFEE4BD2DA57E1306BBE648051
1D0CFD6A23A3DF082E3CF13197BF1B7FB22B2CD427BB78F455C9634DF989DC90
7BB2AE247B1C99AB2062855B2948341B0F857ACD750B59E370A6698C6A1F5287
72A4A9628A592E313956C242DF8277EDD2F1FDFB07CDC104275FFBF796D7518A
DF49FF3CDEC3BDFF1D290C382F244DF18005ECDABF0C5C2C64EEC4383E2E07DC
5C82587C071E59B46B7BEF31D268F39D9B12D534344FBA515E9DE8F166FAD1E2
7D1558967AAAD3829D3F7EC6938D20E5379F414532976ABA844D97A5E9078901
EAE4D0ED1F4C7EE7A2D80D891A5013D6409A38ACFA497F5A169EB7F9F4890DC4
62FA6A89EA48267331F086992B9CA9305E16611E6AEE67DCDD588A25D37F45B1
0DE75C802EE021E574B64B3969DE2E5061ED9364B646C38D4BBA86802CA6338A
94E135D2256920EBFB1AA22D9E90C7D16853F0DF9F2D942748EE540E4FCE63C6
5380D7AB4ADD6CB00FE8F7867E4862D8DB432F28331428CC350CDF7F447A65ED
D7683ECA35A22ADD06E9FE6BAF060913AEEE7B2B8EE4798E437698CC9EB2428E
74CE73F84D0D2292DE709D71FFF8901C3505370E6F1D4E28E6B7372492C65A88
159371B1D60D77CEC93B272B6C5394EE1D2EF9969DB2838B8E128553879A1BA5
2884B0A596E8FC3D1E648B7E26A4AC57DF09B9CE09B2F91D8CA618CA52AB3DBD
D005A56A420366069B73146A6F58E88BA49671A1AB7C2070C3D42AA770285143
40AE7D7868C0E1993506B07C086AD7D4F28CE2D15853FC5FBCBF9425D8012B9E
DB6E1E5002517659C8DA69DCEACA94F368537668843D281FC11782F1C5F71977
CA215349EE6F20565DE3D8D8212A40E1227A4B22965FA64A0B02C62BFDE97E6F
C3C54FED4057EF9D258C42D7440C78C5E0CC58A40DD74ECED4152F70A93CE71A
1B3A57C46F74A6D27BF98C97CCD31A8EA487260F224A3E40F52C65490AB4098A
7B9EEB54A5A415C8C88568F7D9EFE74BBB785FA18AA27D9201F28BBC477A20A5
D1307AA78EB8C7CAD409AB64B29E4115E45F5FADDCC80CA74B296C4265A40614
37F2ACD8386AC0202D6FDB6711E8CB06442F209D781E940ADDD6D881D4F8E874
357C533115923B90138FFE31D3577C6AAE60D768970FAAB682CD0DCA3E9A9A68
6393E4B772691C1013ADFFC90C508D51B02D2518ADCC7E79F7DE5DF9D18B8435
6129064DD1A3995E5A6F45D78287CC10A0EAFBF47223494C5EA934B1BC2F7C53
686C5880303F9E3ADC8B100D441D944686E1FD811C646C6DD0224F6CF55FA87F
D132EF50450879A25242A18683BD6D0266F8F333F3768D1952B0F32AA75106D8
EC0AB703F287E847CB91FFB88CD9DA174B49171822BDE34621CF41EA772230A6
3088F8D19CF2364A329162D39E166AC728B267758341630B00398D64538FCC4D
E3E6CF103794C29AEF7F7E56970F6B1ABA87DC8D23E280EDC77556593D02DFF3
154883CFE4EF04E07E7539A4750FA1CF1A994E99B656E728D140C83AE1F196AD
9F049188A4184C84556C0476BE46DDA8ED86888DDA3065C5091D99EEEAC43092
40B97ECF9E6EC8F51ACB40869E5A6E08A0BAB6B7892A232A3A1E688B81077DDB
844137AB35E862CECB9761D4FD3514C707D6C00DF5F2109C43785B93336E939E
B40A8E211CA36120572EEE2EA522F9BB1A60FCCF768D4D6E62F4F6521A7490A0
7CE1F14CD451B5A1D6149A6AE7D0F27B7E0E31F556E2E06F41340ADE94AF27C9
C8C0CEB284B103EF6D31C8DB0FE731362CB594A3D6D3F6FB52DA232DCFB65F66
B2FF61B4380D93ACBB9EEFD298C721836FAA01D50CBB9BB1893DF18058C3E806
6F38A5A43D246318AB662082852738821A8489436ADF0A8E8DB81897A0F984F4
40B9BBB3098151F57E2B00F69EAA6B079B0964706C97E65FF25A6BE176934B60
63AC35E81BCFCC2F1656A3CD8FDD30D635702D55069A4912F08F7C0DEE1DC288
DEBDCDC98A2AADE487FFE6FCBBFADDE0787EBC433F9B2CA0DF3DB5931C7628E0
3957ECB6FF8D8C3177A7CAEF8D06FF6A73AEC37849D624C32AA407ECF1BD24B4
42988AE5D9409FB381D71265DBE5375B06FFCD490B11631704A069B9A52A92AE
C75AC0AADD0C1120CAF8D24E5D467AE411905FA5E26B1125F282CBC367FE5707
BA6044AC6378A24BE69FE23AF2D5DCE46DEFB5C1F10F5CC4E832B925E7B28C44
8BA606E716995E46A7DBCD302988D5643ACDB4EFD760D0B2389145FB9D857FC2
272060104439D08EE93C424875646C0D84C8F105CE3C36B840D95F0C13A8A047
D254E458BFA999AB393D639CD3DC58144ED58B59117A4E7B7BAC1C377C500793
DDC3A6100BA306C16057B88B0393EE69355541810FEA870F3749FF44A1C13F92
6EA8E01E94BFACA608B735C47FC3F97A4DA5C3BB2DEA9CA5992D2D65675A9435
B4D7977E67C5B95F9EB2CC47FFD07DC060726B5765573824EE24E999B979FC4E
E4259804C8F9CE4AC0E282847A880E550C064FEA8E6753F323748D3F9B05FD5F
7C3F0C2541727E5BD97155514E2AAB80EB4EB96051A1F0E5EFEAA839C56271D7
883D1EBCFD2B53B123EE59352601200E25DED15D903235D00D78962D9C199D40
9877E9E4121D68FB8C5A2F5A142019FEBCE2FD478C574ED6CA48E9B85F76B169
5D4FFDE7D00ABCF91A1B2FFD80A697B02785D6D2105E69A56116F32A8A71B1DA
CF6C806DD198872C652496602B61E83EAC2C9172690D4ACE9D93E989BAA8DF95
9509C1167EB13761906637C7FCB7545D67CEC7EECF6319DE87B15997D6C03960
6F18DAC3C9C254230CF47A4C0ECAD2AC4931F55B230E58FE10F01BBEED594B10
D6DEA9800E7F3E1AC77186A25A56103BC24165448ED8DBC3AF6F17A745C40C3B
A08DD2E76B2BF6101C64ED72F59DC0C2BAB219FB7ED940DB1E6803B46423850C
5DE37FD44637217E2341461A2641E126FC6DFC635BD330A08B766385DD00F8BD
0C2BB9CB46A24E8AAEB81C8F8FBB6E69D3934CA886CF0C4E059F794C1B1E80E2
7F8A420883B8CDAB5BB31F92FF57A6D6F0A200F81A6CCD5A2C8B1CC787FA7A20
07E977E9636DAB2823D5FF8AE7FF95BD90FAA13034067C635AD6C8E31AF27E27
51108534690022E353E29054C79108FB9874D006DE38D0C8CF1637F62476487A
0834575619289E90EF90689964F54F4A6CD43FE05D1331143B21517D76A98029
C14005DF2EB1C03CE86E97A1B7847B86BDD86AA2CC73C3E0D5E54537541FAD35
539A3457FD280224572E79747F65E8B25BD4A379C99DED7F6D3E1C17E9E2B2B9
15DCA5D50AB06721AFA622DB723D16753893A638D6EAC6CE6A7803C2280C560A
9FD60E44F3F42FE12F5B95E615C9BAD7188CD0982AD8D85828C741C0D3F98B3F
4AABC2D2216C77D223A5E9634110399894CD3584A5E0F6C231850619F7C1C413
CF95F6CC0D8D48C50EBCDBC2D060E9393B309789E6B0FC5122080006C6903DE3
C6F07D2B35452875C72EBC2548B6B0A2C807DF24CD13D7F6B371789D5145D60A
A7480757B15D8531AF957B22E6CA0683058D2265A06F62B73F88DCE3A6D32AFB
43B3FFBC6F92FFFD17CBAED8E73896981087323748E11F4400BC01B7C4D983D3
28B8EF12910E9F5FFD6736D62975EB1550257C2075135DE47BE90D784D0BD323
0A9277020CE737393029D0B16B21601268070A3FE7321730ABB3D5627FE9DFA8
5F58C59D9D6F2932532F4318C801B23EE9D15E1B41F5B74513FAF2433609CE31
3E2251FE04A89F118FE98A8522728397964DC694A1AE9334984223FF5E881E53
36B0088C52E674BC52099E5467A762166A5123D00586E2906EDBC97D8FDD3025
B18F5E1DB5963DC58D043BB2D66934E24670E071E73D755C9151506B34D5C148
FEC25A2078EBFBE7A3DF04068FABA30C85104E8C79AE7871C0EAA446895930DD
05A6897B00AFC24BB03A2AC519C546DB7AB4E922F565D96470EDE9432779FD07
A69D84671C4D7F553F17D1FF89CBAC746AE4D81C35C3B2B6DDF137B1BE7CC77B
0116F72AC24C2E925453E377762CB58143266F22677BC888D95BE44F42E41F3B
19DF67413F0DA1CF80C49B7E3FC044B7DE7BB916EEBBCFFC440734512D21BA87
652D8D01FCD3EB9E4CA10F89B06BC7BCA596D42D0CAAB8DD7CFE4FBCC0EF07B1
7C07F4E29D8C62A6BC7DCD93874D124BF8C9742CD76E498F1544C18FAE599428
C8FCF44AA43DE358E8BFD87237E34B01FD9896360FCBF32460A862677CD261C3
E647223483B305E372A36012AAD33F2DC8079131600FAFB311D3A5BA5401D76D
0E7709F080F034689D74BD5A28CFEBAFBFE1174142E8859C3CF707C7035FC362
59182E8F03D67DD5972BD15BFCEBF6B87C96F72F825C9BD93AE9479CE7A5B9F2
1DDC62078D5835005298A939E83DF77CE64B84879AD0FD13529F051A3F740777
14E7F88ABFDFA5144E56F316D3F4D95289F3791DF4970A168CE24B9D86AE1CB0
0ED484A513B8020209B4F0B4990F0E8519502DFC4AC1574535D4B0BBBF510D14
8FCB848BAEA402B4196B2FE6A5A4A0DC8C64D968F9DF723A5E4742BC78934BEA
D00EFA56D0C689976353082D4A34262964617DF11A5560D9E71C328C1CCA691B
9FE0CBAD234244161A37367ACD76FEBEFCF614973AE50A73D0F7BDD47F29D2EF
C7EFE05514B33A05F4CE1E746239B3E20FBAFFC19646BFC81A77530B6821B70F
BAEF46B20E7308352C33A6FE04DCE7C009D0A2B08BA804E631CDF2854EBB8B8B
01588DA91AC78258E7EBE1487C5AA29D5EF47EDE9E510D0B1B149D1746FB8880
38B17E07D84878C12D4D31E264EFFE735842FD2961F4DAD462C4C93DCE2AA58B
49619DD9583505DDBEC9D461A4B7897F17E23389C521AA1B722E75735319A2A8
8AF82639BAEC9475D23A28246A5474A46CC28365B103F24783D9A762A4AAA5AE
7FDB0E27FCE23DD468A432BA4807874E2997BD858819E63149F50071B01ADC30
BCAFB8FA9231424D3B8588141201CB3CDE5BB7E459EC1C0E1F4C40390CCABB78
D0990A58A83FBC8DB8D6547D04BE582411B9318AB811E824EF17109B293A8CD9
06104E5E10A973B9C31103FCEFDFC9E8CF2856BD33694E865BC441842F0CA9B8
A80D8CE9253DD8EF32DD2F2B44EB5D922D4A1A0A64750646CCD0B54FB0863981
5C189DBB6E683CA800C39DCA207CCAA0C03A686982EFF8DA1BF2A96249FF48DF
315C8E95238F7F2782A18148BB905440E0ADF465AAEC5AC3D0B52152A76920E5
E00026B596E48DB7B2A9F0D2D6475199FE7D5A1DF86C3F0445F59E83F0DD23A7
09A6366D14426D37BF4F22241366421B629AB153E89C8EB950C399EB3CFC3F89
20A2C7DF1256A62F51674FF5FB7A2A296710DD2C9539F07E64D8B4143FE32C3F
5435664DA3632692B626E09084E6326A744F1B1DD4F524E243530E279D4DB406
8C9B640D4DFD6CBE14245A3908278598E20A7F7EF052DE12671B10D3521DFC78
2CA44B070B4B150239D0FAB13E6AA7B6B48C686B92F31A1FF61714BBB4944F2C
2FC1E7CE50AD3839BF4BEFFF935B48E0C4A18DF68319B40FAA5BE22E1993C6C7
A918741C0181D9A7FBCAEA7F4B2A0B577E142367B8B2C72EF87A44FD2B008AAB
139443028CBD8EFBE06878C521C7031F5DED379CB8CFD7B40E64FE3AC39D4B15
6B139FEAC53DA2603A60A1FACC1FB896DF36152D4B4BCEA9C707E479D67F828E
CBE2FBEDD4DF3F40B679DD89C3277F15B2500C9702520B8D038F66C9AF2FC306
0FBB97C586489D3CE060D1605A3EE8ED7F92807415CC510ADE766BC1B9C92CA2
A8E833C5A1CFC71241DB4A158FBF10FC45CADC204812F7C9E58F088E30F7DCFA
1565D5F3D5442F240671A25F09425B3F476327CBEB6F91F8B05807594EF122AF
1F93B62E0A126919402F47A106865A72968E1741DA9D8FC5D2A6B71132FD2856
65251B789845FE88B91ED6F8C6D1320B3FCD7682A2BF063DFBCE13F2D46AB889
724C2763A4E1C70B81511AE7554FB3F56BBC8BEC6AD4339EB4DB9B87EA531F6A
928B1C65FDF8DAF41ECBE3522076DDC67B20481C16C9F6E1D0C4D44538DC8938
F11688F79AE17F78C7F54EFF0AA8B8830713C6C63C479CE89CEB3F0CCF9CCDE9
A053D6FECAD85986F39F20720C2479B8F88C71D8A5C2C08F0F8555326E4EECAA
086A035DBC8504D5F320C69338F1BC3EC290985CE94A4204A417A488FD41C4DE
622C39F5A9BD1EC770FCC4621424770639AE1D1A665A4C044348259CE2D269FE
B6755355F10D1B70FC51BE662F1F2E237720231EA626FA4095BB4014C526A55B
D292B651281120A0BF02BE30EEE46D0947A876359A5898EA82A518F1B4D81175
BD1802B42BB32F4F142500EAE4DEDA364523B250E44F20651C20EA6016B40196
F534755426905CB37A84C98C61AA3311E907177CA545CF75E20DF1E1A6DF4C9D
0CA1EA668310D62402C8951F0FEF810F5C20971A254D470750315811C5E73302
F4428318A06F25530FF0924DB699FEFB41E60CD7FC4DC809E0BD117E9A64875B
8DFDCA555E0BE8DB1EF330D0691191479B4CB2E316B5718AB9766F01482B5184
63E8C58580DA921C7BE4842A4F3493AF0534D647D8092F0AC6623E776056B82C
A891FAE81C99C5F41FD2842166EE44513F6A8EC32C5466EC789807784749F219
1C8ADD6BAD28635D7077B6BBC3F6FF93BAEF16B66A0C49D498E31F5651F08D32
B8E7EB230E252CA954014C74F9673148D3DE20A829638FD9195A0ED45EE79C69
81C8E8F642FC6E6311514D1F9CAA227DB71F52D560AC3A194D9661DFE3B173D5
6665F190E7C0BDB4DC20D1BE99C54083B44B418ADE6FF36EBF6A47638AAD2692
967E05A94EDE3C39000E8E278615BBBA30B30ABFB8EB72CA20E2D5960259DD40
D911B79B12485DF9F7009D69196B29090D0EA6B016F8B3EAB4A513B262046B7A
DC0A6C2714BDFE10C001071FDA2C1EE01E939DE7847765F0EE9885A8C31152D4
1E3A9794CAE2960D087961DDDC5122579312B462586D846AACB4CE4EAB74FD35
D400BE894B4A4262CE3DCF15E6FAD4C212B0559F456E7AAC196F8AA6B8EA0F13
44AF70364DAE55FC6F686B65C4C236F891476E6FC9B8E1B4BEDB4660C6D318DC
5E2179CD1D70E708EBA18365977A9E35D4512FD7E07F256D1DE406528208B8CC
2D76965CE85AB38D3CD9DBF0F225FAB6045756E172F66E5B515357B0D137E72A
CEE18C014ECF10F51C5B899C446C9355AAEF0D49E13410999040E69D2BF85700
CD6F9BF2240F02D855F1674AC1FDDB94F842A0CD3086D354BB896EC981D5BF73
04C9A669D8883F068C4F4059344759FE248C99CA2FF158FA346CE877250C3762
6B8C973BC082CEB053B2206020A33BD17837769058D2E23166E5F4C62A8481DF
FD5EBEEF83D6967D5F82337B1214E772E30D9CC6606D243B734E3F4947622A7D
7FCC0B20F16DB04BBD1E1A14A8353EF34F3A3F269DF0D5CC0B35D50186F44EA4
D47DFDE2DF533AEC621A675535F75108A5756ECA7BC65871DE03787AEBDBE517
05A2366E89CFC66189F5618EF8EC62F5350B8CB68CEE987927D521B0B581AD77
141FE47DEBC6E90AB923F1C5CBC5EE30946CFF6A7DA7D98A17566BBBDEA0D51A
F0E4239E008C1BFEDC87EC7F3A6FD242EF04823FE3563B6EC427AC67310BFBDD
AB92FA86889BF357E400A570320282050D414A08626418CBD7B6727240836894
DAF20F06F8FAE8E9A464AFCDEE24928A5B36494C6BE68A66A17A52A1D0AA3854
34D4FA92473E93DD98D2C6F06ADB00B3E6902DEC13252D8DF946DF2BCE6EF2A5
C4854A42809E07F8BA7B30630375B4B56B60CE305A967CD55C118F5DFF57A0B4
1E6C67E4BA6C1E885A679687321AAA8D0BF2BA164A9F55CF3B96E0E1D4AA467A
88039914330668A95DC9E705D196B7CC1AD8C53870959CB95768A9D3FD30676F
51601213A26CCEBB646AB1136C4912F7A1D31D07C17E5B0BC25F89AE2D214B40
F08AA933709803E35CB9A597076ED71A1F4B94BDEB8669633F98DA7608D1BB21
581B33DA784C1FBEDD139796D42F521511E45FB76A7544CD148A8B9277999F78
C5BDFDA00B132A093113C68812D79EDCBFC414B12291C4BCB708C3B9DBCFB37A
CC5BC668EB86F617C1B2765013AEB9B9715D895FD682915F15A6D6B47F7C1C1A
0955B0C1AC308B9B04CCEE28AC94CEC59E3EFC872D50495717428E84C8D7A5CA
BD19185C9EDA9916544FAA1FC0E8413470B09D9BDC944A994EB9F1C32E109B72
1AB0AFC36489CCE5D6C00E3F6DE190FC996C20750986287016B75626D1EAD5E9
4301BFA8A9702CF3301382577BD286FD128D1870327D74BC3106F06A02BA8948
33460E859BAED2F3D89A2A6034FC02A3A66B8A0D9BE8542AC79813AB518E6947
09DBFB2632E909F6CF3F72544917DE288C6C3B3C1AB46B693813F382C28C1400
5179EC689E66EBC10E9BA8F44F737205ED65CB14F79F6CFC3B55101802CEEFA1
977EE5C2B9C44BB54202213E5D4356F4D89AF83046FF1BB6BC4E3B6EF565988F
4A1F4E6ABE391C13027E40C04FDB4B57FFFEF36AB2E5FEFCA2A96A3182B4B4E5
DE0A114FBD0FF0EC68DB15D7CB6EED9DCE938340D1F1512AA62DAD104D8BDE8D
43A500AC60DCC51CE92AEB7C15AF3A16AA41F21A24AD6373766E6FD2265BED0E
2994BC2AED1796B1D373456D8A586D834A00A27C4CA85B9366FD320C4501238F
352E3400B589C1568686444CA893E70D2A0D066C49DA41122974B96C1B243830
E094558E97317545EF32352909FFF48BC5E8EA9F9F0CA20634E8D2A4376472AF
9C33D3FE6790142677AD88FE773D0527B983655B415E8665CB880FE38261FD9C
11751620C2C51DC54B36C45C7DAF117B01EEDC0219E05529DC6F898E35654DC6

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600
(/Users/andreeds/Google Drive/Master/CS807/TASKS_PROJECT/A - The Paper/Paper/.texpadtmp/Task_A_Andre)
@start /Fa 202[35 2[35 35 35 25[35 22[{}5 66.4176 /CMR8
rf /Fb 149[20 55[47 50[{}2 66.4176 /CMSY8 rf /Fc 137[34
7[43 4[24 18[41 48 18[53 53 65[{}7 66.4176 /CMMI8 rf
/Fd 166[116 131 88[{}2 90.9091 /CMEX10 rf /Fe 149[25
2[45 45 31[65 19[61 29[71 20[{}6 90.9091 /CMSY10 rf /Ff
135[52 65 44 19[39 48 10[53 62 53 3[58 69 1[88 62 6[67
1[65 69 68 5[25 25 36[53 2[43 18[{}20 90.9091 /CMMI10
rf /Fg 133[37 44 42 60 1[49 30 37 38 42 46 46 51 74 23
42 28 28 46 42 28 42 46 42 42 46 11[68 65 51 66 1[62
1[68 82 2[48 35 1[70 3[65 64 68 6[28 7[46 1[46 2[33 3[37
37 27[51 12[{}45 90.9091 /CMTI10 rf /Fh 132[45 40 48
48 66 48 51 35 36 36 48 51 45 51 76 25 48 28 25 51 45
28 40 51 40 51 45 3[25 45 25 3[93 1[68 66 51 67 1[62
71 68 83 1[71 47 33 68 71 59 62 69 66 64 68 3[71 1[25
25 45 45 45 45 45 45 45 45 45 45 1[25 30 25 71 1[35 35
5[45 11[45 7[76 1[51 53 11[{}74 90.9091 /CMR10 rf /Fi
133[37 44 44 60 44 46 32 33 33 44 46 42 46 69 23 44 1[23
46 42 25 37 46 37 46 42 12[60 4[65 62 5[62 3[63 1[59
62 11[42 42 42 42 42 42 1[23 28 23 2[32 32 27[46 48 11[{}45
83.022 /CMR10 rf /Fj 134[59 1[81 1[62 44 44 46 1[62 56
62 93 31 59 1[31 62 1[34 51 62 50 62 54 14[84 3[88 4[42
4[86 81 80 85 12[56 56 56 56 2[31 34[65 11[{}33 99.6264
/CMBX12 rf /Fk 134[40 2[38 45 28 34 35 1[42 42 47 68
3[25 1[38 25 38 42 38 1[42 11[62 1[47 61 13[63 59 22[25
44[{}23 83.022 /CMTI10 rf /Fl 134[55 1[76 55 58 41 41
43 1[58 52 58 87 29 55 1[29 58 52 32 48 58 46 1[51 13[58
78 1[71 10[69 80 76 74 79 1[49 10[52 52 52 52 2[29 26[52
7[61 11[{}37 90.9091 /CMBX10 rf /Fm 134[71 1[97 2[52
53 55 1[75 67 75 1[37 71 1[37 75 1[41 61 1[60 1[65 12[94
1[100 1[92 1[105 4[50 4[103 1[96 102 6[37 12[45 33[78
11[{}27 119.552 /CMBX12 rf /Fn 134[51 1[69 51 51 49 38
50 1[46 53 51 62 43 2[25 1[53 1[46 52 49 1[51 13[51 1[70
13[65 64 68 70 5[27 11[27 46[{}26 83.022 /CMCSC10 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142 -308
a
SDict begin H.S end
 142 -308 a 142 -308 a
SDict begin H.R end
 142 -308 a 142 -308 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 142 -308
a 0 TeXcolorgray 665 -200 a Fn(Beyond)31 b(Quantum)g(Computing:)41
b(Are)31 b(we)h(living)g(in)f(a)g(simula)-6 b(tion)p
Black 150 157 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 150 157 a 150 157 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 150 157 a 0 TeXcolorgray
150 157 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 150 157 a 150 157 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Introduction) /OUT
pdfmark end
 150 157 a 150 157 a
SDict begin [/Count -4/Dest (section.2) cvn/Title (A Differential Approach to Inference in Bayesian Networks)
/OUT pdfmark end
 150
157 a 150 157 a
SDict begin [/Count -0/Dest (subsection.2.1) cvn/Title (Background)
/OUT pdfmark end
 150 157 a 150 157 a
SDict begin [/Count -0/Dest (subsection.2.2) cvn/Title (Polynomial Representation of Bayesian networks)
/OUT pdfmark end
 150 157 a 150 157
a
SDict begin [/Count -0/Dest (subsection.2.3) cvn/Title (Compiling a Bayesian networks)
/OUT pdfmark end
 150 157 a 150 157 a
SDict begin [/Count -0/Dest (subsection.2.4) cvn/Title (Evaluating and Differentiating a Polynomial Representation)
/OUT pdfmark end
 150 157 a 150 157 a
SDict begin [/Count -3/Dest (section.3) cvn/Title (Criticsm) /OUT pdfmark
end
 150 157 a 150
157 a
SDict begin [/Count -0/Dest (subsection.3.1) cvn/Title (Advantages)
/OUT pdfmark end
 150 157 a 150 157 a
SDict begin [/Count -0/Dest (subsection.3.2) cvn/Title (Disadvantages)
/OUT pdfmark end
 150 157 a 150 157 a
SDict begin [/Count -0/Dest (subsection.3.3) cvn/Title (Comparisons with Different Approachs)
/OUT pdfmark end
 150 157
a 150 157 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (Conclusion) /OUT
pdfmark end
 150 157 a 150 157 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 150 157 a 150 157 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 150
157 a 150 157 a
SDict begin H.S end
 150 157 a 150 157 a
SDict begin 13.6 H.A end
 150 157 a 150 157
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 150 157 a 0 TeXcolorgray 0 TeXcolorgray 1058 340 a
Fm(Researc)l(h)46 b(T)-11 b(ask)44 b(A)h(-)f(The)h(P)l(ap)t(er:)207
489 y(A)f(Di\013eren)l(tial)k(Approac)l(h)c(to)h(Inference)h(in)e(Ba)l
(y)l(esian)j(Net)l(w)l(orks)150 762 y Fl(Andr)n(\023)-50
b(e)35 b(E.)g(dos)g(San)m(tos)1602 b Fn(dossantos@cs.uregina.ca)150
875 y Fk(Dep)l(artment)29 b(of)i(Computer)f(Scienc)l(e)150
988 y(University)g(of)h(R)l(e)l(gina)150 1101 y(R)l(e)l(gina,)f(Canada)
1736 1590 y Fj(Abstract)316 1760 y Fi(Ba)n(y)n(esian)24
b(net)n(w)n(orks)g(\(BNs\))i(is)g(a)f(probabilistic)g(graphical)f(mo)r
(del)i(for)f(dealing)h(with)g(uncertain)n(t)n(y)f(in)316
1860 y(arti\014cial)k(in)n(telligence.)44 b(Ho)n(w)n(ev)n(er,)28
b(BNs)i(are)f(kno)n(wn)g(for)g(requiring)g(a)g(high)h(amoun)n(t)g(of)g
(pro)r(cessing)316 1960 y(during)40 b(its)h(running)f(time)i(of)e
(execution.)76 b(This)41 b(strongly)e(limits)i(the)g(applications)f(of)
h(BNs)f(to)316 2059 y(em)n(b)r(edded)d(systems,)h(whic)n(h)e(are)g(c)n
(haracterized)e(for)i(their)g(primitiv)n(e)g(computational)g
(resources.)316 2159 y
SDict begin H.S end
 316 2159 a Fi(Darwic)n(he)655
2159 y
SDict begin 12 H.L end
 655 2159 a 655 2159 a
SDict begin [/Subtype /Link/Dest (cite.darwiche00) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 655 2159 a 37 w Fi(\()724
2159 y
SDict begin H.S end
 724 2159 a Fi(2000)892 2159 y
SDict begin 12 H.L end
 892 2159 a 892 2159
a
SDict begin [/Subtype /Link/Dest (cite.darwiche00) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 892 2159 a -2 w Fi(\))i(prop)r(oses)e(a)h(new)h(approac)n(h)d(for)i
(inference)g(in)h(Ba)n(y)n(esian)e(net)n(w)n(orks)f(based)i(on)316
2258 y(partial)18 b(di\013eren)n(tiation.)34 b(Once)19
b(the)h(BN)f(is)g(pro)r(cessed,)h(one)f(can)g(compute)h(in)f(constan)n
(t-time)g(answ)n(ers)316 2358 y(to)30 b(a)f(large)g(class)g(of)g
(probabilistic)h(queries.)42 b(One)30 b(of)g(the)g(k)n(ey)f(con)n
(tributions)g(is)h(the)g(p)r(ossible)g(cost-)316 2458
y(e\013ectiv)n(e)e(implemen)n(tation)f(on)h(a)f(v)-5
b(ariet)n(y)26 b(of)i(soft)n(w)n(are)e(and)h(hardw)n(are)f(platforms.)
457 2601 y(The)f(pap)r(er)f(has)g(a)h(mathematical)f(hea)n(vy)f
(notation)i(and)f(it)h(is)g(not)f(a)h(easy)e(reading.)35
b(A)25 b(reason)e(is)316 2701 y(the)d(w)n(eek)g(bac)n(kground)e(on)i
(probabilistic)f(graphical)f(mo)r(dels.)34 b(Th)n(us,)22
b(it)e(is)g(not)g(self)g(con)n(tained,)h(whic)n(h)316
2800 y(means)29 b(one)g(migh)n(t)g(ha)n(v)n(e)f(to)h(lo)r(ok)g(for)g
(second)f(sources.)41 b(Through)28 b(the)i(pap)r(er,)f(sev)n(eral)f
(adv)-5 b(an)n(tages)316 2900 y(are)23 b(presen)n(ted)h(and)g(they)g
(are)f(all)h(pro)n(v)n(en)e(b)r(eing)i(sound.)36 b(Ho)n(w)n(ev)n(er,)23
b(some)g(p)r(oin)n(ts)h(are)f(not)h(discussed)316 2999
y(suc)n(h)j(the)h(generalization)e(of)h(the)h(prop)r(osed)f(approac)n
(h)f(for)h(other)g(net)n(w)n(orks.)150 3160 y
SDict begin H.S end
 150 3160
a 150 3160 a
SDict begin 13.6 H.A end
 150 3160 a 150 3160 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 150 3160 a 143 x Fj(1.)49
b(In)m(tro)s(duction)150 3520 y Fh(W)-8 b(e)45 b(presen)m(t)g(a)f
(critique)h(for)f(the)h(pap)s(er)e(\\A)i(Di\013eren)m(tial)h(Approac)m
(h)f(to)g(Inference)f(in)g(Ba)m(y)m(esian)150 3633 y(Net)m(w)m(orks",)
39 b(b)m(y)758 3633 y
SDict begin H.S end
 758 3633 a Fh(Darwic)m(he)1127
3633 y
SDict begin 13.6 H.L end
 1127 3633 a 1127 3633 a
SDict begin [/Subtype /Link/Dest (cite.darwiche00) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 1127 3633 a 36 w Fh(\()1198
3633 y
SDict begin H.S end
 1198 3633 a Fh(2000)1378 3633 y
SDict begin 13.6 H.L end
 1378 3633 a 1378
3633 a
SDict begin [/Subtype /Link/Dest (cite.darwiche00) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 1378 3633 a 2 w Fh(\).)56 b(The)35 b(pap)s(er)f(is)h(the)h
(\014rst)e(of)i(man)m(y)f(published)f(articles)j(b)m(y)e(the)150
3746 y(author)23 b(and)g(others)h(to)g(presen)m(t)g(the)f(idea)i(of)e
(compiled)h(BNs\()2298 3746 y
SDict begin H.S end
 2298 3746 a Fh(Darwic)m(he)2667
3746 y
SDict begin 13.6 H.L end
 2667 3746 a 2667 3746 a
SDict begin [/Subtype /Link/Dest (cite.darwiche2003differential) cvn/H
/I/Border [0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 2667 3746 a 2 w Fh(,)2718
3746 y
SDict begin H.S end
 2718 3746 a Fh(2003)2898 3746 y
SDict begin 13.6 H.L end
 2898 3746 a 2898
3746 a
SDict begin [/Subtype /Link/Dest (cite.darwiche2003differential) cvn/H
/I/Border [0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 2898 3746 a 2 w Fh(;)2949 3746 y
SDict begin H.S end
 2949 3746 a Fh(Cha)m(vira)30
b(et)h(al.)3493 3746 y
SDict begin 13.6 H.L end
 3493 3746 a 3493 3746 a
SDict begin [/Subtype /Link/Dest (cite.chavira2006compiling) cvn/H
/I/Border [0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 3493 3746
a 1 w Fh(,)3543 3746 y
SDict begin H.S end
 3543 3746 a Fh(2006)3723 3746
y
SDict begin 13.6 H.L end
 3723 3746 a 3723 3746 a
SDict begin [/Subtype /Link/Dest (cite.chavira2006compiling) cvn/H
/I/Border [0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 3723 3746 a 2 w Fh(;)150 3859
y
SDict begin H.S end
 150 3859 a Fh(P)m(ark)g(and)e(Darwic)m(he)914 3859
y
SDict begin 13.6 H.L end
 914 3859 a 914 3859 a
SDict begin [/Subtype /Link/Dest (cite.park2004differential) cvn/H
/I/Border [0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 914 3859 a 2 w Fh(,)972 3859
y
SDict begin H.S end
 972 3859 a Fh(2004)1152 3859 y
SDict begin 13.6 H.L end
 1152 3859 a 1152 3859
a
SDict begin [/Subtype /Link/Dest (cite.park2004differential) cvn/H
/I/Border [0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 1152 3859 a 2 w Fh(;)1211 3859 y
SDict begin H.S end
 1211 3859 a Fh(Cha)m(vira)i(and)e
(Darwic)m(he)2100 3859 y
SDict begin 13.6 H.L end
 2100 3859 a 2100 3859 a
SDict begin [/Subtype /Link/Dest (cite.chavira2007compiling) cvn/H
/I/Border [0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 2100
3859 a 2 w Fh(,)2158 3859 y
SDict begin H.S end
 2158 3859 a Fh(2007)2338
3859 y
SDict begin 13.6 H.L end
 2338 3859 a 2338 3859 a
SDict begin [/Subtype /Link/Dest (cite.chavira2007compiling) cvn/H
/I/Border [0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 2338 3859 a 2 w Fh(\).)45
b(Moreo)m(v)m(er,)34 b(it)e(has)g(b)s(een)f(sum)f(up)h(as)150
3972 y(an)g(imp)s(ortan)m(t)g(part)g(of)h(his)e(b)s(o)s(ok)h(\\Mo)s
(deling)h(and)e(Reasoning)i(with)f(Ba)m(y)m(esian)i(Net)m(w)m(orks")g
(\()3507 3972 y
SDict begin H.S end
 3507 3972 a Fh(2009)3687 3972 y
SDict begin 13.6 H.L end
 3687
3972 a 3687 3972 a
SDict begin [/Subtype /Link/Dest (cite.darwiche2009modeling) cvn/H
/I/Border [0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 3687 3972 a 2 w Fh(\).)150 4084 y(The)d(pap)s(er)g
(to)h(b)s(e)f(ev)-5 b(aluated)32 b(here)e(w)m(as)h(published)e(Pro)s
(ceedings)i(of)f(the)h(Sixteen)m(th)g(Conference)g(on)150
4197 y(Uncertain)m(t)m(y)h(in)e(Arti\014cial)h(In)m(telligence)i
(\(UAI\).)e(UAI)g(is)f(y)m(et)h(to)s(da)m(y)g(the)f(leading)h
(conference)g(of)g(the)150 4310 y(\014eld)c(and)g(is)h(ann)m(ually)g
(hold)g(in)f(the)h(USA.)g(Some)g(of)g(its)g(notorious)g(sp)s(onsors)e
(are)i(Go)s(ogle,)j(Microsoft)150 4423 y(Researc)m(h)g(and)f(F)-8
b(aceb)s(o)s(ok.)291 4580 y(Ba)m(y)m(esian)42 b(net)m(w)m(orks)f
(\(BNs\))h(\()1388 4580 y
SDict begin H.S end
 1388 4580 a Fh(P)m(earl)1593
4580 y
SDict begin 13.6 H.L end
 1593 4580 a 1593 4580 a
SDict begin [/Subtype /Link/Dest (cite.pear88) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 1593 4580 a 1 w Fh(,)1659
4580 y
SDict begin H.S end
 1659 4580 a Fh(1988)1839 4580 y
SDict begin 13.6 H.L end
 1839 4580 a 1839
4580 a
SDict begin [/Subtype /Link/Dest (cite.pear88) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 1839 4580 a 2 w Fh(\))f(is)f(a)g(probabilistic)h(graphical)g(mo)
s(del)f(for)g(dealing)150 4693 y(with)27 b(uncertain)m(t)m(y)h(in)e
(arti\014cial)j(in)m(telligence.)42 b(BNs)27 b(o)m(v)m(ercame)j(the)d
(acquisition)h(in)m(tractabilit)m(y)i(prob-)150 4806
y(lem)43 b(when)e(reasoning)i(with)f(the)h(a)g(join)f(probabilit)m(y)h
(distribution.)76 b(Ho)m(w)m(ev)m(er,)48 b(BNs)43 b(are)f(kno)m(wn)150
4918 y(for)d(requiring)f(a)i(high)f(amoun)m(t)g(of)g(pro)s(cessing)g
(during)f(its)i(running)d(time)j(of)f(execution)h(\(\).)68
b(This)150 5031 y(strongly)35 b(limits)h(the)e(applications)i(of)f(BNs)
g(to)h(em)m(b)s(edded)e(systems,)i(whic)m(h)e(are)h(c)m(haracterized)i
(for)150 5144 y(their)31 b(primitiv)m(e)h(computational)h(resources.)43
b(Due)31 b(those)h(limitations,)h(consumer)e(electronics)i(often)150
5257 y(utilizes)f(seman)m(tic)f(w)m(eak)m(er)h(framew)m(orks,)f(suc)m
(h)f(as)g(F)-8 b(uzzy)32 b(logic)g(and)e(Ruled-based)g(systems.)p
0 TeXcolorgray 1929 5506 a Fi(1)p 0 TeXcolorgray eop
end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142
-308 a
SDict begin H.S end
 142 -308 a 142 -308 a
SDict begin H.R end
 142 -308 a 142 -308 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 142
-308 a 0 TeXcolorgray 1702 -200 a Fn(dos)31 b(Santos)p
0 TeXcolorgray 291 249 a
SDict begin H.S end
 291 249 a Fh(Darwic)m(he)660
249 y
SDict begin 13.6 H.L end
 660 249 a 660 249 a
SDict begin [/Subtype /Link/Dest (cite.darwiche00) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 660 249 a 44 w Fh(\()739 249
y
SDict begin H.S end
 739 249 a Fh(2000)919 249 y
SDict begin 13.6 H.L end
 919 249 a 919 249 a
SDict begin [/Subtype /Link/Dest (cite.darwiche00) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 919
249 a 2 w Fh(\))43 b(prop)s(oses)f(a)h(new)g(approac)m(h)g(for)f
(inference)h(in)g(Ba)m(y)m(esian)i(net)m(w)m(orks)e(based)150
361 y(on)37 b(partial)i(di\013eren)m(tiation.)64 b(Its)37
b(\014rst)g(step)h(is)f(compiling)i(the)f(BN)g(in)m(to)g(a)g(p)s
(olynomial.)63 b(Then,)38 b(it)150 474 y(computes)f(the)h(partial)f
(deriv)-5 b(ativ)m(es)39 b(of)e(this)g(p)s(olynomial)h(with)e(resp)s
(ect)h(to)h(eac)m(h)g(v)-5 b(ariables.)62 b(Once)150
587 y(suc)m(h)34 b(deriv)-5 b(ativ)m(es)36 b(are)e(made)g(a)m(v)-5
b(ailable,)38 b(one)d(can)f(compute)h(in)f(constan)m(t-time)i(answ)m
(ers)e(to)h(a)g(large)150 700 y(class)44 b(of)f(probabilistic)g
(queries.)79 b(The)42 b(di\013eren)m(tial)i(approac)m(h)g(presen)m(ts)e
(t)m(w)m(o)j(k)m(ey)e(con)m(tributions.)150 813 y(First,)f(it)d
(enphasizes)g(the)g(role)h(of)f(partial)h(di\013eren)m(tiation)h(on)d
(probabilistic)i(reasoning,)i(giving)e(a)150 926 y(new)34
b(utilit)m(y)j(to)e(cen)m(tral)i(tasks)e(of)g(BNs.)55
b(Second,)36 b(it)g(helps)e(the)h(migration)h(of)g(BN)f(applications)h
(to)150 1039 y(em)m(b)s(edded)29 b(systems,)i(whic)m(h)f(are)h(kno)m
(wn)f(for)g(constrain)m(t)h(in)f(computational)i(resources.)291
1153 y(This)38 b(pap)s(er)f(is)h(organized)h(as)g(follo)m(ws.)66
b(In)37 b(Section)i Fl(??)q Fh(,)i(m-separation)e(is)f(review)m(ed.)65
b(Section)150 1266 y Fl(??)28 b Fh(presen)m(ts)f(u-separation.)40
b(The)27 b(equiv)-5 b(alence)29 b(b)s(et)m(w)m(een)f(m-separation)g
(and)f(u-separation)h(is)f(estab-)150 1379 y(lished)20
b(in)h(Section)g Fl(??)q Fh(.)37 b(In)20 b(Section)i
Fl(??)q Fh(,)h(the)d(adv)-5 b(an)m(tages)23 b(of)e(u-separation)g(are)g
(pro)m(vided.)37 b(Conclusions)150 1492 y(are)31 b(giv)m(en)g(in)f
(Section)h Fl(??)q Fh(.)150 1654 y
SDict begin H.S end
 150 1654 a 150 1654
a
SDict begin 13.6 H.A end
 150 1654 a 150 1654 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 150 1654 a 100 x Fj(2.)49 b(A)37
b(Di\013eren)m(tial)h(Approac)m(h)g(to)f(Inference)h(in)f(Ba)m(y)m
(esian)i(Net)m(w)m(orks)150 1928 y Fh(W)-8 b(e)32 b(start)e(b)m(y)h
(giving)g(a)g(brief)f(in)m(tro)s(duction)g(of)h(Ba)m(y)m(esian)h(net)m
(w)m(orks.)150 2066 y
SDict begin H.S end
 150 2066 a 150 2066 a
SDict begin 13.6 H.A end
 150 2066
a 150 2066 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.1) cvn /DEST pdfmark
end
 150 2066 a 97 x Fl(2.1)53 b(Bac)m(kground)150
2325 y Fh(A)42 b Fg(joint)i(pr)-5 b(ob)g(ability)46 b(distribution)k
Fh(\(JPD\))42 b(is)g(function)g Ff(P)55 b Fh(on)42 b(the)g(Cartesian)h
(pro)s(duct)d Ff(V)63 b Fh(of)42 b(the)150 2438 y(v)-5
b(ariable)31 b(domains)f(suc)m(h)g(that)h(the)g(follo)m(wing)h(t)m(w)m
(o)f(conditions)g(hold:)974 2647 y(0)26 b Fe(\024)f Ff(P)13
b Fh(\()p Ff(v)s Fh(\))26 b Fe(\024)f Fh(1)p Ff(:)p Fh(0)32
b(for)e(eac)m(h)h(con\014guration)g Ff(v)e Fe(2)24 b
Ff(V)d Fh(;)30 b(and)3634 2647 y
SDict begin H.S end
 3634 2647 a 3634 2647
a
SDict begin 16.6 H.A end
 3634 2647 a 3634 2647 a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.1) cvn /DEST pdfmark
end
 3634 2647 a Fh(\(1\))994 2723
y Fd(X)989 2920 y Fc(v)r Fb(2)p Fc(V)1145 2809 y Ff(P)13
b Fh(\()p Ff(v)s Fh(\))26 b(=)f(1)p Ff(:)p Fh(0)3634
2809 y
SDict begin H.S end
 3634 2809 a 3634 2809 a
SDict begin 16.6 H.A end
 3634 2809 a 3634 2809
a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.2) cvn /DEST pdfmark
end
 3634 2809 a Fh(\(2\))291 3102 y(Unlik)m(e)31 b(the)f(ad-ho)s(c)f
(notions)h(of)g Fg(fuzzy)i(lo)-5 b(gic)35 b Fh(and)29
b Fg(rule-b)-5 b(ase)g(d)33 b(systems)p Fh(,)e(probabilit)m(y)f(theory)
g(pro-)150 3215 y(vides)44 b(a)h(rigorous)g(mathematical)i(foundation)d
(for)g(the)h(represen)m(tation)g(of)g(uncertain)m(t)m(y)g(and)f(for)150
3328 y(reasoning)38 b(with)g(uncertain)m(t)m(y)-8 b(.)65
b(Ho)m(w)m(ev)m(er,)42 b(acquisition)d(in)m(tractabilit)m(y)h(is)e(one)
h(of)f(the)g(problems)f(of)150 3441 y(using)32 b(only)g(the)h(jp)s(d)d
(to)j(mo)s(del)f(the)g(problem)g(domain.)46 b(F)-8 b(or)33
b(instance,)h(sp)s(ecifying)e(one)g(probabilit)m(y)150
3553 y(v)-5 b(alue)31 b(w)m(ould)f(b)s(e)g(di\016cult)g(with)g(50)h(v)
-5 b(ariables,)32 b(let)f(alone)g(2)2251 3520 y Fa(50)2326
3553 y Fh(.)291 3668 y(By)k(exploiting)i(the)e(notion)g(of)g
Fg(pr)-5 b(ob)g(abilistic)39 b(c)-5 b(onditional)39 b(indep)-5
b(endenc)g(e)p Fh(,)2979 3668 y
SDict begin H.S end
 2979 3668 a Fh(P)m(earl)3184
3668 y
SDict begin 13.6 H.L end
 3184 3668 a 3184 3668 a
SDict begin [/Subtype /Link/Dest (cite.pear88) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 3184 3668 a 36 w Fh(\()3255
3668 y
SDict begin H.S end
 3255 3668 a Fh(1988)3435 3668 y
SDict begin 13.6 H.L end
 3435 3668 a 3435
3668 a
SDict begin [/Subtype /Link/Dest (cite.pear88) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 3435 3668 a 2 w Fh(\))35 b(solv)m(ed)150 3781
y(the)d(jp)s(d)e(acquisition)j(problem)e(b)m(y)h(in)m(tro)s(ducing)f
(Ba)m(y)m(esian)j(net)m(w)m(orks.)45 b(A)32 b Fg(Bayesian)j(network)43
b Fh(\(BN\))150 3894 y
SDict begin H.S end
 150 3894 a Fh(P)m(earl)355 3894
y
SDict begin 13.6 H.L end
 355 3894 a 355 3894 a
SDict begin [/Subtype /Link/Dest (cite.pear88) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 355 3894 a 30 w Fh(\()420 3894
y
SDict begin H.S end
 420 3894 a Fh(1988)600 3894 y
SDict begin 13.6 H.L end
 600 3894 a 600 3894 a
SDict begin [/Subtype /Link/Dest (cite.pear88) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end

600 3894 a 3 w Fh(\))29 b(is)h(a)g(D)m(A)m(G)h(on)e(\014nite)h(set)g
(of)f(discrete)i(v)-5 b(ariables)30 b Ff(U)39 b Fh(together)31
b(with)e Fg(c)-5 b(onditional)34 b(pr)-5 b(ob)g(a-)150
4007 y(bility)34 b(tables)40 b Fh(\(CPTs\))32 b Ff(P)13
b Fh(\()p Ff(v)1121 4021 y Fa(1)1161 4007 y Fe(j)p Ff(P)g(a)p
Fh(\()p Ff(v)1384 4021 y Fa(1)1424 4007 y Fh(\)\),)33
b Ff(P)13 b Fh(\()p Ff(v)1702 4021 y Fa(2)1742 4007 y
Fe(j)p Ff(P)g(a)p Fh(\()p Ff(v)1965 4021 y Fa(2)2005
4007 y Fh(\)\),)33 b Ff(:)15 b(:)g(:)q Fh(,)33 b Ff(P)13
b Fh(\()p Ff(v)2447 4021 y Fc(n)2494 4007 y Fe(j)p Ff(P)g(a)p
Fh(\()p Ff(v)2717 4021 y Fc(n)2765 4007 y Fh(\)\),)33
b(where)f Ff(P)13 b(a)p Fh(\()p Ff(v)3356 4021 y Fc(i)3384
4007 y Fh(\))33 b(denotes)150 4120 y(the)f(paren)m(ts)g(of)g(the)g(v)-5
b(ariable)33 b Ff(v)1281 4134 y Fc(i)1341 4120 y Fh(in)f(the)g(D)m(A)m
(G.)i(The)d(pro)s(duct)g(of)h(the)g(CPTs)f(for)g(the)i(D)m(A)m(G)g(on)f
Ff(U)42 b Fh(is)150 4232 y(a)30 b Fg(joint)i(pr)-5 b(ob)g(ability)33
b(distribution)38 b Ff(P)13 b Fh(\()p Ff(U)d Fh(\))1610
4232 y
SDict begin H.S end
 1610 4232 a Fh(P)m(earl)1815 4232 y
SDict begin 13.6 H.L end
 1815 4232
a 1815 4232 a
SDict begin [/Subtype /Link/Dest (cite.pear88) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 1815 4232 a 30 w Fh(\()1880 4232 y
SDict begin H.S end
 1880
4232 a Fh(1988)2060 4232 y
SDict begin 13.6 H.L end
 2060 4232 a 2060 4232 a
SDict begin [/Subtype /Link/Dest (cite.pear88) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 2060
4232 a 2 w Fh(\).)41 b(F)-8 b(or)30 b(example,)g(Figure)2991
4232 y
SDict begin H.S end
 2991 4232 a 0 TeXcolorgray Fh(1)p 0 TeXcolorgray
3036 4174 a
SDict begin H.R end
 3036 4174 a 3036 4232 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.caption.1) cvn H.B /ANN pdfmark end
 3036 4232 a 29 w
Fh(sho)m(ws)f(a)h(Ba)m(y)m(esian)150 4345 y(net)m(w)m(ork)h(with)f
(CPTS)f Ff(P)13 b Fh(\()p Ff(a)p Fh(\))31 b(and)f Ff(P)13
b Fh(\()p Ff(b)p Fe(j)p Ff(a)p Fh(\))31 b(in)f(T)-8 b(able)31
b(1.)p 0 TeXcolorgray 150 4414 a
SDict begin H.S end
 150 4414 a 150 4414
a
SDict begin 13.6 H.A end
 150 4414 a 150 4414 a
SDict begin [/View [/XYZ H.V]/Dest (figure.caption.1) cvn /DEST pdfmark
end
 150 4414 a 1714 5179 a
tx@Dict begin { 56.90549 28.45274 } PutCoor PutBegin  end
 1714 5179
a 1677 5210 a
tx@Dict begin  tx@NodeDict begin {} false /N@X1 14 {/X 4.42752 def
/Y 3.74124 def /w 10.06052 def /h 9.09012 def /NodePos { OvalNodePos
} def} /NodeScale {} def NewNode end  end
 1677 5210 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  0 360 10.06052 CLW 2 div
sub 9.09012 CLW 2 div sub 4.42752 3.74124  0 Ellipse closepath  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
Ff(B)1714 5179 y
tx@Dict begin  PutEnd  end
 1714 5179 a 1714 5179 a
tx@Dict begin { 0.0 28.45274 } PutCoor PutBegin  end
 1714 5179 a
1680 5210 a
tx@Dict begin  tx@NodeDict begin {} false /N@X2 14 {/X 4.10625 def
/Y 3.74124 def /w 9.60625 def /h 9.09012 def /NodePos { OvalNodePos
} def} /NodeScale {} def NewNode end  end
 1680 5210 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  0 360 9.60625 CLW 2 div sub
9.09012 CLW 2 div sub 4.10625 3.74124  0 Ellipse closepath  gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
Ff(A)1714 5179 y
tx@Dict begin  PutEnd  end
 1714 5179 a 1714 5179 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave fill grestore grestore 0 h a sub
moveto   EndArrow  } def /ArrowInside { } def  0.8 SLW 0  setgray 
/ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.  scale  false 0.4
1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0
h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto
gsave fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@X2
/N@X1 InitNC { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy
/y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub atan def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def
/dArrowPos 0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos
Length gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1714 5179 a
0 TeXcolorgray 1161 5223 a Fh(Figure)g(1:)41 b(A)31 b(BN)f(from)g(\()
2070 5223 y
SDict begin H.S end
 2070 5223 a Fh(Darwic)m(he)2439 5223 y
SDict begin 13.6 H.L end
 2439
5223 a 2439 5223 a
SDict begin [/Subtype /Link/Dest (cite.darwiche00) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 2439 5223 a 2 w Fh(,)2496 5223 y
SDict begin H.S end
 2496
5223 a Fh(2000)2676 5223 y
SDict begin 13.6 H.L end
 2676 5223 a 2676 5223 a
SDict begin [/Subtype /Link/Dest (cite.darwiche00) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 2676
5223 a 2 w Fh(\).)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1929 5506 a Fi(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142
-308 a
SDict begin H.S end
 142 -308 a 142 -308 a
SDict begin H.R end
 142 -308 a 142 -308 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 142
-308 a 0 TeXcolorgray 665 -200 a Fn(Beyond)31 b(Quantum)g(Computing:)41
b(Are)31 b(we)h(living)g(in)f(a)g(simula)-6 b(tion)p
0 TeXcolorgray 0 TeXcolorgray 150 101 a
SDict begin H.S end
 150 101 a 150
101 a
SDict begin 13.6 H.A end
 150 101 a 150 101 a
SDict begin [/View [/XYZ H.V]/Dest (table.caption.2) cvn /DEST pdfmark
end
 150 101 a 0 TeXcolorgray 135
x Fh(T)e(able)33 b(1:)45 b(T)-8 b(able)33 b(\(a\))h(pro)m(vides)e(the)g
(prior)g(probabilit)m(y)h(of)g(v)-5 b(ariable)33 b Ff(A)f
Fh(and)g(T)-8 b(able)33 b(\(b\))f(pro)m(vides)h(the)150
349 y(conditional)f(probabilit)m(y)f(of)f Ff(B)35 b Fh(giv)m(en)c
Ff(A)p Fh(.)p 0 TeXcolorgray 0 TeXcolorgray 997 649 a
Fi(\(a\))p 0 TeXcolorgray 861 807 a Ff(A)p 977 841 4
113 v 100 w(P)13 b Fh(\()p Ff(A)p Fh(\))p 811 845 478
4 v 873 924 a(1)p 977 958 4 113 v 158 w(0.3)873 1037
y(0)p 977 1070 V 158 w(0.7)p 0 TeXcolorgray 2795 536
a Fi(\(b\))p 0 TeXcolorgray 2525 694 a Ff(A)100 b(B)p
2815 728 V 104 w(P)13 b Fh(\()p Ff(B)5 b Fe(j)p Ff(A)p
Fh(\))p 2475 732 750 4 v 2537 811 a(1)125 b(1)p 2815
845 4 113 v 210 w(0.1)2537 924 y(1)g(0)p 2815 958 V 210
w(0.9)2537 1037 y(0)g(1)p 2815 1070 V 210 w(0.8)2537
1149 y(0)g(0)p 2815 1183 V 210 w(0.2)p 0 TeXcolorgray
291 1433 a(Unfortunately)-8 b(,)31 b(b)s(oth)e(exact)j(and)d(appro)m
(ximate)i(inference)f(in)g(Ba)m(y)m(esian)i(net)m(w)m(orks)f(are,)g(in)
e(gen-)150 1546 y(eral,)j Fg(NP-har)-5 b(d)42 b Fh(\()764
1546 y
SDict begin H.S end
 764 1546 a Fh(Koller)31 b(and)f(F)-8 b(riedman)1589
1546 y
SDict begin 13.6 H.L end
 1589 1546 a 1589 1546 a
SDict begin [/Subtype /Link/Dest (cite.koll09) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 1589 1546 a Fh(,)1645
1546 y
SDict begin H.S end
 1645 1546 a Fh(2009)1825 1546 y
SDict begin 13.6 H.L end
 1825 1546 a 1825
1546 a
SDict begin [/Subtype /Link/Dest (cite.koll09) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [0 1 0] H.B /ANN pdfmark end
 1825 1546 a 2 w Fh(\).)44 b(Th)m(us,)30 b(the)i(use)f(of)g(exp)s
(onen)m(tial)h(complexit)m(y)h(algo-)150 1659 y(rithms)28
b(is)h(justi\014ed)f(\(unless)g(P=NP\).)h(That)f(implies)h(a)g
(limitation)i(for)e(BN)g(applications)h(to)f(em)m(b)s(ed-)150
1772 y(ded)h(systems,)g(whic)m(h)g(are)h(kno)m(wn)f(for)g(constrain)m
(t)i(in)e(computational)i(resources.)150 1909 y
SDict begin H.S end
 150 1909
a 150 1909 a
SDict begin 13.6 H.A end
 150 1909 a 150 1909 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.2) cvn /DEST pdfmark
end
 150 1909 a 96 x Fl(2.2)53
b(P)m(olynomial)36 b(Represen)m(tation)f(of)g(Ba)m(y)m(esian)h(net)m(w)
m(orks)150 2166 y Fh(W)-8 b(e)27 b(no)m(w)g(sho)m(w)f(ho)m(w)g(to)h
(represen)m(t)f(a)h(BN)g(as)f(a)h(p)s(olynomial)f Fe(F)36
b Fh(that)27 b(includes)f(t)m(w)m(o)h(t)m(yp)s(e)g(os)f(v)-5
b(ariables:)150 2279 y(evidence)31 b(indicator)g Ff(\025)g
Fh(and)e(net)m(w)m(ork)j(parameter)e Ff(\022)j Fh(\(the)e(probabilit)m
(y)g(v)-5 b(alues\).)291 2391 y(W)d(e)34 b(can)e(parameterize)i(a)e
(CPT)g(as)g(follo)m(ws.)47 b(A)33 b Fg(p)-5 b(ar)g(ameterize)42
b Fh(table)33 b(receiv)m(es)h(a)e(evidence)h(indi-)150
2504 y(cator)f Ff(\025)e Fh(m)m(ultiplied)h(to)h(the)e(probabilit)m(y)h
(v)-5 b(alue.)42 b(F)-8 b(or)31 b(instance,)h(T)-8 b(able)31
b(2)g(sho)m(ws)f(the)h(parameterized)150 2617 y(CPTs)e(for)h(the)h(BN)g
(of)f(T)-8 b(able)31 b(1.)42 b(Notice)32 b(that)37 b(\026)-51
b Ff(x)30 b Fh(denotes)h(the)g(instan)m(tiation)h Ff(x)25
b Fh(=)g(0.)p 0 TeXcolorgray 150 2657 a
SDict begin H.S end
 150 2657 a 150
2657 a
SDict begin 13.6 H.A end
 150 2657 a 150 2657 a
SDict begin [/View [/XYZ H.V]/Dest (table.caption.3) cvn /DEST pdfmark
end
 150 2657 a 0 TeXcolorgray
135 x Fh(T)-8 b(able)36 b(2:)50 b(T)-8 b(able)35 b(\(a\))h(pro)m(vides)
f(the)g(parameterized)h(CPT)e(for)h Ff(P)13 b Fh(\()p
Ff(A)p Fh(\))36 b(and)e(T)-8 b(able)36 b(\(b\))f(pro)m(vides)g(the)150
2905 y(parameterized)c(CPT)f(for)g Ff(P)13 b Fh(\()p
Ff(B)5 b Fe(j)p Ff(A)p Fh(\).)p 0 TeXcolorgray 0 TeXcolorgray
997 3205 a Fi(\(a\))p 0 TeXcolorgray 853 3363 a Ff(A)p
969 3397 4 113 v 108 w(P)13 b Fh(\()p Ff(A)p Fh(\))p
803 3400 494 4 v 864 3479 a(1)p 969 3513 4 113 v 112
w(0.3)p Ff(\025)1189 3493 y Fc(A)864 3592 y Fh(0)p 969
3626 V 112 w(0.7)p Ff(\025)1209 3599 y Fa(\026)1189 3616
y Fc(A)p 0 TeXcolorgray 2795 3092 a Fi(\(b\))p 0 TeXcolorgray
2525 3250 a Ff(A)100 b(B)p 2815 3284 V 104 w(P)13 b Fh(\()p
Ff(B)5 b Fe(j)p Ff(A)p Fh(\))p 2475 3288 750 4 v 2537
3367 a(1)125 b(1)p 2815 3400 4 113 v 154 w(0.1)p Ff(\025)3074
3381 y Fc(B)2537 3479 y Fh(1)g(0)p 2815 3513 V 154 w(0.9)p
Ff(\025)3091 3486 y Fa(\026)3074 3503 y Fc(B)2537 3592
y Fh(0)g(1)p 2815 3626 V 154 w(0.8)p Ff(\025)3074 3606
y Fc(B)2537 3705 y Fh(0)g(0)p 2815 3739 V 154 w(0.2)p
Ff(\025)3091 3712 y Fa(\026)3074 3729 y Fc(B)p 0 TeXcolorgray
291 3948 a Fh(The)30 b(p)s(olynomial)h Fe(F)39 b Fh(of)31
b(a)g(BN)g(is)f(represen)m(ted)g(b)m(y)h(the)f(form)m(ula:)1459
4149 y Fe(F)9 b Fh(\()p Ff(\025;)15 b(\022)s Fh(\))26
b(=)1864 4063 y Fd(X)1903 4260 y Fc(U)2011 4063 y Fd(Y)2142
4149 y Ff(\022)2185 4163 y Fc(i)2228 4063 y Fd(Y)2359
4149 y Ff(\025)2412 4163 y Fc(i)3634 4149 y
SDict begin H.S end
 3634 4149
a 3634 4149 a
SDict begin 16.6 H.A end
 3634 4149 a 3634 4149 a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.3) cvn /DEST pdfmark
end
 3634 4149 a Fh(\(3\))291
4420 y(As)k(an)h(example,)g(the)g(p)s(olynomial)f(of)h(the)f(BN)h(in)f
(Figure)h(1)g(is)687 4726 y Fe(F)k Fh(=)25 b Ff(\022)926
4740 y Fc(A)982 4726 y Ff(\022)1025 4744 y Fc(B)s Fb(j)p
Fc(A)1158 4726 y Ff(\025)1211 4740 y Fc(A)1268 4726 y
Ff(\025)1321 4740 y Fc(B)1402 4726 y Fh(+)20 b Ff(\022)1536
4740 y Fc(A)1593 4726 y Ff(\022)1652 4733 y Fa(\026)1636
4749 y Fc(B)s Fb(j)p Fc(A)1769 4726 y Ff(\025)1822 4740
y Fc(A)1879 4726 y Ff(\025)1948 4733 y Fa(\026)1932 4749
y Fc(B)2012 4726 y Fh(+)g Ff(\022)2165 4733 y Fa(\026)2146
4749 y Fc(A)2203 4726 y Ff(\022)2246 4749 y Fc(B)s Fb(j)2340
4732 y Fa(\026)2322 4749 y Fc(A)2379 4726 y Ff(\025)2450
4733 y Fa(\026)2432 4749 y Fc(A)2489 4726 y Ff(\025)2542
4740 y Fc(B)2623 4726 y Fh(+)g Ff(\022)2775 4733 y Fa(\026)2757
4749 y Fc(A)2813 4726 y Ff(\022)2873 4733 y Fa(\026)2856
4749 y Fc(B)t Fb(j)2951 4732 y Fa(\026)2933 4749 y Fc(A)2989
4726 y Ff(\025)3061 4733 y Fa(\026)3042 4749 y Fc(A)3099
4726 y Ff(\025)3169 4733 y Fa(\026)3152 4749 y Fc(B)3634
4726 y
SDict begin H.S end
 3634 4726 a 3634 4726 a
SDict begin 16.6 H.A end
 3634 4726 a 3634 4726
a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.4) cvn /DEST pdfmark
end
 3634 4726 a Fh(\(4\))291 4918 y(The)30 b(size)h(of)g(the)f(p)s
(olynomial)h(is)f(exp)s(onen)m(tial)i(to)f(the)f(size)i(of)e(the)h(net)
m(w)m(ork.)291 5031 y(No)m(w,)40 b(with)d(a)h(evidence)g(w)m(e)g(can)g
(set)g(a)g(indicator)g Ff(\025)f Fh(to)i(either)e(0)h(or)g(1.)62
b(If)37 b(is)g(consisten)m(t)i(with)150 5144 y(the)30
b(evidence)h(is)f(1,)h(and)f(is)g(0)h(otherwise.)41 b(F)-8
b(or)31 b(example,)g(if)f(the)g(evidence)h(is)f Ff(A)2978
5121 y Fh(\026)2956 5144 y Ff(B)35 b Fh(that)c(is,)f
Ff(A)h Fh(is)f(true,)150 5257 y Ff(B)38 b Fh(is)c(false,)i(then)d
Fe(F)9 b Fh(\()p Ff(\025)959 5271 y Fc(A)1048 5257 y
Fh(=)31 b(1)p Ff(;)15 b(\025)1307 5264 y Fa(\026)1288
5281 y Fc(A)1377 5257 y Fh(=)31 b(0)p Ff(;)15 b(\025)1617
5271 y Fc(B)1709 5257 y Fh(=)31 b(0)p Ff(;)15 b(\025)1966
5264 y Fa(\026)1949 5281 y Fc(B)2042 5257 y Fh(=)30 b(1)p
Ff(;)15 b(\022)2271 5271 y Fc(A)2360 5257 y Fh(=)31 b(0)p
Ff(:)p Fh(3)p Ff(;)15 b(\022)2680 5264 y Fa(\026)2660
5281 y Fc(A)2749 5257 y Fh(=)31 b(0)p Ff(:)p Fh(7)p Ff(;)15
b(\022)3049 5276 y Fc(B)s Fb(j)p Fc(A)3214 5257 y Fh(=)31
b(0)p Ff(:)p Fh(1)p Ff(;)15 b(\022)3532 5264 y Fa(\026)3514
5281 y Fc(B)5 b Fb(j)p Fc(A)3679 5257 y Fh(=)p 0 TeXcolorgray
1929 5506 a Fi(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142
-308 a
SDict begin H.S end
 142 -308 a 142 -308 a
SDict begin H.R end
 142 -308 a 142 -308 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 142
-308 a 0 TeXcolorgray 1702 -200 a Fn(dos)31 b(Santos)p
0 TeXcolorgray 150 249 a Fh(0)p Ff(:)p Fh(9)p Ff(;)15
b(\022)348 272 y Fc(B)s Fb(j)444 255 y Fa(\026)424 272
y Fc(A)508 249 y Fh(=)25 b(0)p Ff(:)p Fh(8)p Ff(;)15
b(\022)819 256 y Fa(\026)802 272 y Fc(B)t Fb(j)898 255
y Fa(\026)879 272 y Fc(A)961 249 y Fh(=)25 b(0)p Ff(:)p
Fh(2)p Ff(;)15 b Fh(\))27 b(=)e(0)p Ff(:)p Fh(27,)k(whic)m(h)c(equal)h
(to)g(0.27)h(in)f(this)f(case.)40 b(The)25 b(probabilit)m(y)i(v)-5
b(alues)150 361 y(are)42 b(the)g(corresp)s(onden)m(ts)f(in)h(the)g
(resp)s(ectiv)m(ely)h(CPTs.)74 b(Therefore,)44 b(the)e(p)s(olynomial)h
(is)e(a)i(linear)150 474 y(function)35 b(of)g(man)m(y)f(v)-5
b(ariables,)37 b(where)e(eac)m(h)h(one)f(corresp)s(onds)e(to)j(either)f
(an)g(evidence)g(indicator)h Ff(\025)150 587 y Fh(or)e(a)g(probabilit)m
(y)g(v)-5 b(alue)34 b Ff(\022)s Fh(.)50 b(Eac)m(h)34
b(parameter)h(has)e(degree)h(one.)51 b(F)-8 b(or)35 b(eac)m(h)g(instan)
m(tiation)g(giv)m(en)g(an)150 700 y(evidence,)30 b(the)f(p)s(olynomial)
f(can)h(b)s(e)f(ev)-5 b(aluated)30 b(to)f(compute)g(the)f(probabilit)m
(y)h(of)g(the)g(v)-5 b(ariable)29 b(giv)m(en)150 813
y(the)i(evidence.)291 930 y(The)36 b(author)g(highligh)m(ts)h(that)f
(BNs)h(represen)m(ted)f(b)m(y)g(p)s(olynomial)g(function)g(has)g(b)s
(een)f(already)150 1043 y(exploited)44 b(b)m(y)e(others.)77
b(Ho)m(w)m(ev)m(er,)48 b(the)43 b(evidence)g(indicators)g(w)m(ere)g
(\014xed)f(to)h(a)g(particular)g(v)-5 b(alue.)150 1156
y(Hence,)31 b(they)g(could)f(not)h(b)s(e)f(used)f(to)i(answ)m(er)g
(queries)f(with)g(resp)s(ect)g(to)i(v)-5 b(arying)30
b(evidence.)150 1294 y
SDict begin H.S end
 150 1294 a 150 1294 a
SDict begin 13.6 H.A end
 150 1294
a 150 1294 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.3) cvn /DEST pdfmark
end
 150 1294 a 100 x Fl(2.3)53 b(Compiling)35
b(a)g(Ba)m(y)m(esian)g(net)m(w)m(orks)150 1559 y Fh(The)29
b(pap)s(er)g(presen)m(ts)g(a)h(algorithm,)h(called)g
Ff(V)20 b(E)p 1864 1559 28 4 v 38 w(C)7 b(O)s(M)j(P)j(LE)5
b(T)13 b(E)5 b Fh(,)30 b(to)g(compile)g(a)g(p)s(olynomial)g(repre-)150
1672 y(sen)m(tation)d(of)f(a)g(BN)h Ff(V)20 b(E)p 1017
1672 V 38 w(C)7 b(O)s(M)j(P)j(LE)5 b(T)13 b(E)30 b Fh(receiv)m(es)e(as)
e(input)f(a)h(BN)g(and)f(an)h(elimination)h(ordering)f(of)150
1785 y(the)32 b(v)-5 b(ariables.)45 b(The)32 b(result)f(is)h(a)g(more)g
(compact)h(p)s(olynomial)f(follo)m(wing)h(the)f(elimination)h(ordering)
150 1898 y(used)25 b(to)i(construct)f(this)g(new)g(presen)m(tation.)40
b(Thereb)m(y)-8 b(,)27 b(a)f(ro)s(oted)h(D)m(A)m(G)g(can)g(b)s(e)e(dra)
m(wn)g(for)h(the)g(com-)150 2011 y(piled)36 b(p)s(olynomial.)60
b(F)-8 b(or)38 b(instance,)h(the)e(compiled)g(p)s(olynomial)g(in)f
(\(4\))i(follo)m(wing)g(the)f(elimination)150 2124 y(ordering)30
b Fe(f)p Ff(B)5 b(;)15 b(A)p Fe(g)31 b Fh(is)743 2341
y
SDict begin H.S end
 743 2341 a 743 2341 a
SDict begin 13.6 H.A end
 743 2341 a 743 2341 a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.5) cvn /DEST pdfmark
end
 743 2341
a Fe(F)k Fh(=)25 b Ff(\022)982 2355 y Fc(A)1038 2341
y Ff(\025)1091 2355 y Fc(A)1148 2341 y Fh(\()p Ff(\022)1226
2360 y Fc(B)s Fb(j)p Fc(A)1360 2341 y Ff(\025)1413 2355
y Fc(B)1493 2341 y Fh(+)20 b Ff(\022)1644 2348 y Fa(\026)1627
2365 y Fc(B)t Fb(j)p Fc(A)1760 2341 y Ff(\025)1830 2348
y Fa(\026)1813 2365 y Fc(B)1874 2341 y Fh(\))g(+)g Ff(\022)2082
2348 y Fa(\026)2063 2365 y Fc(A)2120 2341 y Ff(\025)2192
2348 y Fa(\026)2173 2365 y Fc(A)2230 2341 y Fh(\()p Ff(\022)2308
2365 y Fc(B)s Fb(j)2403 2348 y Fa(\026)2384 2365 y Fc(A)2441
2341 y Ff(\025)2494 2355 y Fc(B)2575 2341 y Fh(+)g Ff(\022)2725
2348 y Fa(\026)2709 2365 y Fc(B)s Fb(j)2803 2348 y Fa(\026)2785
2365 y Fc(A)2842 2341 y Ff(\025)2911 2348 y Fa(\026)2895
2365 y Fc(B)2955 2341 y Fh(\))p 0 TeXcolorgray 644 w(\(5\))p
0 TeXcolorgray 150 2559 a(and)30 b(depicted)g(in)g(Figure)h
Fl(??)150 2696 y
SDict begin H.S end
 150 2696 a 150 2696 a
SDict begin 13.6 H.A end
 150 2696 a 150
2696 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.4) cvn /DEST pdfmark
end
 150 2696 a 100 x Fl(2.4)53 b(Ev)-6 b(aluating)35
b(and)f(Di\013eren)m(tiating)h(a)g(P)m(olynomial)h(Represen)m(tation)
150 2862 y
SDict begin H.S end
 150 2862 a 150 2862 a
SDict begin 13.6 H.A end
 150 2862 a 150 2862
a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 150 2862 a 103 x Fj(3.)49 b(Criticsm)150 3025 y
SDict begin H.S end
 150
3025 a 150 3025 a
SDict begin 13.6 H.A end
 150 3025 a 150 3025 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.3.1) cvn /DEST pdfmark
end
 150 3025 a 117
x Fl(3.1)k(Adv)-6 b(an)m(tages)150 3307 y Fh(simplify)26
b(inference)h(systems)f(to)h(the)g(p)s(oin)m(t)f(where)g(they)h(could)g
(b)s(e)e(implemen)m(ted)i(cost-e\013ectiv)m(ely)k(on)150
3420 y(a)g(v)-5 b(ariet)m(y)32 b(of)e(soft)m(w)m(are)i(and)e(hardw)m
(are)g(platforms.)291 3538 y(three)d(main)g(adv)-5 b(an)m(tage)28
b(compile)g(the)f(p)s(olynomial)g(in)f(linear)i(in)e(the)h(size)h(o)s
(d)e(the)h(p)s(olynomial)g(By)150 3651 y(this)g(pro)s(cess)g(and)g(can)
h(answ)m(er)f(a)h(large)g(n)m(um)m(b)s(er)e(of)i(queries)f(The)g
(partial)h(deriv)-5 b(ativ)m(e)29 b(of)f Ff(\025)f Fh(and)g
Ff(\022)j Fh(can)150 3764 y(b)s(e)g(computed)g(sim)m(ultaneously)h(in)f
(time)h(linear)g(in)f(the)h(size)g(of)f(the)h(p)s(olynomial.)150
3901 y
SDict begin H.S end
 150 3901 a 150 3901 a
SDict begin 13.6 H.A end
 150 3901 a 150 3901 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.3.2) cvn /DEST pdfmark
end
 150
3901 a 100 x Fl(3.2)53 b(Disadv)-6 b(an)m(tages)150 4067
y
SDict begin H.S end
 150 4067 a 150 4067 a
SDict begin 13.6 H.A end
 150 4067 a 150 4067 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.3.3) cvn /DEST pdfmark
end
 150 4067
a 99 x Fl(3.3)53 b(Comparisons)35 b(with)g(Di\013eren)m(t)f(Approac)m
(hs)150 4332 y Fh(w)m(ell)d(written.)41 b(UAI)31 b(standards)291
4449 y(no)f(bac)m(kgorund)h(hea)m(vy)g(notation.)42 b(mathematical)32
b(deep)291 4566 y(No)f(exp)s(erimen)m(tal)g(results)f(or)h
(implications)291 4684 y(in)m(tractabilit)m(y)-8 b(.)44
b(SPN)30 b(solv)m(ed)291 4801 y(adv)-5 b(an)m(tage)28
b(do)s(es)e(not)h(require)f(a)g(lot)h(of)g(pro)s(cessing)f(during)f
(running)f(time)j(of)f(execution)i(emm)m(b)s(e-)150 4914
y(ded)23 b(ystems)h(that)h(normally)f(uses)g(F)-8 b(uzzy)25
b(logic)g(or)f(rule)g(base)g(system)g(starts)g(using)g(ba)m(y)m(esian)h
(net)m(w)m(ork)150 5027 y(example)31 b(adv)-5 b(an)m(tage)32
b(of)f(that)291 5144 y(t)m(yp)s(o)e("Giv)m(en)h(a)f(v)-5
b(ariable)30 b(elimination)g(order)e(of)h([with])g Ff(w)r
Fh(")g(on)g(the)g(p)s(olynamoial)g(represen)m(taion)150
5257 y(example,)i(the)g(the)f(third)g(net)m(w)m(ork)h(parameter)g
Ff(\022)s(B)5 b Fe(j)p Ff(A)29 b Fh(shep)s(ould)g(b)s(e)h
Ff(\022)s(B)5 b Fe(j)2769 5234 y Fh(\026)2746 5257 y
Ff(A)p 0 TeXcolorgray 1929 5506 a Fi(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142
-308 a
SDict begin H.S end
 142 -308 a 142 -308 a
SDict begin H.R end
 142 -308 a 142 -308 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 142
-308 a 0 TeXcolorgray 665 -200 a Fn(Beyond)31 b(Quantum)g(Computing:)41
b(Are)31 b(we)h(living)g(in)f(a)g(simula)-6 b(tion)p
0 TeXcolorgray 150 157 a
SDict begin H.S end
 150 157 a 150 157 a
SDict begin 13.6 H.A end
 150 157
a 150 157 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 150 157 a 92 x Fj(4.)49 b(Conclusion)150
545 y
SDict begin H.S end
 150 545 a 150 545 a
SDict begin 14 H.A end
 150 545 a 150 545 a
SDict begin [/View [/XYZ H.V]/Dest (section*.4) cvn /DEST pdfmark end
 150 545
a Fj(References)p 0 TeXcolorgray -77 718 a
SDict begin H.S end
 -77 718 a
105 718 a
SDict begin 13.6 H.A end
 105 718 a 105 718 a
SDict begin [/View [/XYZ H.V]/Dest (cite.chavira2007compiling) cvn
/DEST pdfmark end
 105 718 a 0 TeXcolorgray
45 w Fh(Mark)32 b(Cha)m(vira)h(and)e(Adnan)g(Darwic)m(he.)47
b(Compiling)32 b(ba)m(y)m(esian)i(net)m(w)m(orks)e(using)g(v)-5
b(ariable)33 b(elimina-)241 831 y(tion.)41 b(In)30 b
Fg(IJCAI)p Fh(,)g(pages)h(2443{2449,)j(2007.)p 0 TeXcolorgray
-77 1018 a
SDict begin H.S end
 -77 1018 a 105 1018 a
SDict begin 13.6 H.A end
 105 1018 a 105 1018
a
SDict begin [/View [/XYZ H.V]/Dest (cite.chavira2006compiling) cvn
/DEST pdfmark end
 105 1018 a 0 TeXcolorgray 45 w Fh(Mark)g(Cha)m(vira,)h(Adnan)d
(Darwic)m(he,)k(and)d(Manfred)g(Jaeger.)51 b(Compiling)34
b(relational)i(ba)m(y)m(esian)e(net-)241 1131 y(w)m(orks)f(for)g(exact)
h(inference.)49 b Fg(International)38 b(Journal)e(of)f(Appr)-5
b(oximate)38 b(R)-5 b(e)g(asoning)p Fh(,)36 b(42\(1\):4{20,)241
1244 y(2006.)p 0 TeXcolorgray -77 1432 a
SDict begin H.S end
 -77 1432 a 105
1432 a
SDict begin 13.6 H.A end
 105 1432 a 105 1432 a
SDict begin [/View [/XYZ H.V]/Dest (cite.darwiche00) cvn /DEST pdfmark
end
 105 1432 a 0 TeXcolorgray
45 w Fh(Adnan)28 b(Darwic)m(he.)39 b(A)29 b(di\013eren)m(tial)h
(approac)m(h)f(to)h(inference)f(in)g(ba)m(y)m(esian)h(net)m(w)m(orks.)
38 b Fg(Pr)-5 b(o)g(c)g(e)g(e)g(dings)34 b(of)241 1545
y(the)f(Sixte)-5 b(enth)34 b(Confer)-5 b(enc)g(e)33 b(on)g(Unc)-5
b(ertainty)34 b(in)e(A)n(rti\014cial)h(Intel)5 b(ligenc)-5
b(e)32 b(\(UAI2000\))p Fh(,)g(2000.)p 0 TeXcolorgray
-77 1732 a
SDict begin H.S end
 -77 1732 a 105 1732 a
SDict begin 13.6 H.A end
 105 1732 a 105 1732
a
SDict begin [/View [/XYZ H.V]/Dest (cite.darwiche2003differential)
cvn /DEST pdfmark end
 105 1732 a 0 TeXcolorgray 45 w Fh(Adnan)c(Darwic)m(he.)39
b(A)29 b(di\013eren)m(tial)i(approac)m(h)e(to)h(inference)f(in)f(ba)m
(y)m(esian)j(net)m(w)m(orks.)39 b Fg(Journal)32 b(of)g(the)241
1845 y(A)n(CM)f(\(JA)n(CM\))p Fh(,)f(50\(3\):280{305,)36
b(2003.)p 0 TeXcolorgray -77 2033 a
SDict begin H.S end
 -77 2033 a 105 2033
a
SDict begin 13.6 H.A end
 105 2033 a 105 2033 a
SDict begin [/View [/XYZ H.V]/Dest (cite.darwiche2009modeling) cvn
/DEST pdfmark end
 105 2033 a 0 TeXcolorgray 45
w Fh(Adnan)c(Darwic)m(he.)48 b Fg(Mo)-5 b(deling)35 b(and)g(r)-5
b(e)g(asoning)37 b(with)e(Bayesian)h(networks)p Fh(.)48
b(Cam)m(bridge)33 b(Univ)m(ersit)m(y)241 2146 y(Press,)d(2009.)p
0 TeXcolorgray -77 2333 a
SDict begin H.S end
 -77 2333 a 105 2333 a
SDict begin 13.6 H.A end
 105 2333
a 105 2333 a
SDict begin [/View [/XYZ H.V]/Dest (cite.koll09) cvn /DEST pdfmark
end
 105 2333 a 0 TeXcolorgray 45 w Fh(D.)41
b(Koller)h(and)e(N.)h(F)-8 b(riedman.)71 b Fg(Pr)-5 b(ob)g(abilistic)43
b(Gr)-5 b(aphic)g(al)46 b(Mo)-5 b(dels:)61 b(Principles)43
b(and)g(T)-7 b(e)i(chniques)p Fh(.)241 2446 y(MIT)30
b(Press,)g(2009.)p 0 TeXcolorgray -77 2634 a
SDict begin H.S end
 -77 2634
a 105 2634 a
SDict begin 13.6 H.A end
 105 2634 a 105 2634 a
SDict begin [/View [/XYZ H.V]/Dest (cite.park2004differential) cvn
/DEST pdfmark end
 105 2634 a 0 TeXcolorgray
45 w Fh(James)f(D)h(P)m(ark)g(and)e(Adnan)h(Darwic)m(he.)40
b(A)29 b(di\013eren)m(tial)i(seman)m(tics)g(for)e(join)m(tree)h
(algorithms.)40 b Fg(A)n(rti-)241 2747 y(\014cial)33
b(Intel)5 b(ligenc)-5 b(e)p Fh(,)30 b(156\(2\):197{216,)37
b(2004.)p 0 TeXcolorgray -77 2934 a
SDict begin H.S end
 -77 2934 a 105 2934
a
SDict begin 13.6 H.A end
 105 2934 a 105 2934 a
SDict begin [/View [/XYZ H.V]/Dest (cite.pear88) cvn /DEST pdfmark
end
 105 2934 a 0 TeXcolorgray 45
w Fh(J.)f(P)m(earl.)59 b Fg(Pr)-5 b(ob)g(abilistic)39
b(R)-5 b(e)g(asoning)40 b(in)d(Intel)5 b(ligent)38 b(Systems:)54
b(Networks)38 b(of)g(Plausible)g(Infer)-5 b(enc)g(e)p
Fh(.)241 3047 y(Morgan)31 b(Kaufmann,)e(1988.)p 0 TeXcolorgray
1929 5506 a Fi(5)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
